{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0","program":"/home/dumbelldor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","-C","metadata=64abd20a4d6193b8","-C","extra-filename=-64abd20a4d6193b8","--out-dir","/home/dumbelldor/Documents/Rust/durableMap/target/rls/debug/deps","-L","dependency=/home/dumbelldor/Documents/Rust/durableMap/target/rls/debug/deps","--extern","pin_project_lite=/home/dumbelldor/Documents/Rust/durableMap/target/rls/debug/deps/libpin_project_lite-dc48794f8143bdf0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dumbelldor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dumbelldor/Documents/Rust/durableMap/target/rls/debug/deps/libtokio-64abd20a4d6193b8.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[14960236295298323518,0]},"crate_root":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src","external_crates":[{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake_list.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[17818613179532769076,0]}}],"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":0,"byte_end":19217,"line_start":1,"line_end":537,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12560},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/support.rs","byte_start":35710,"byte_end":35716,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":2,"index":43300},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/support.rs","byte_start":35736,"byte_end":35739,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":2,"index":45867},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/support.rs","byte_start":35760,"byte_end":35764,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44718,"byte_end":44730,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44775,"byte_end":44784,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44829,"byte_end":44838,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44885,"byte_end":44895,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44936,"byte_end":44943,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":1,"index":3793},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":45113,"byte_end":45118,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":1,"index":10553},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":45120,"byte_end":45129,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":1,"index":3791},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":45131,"byte_end":45137,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":1,"index":10686},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":45139,"byte_end":45147,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84358,"byte_end":84371,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":384}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12433094,"byte_end":12433101,"line_start":214,"line_end":214,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":1174}},{"kind":"Use","ref_id":{"krate":0,"index":2839},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12433226,"byte_end":12433236,"line_start":222,"line_end":222,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":1174}},{"kind":"Use","ref_id":{"krate":0,"index":2828},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12433238,"byte_end":12433244,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":1174}},{"kind":"Use","ref_id":{"krate":0,"index":2846},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12433246,"byte_end":12433261,"line_start":222,"line_end":222,"column_start":42,"column_end":57},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":1174}},{"kind":"Use","ref_id":{"krate":0,"index":5322},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641648,"byte_end":12641656,"line_start":433,"line_end":433,"column_start":32,"column_end":40},"alias_span":null,"name":"Notified","value":"","parent":{"krate":0,"index":2929}},{"kind":"Use","ref_id":{"krate":0,"index":5158},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641704,"byte_end":12641711,"line_start":437,"line_end":437,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641713,"byte_end":12641730,"line_start":437,"line_end":437,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3300},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689438,"byte_end":12689445,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689447,"byte_end":12689458,"line_start":93,"line_end":93,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689460,"byte_end":12689466,"line_start":93,"line_end":93,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3297},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689468,"byte_end":12689476,"line_start":93,"line_end":93,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3287},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689478,"byte_end":12689484,"line_start":93,"line_end":93,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3707},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689562,"byte_end":12689579,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689581,"byte_end":12689598,"line_start":100,"line_end":100,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689600,"byte_end":12689615,"line_start":100,"line_end":100,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":3158}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641812,"byte_end":12641817,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3815},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641819,"byte_end":12641829,"line_start":444,"line_end":444,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5295},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641831,"byte_end":12641843,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5296},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641831,"byte_end":12641843,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3819},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641845,"byte_end":12641860,"line_start":444,"line_end":444,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3822},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641862,"byte_end":12641878,"line_start":444,"line_end":444,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5300},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641929,"byte_end":12641935,"line_start":447,"line_end":447,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5393},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642026,"byte_end":12642038,"line_start":452,"line_end":452,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5383},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642040,"byte_end":12642055,"line_start":452,"line_end":452,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5398},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642102,"byte_end":12642111,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5402},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642113,"byte_end":12642128,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5409},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642130,"byte_end":12642150,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5414},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642190,"byte_end":12642196,"line_start":458,"line_end":458,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4439},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642236,"byte_end":12642256,"line_start":459,"line_end":459,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4500},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642297,"byte_end":12642318,"line_start":460,"line_end":460,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4556},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642366,"byte_end":12642393,"line_start":461,"line_end":461,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4609},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642427,"byte_end":12642442,"line_start":462,"line_end":462,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4662},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642477,"byte_end":12642493,"line_start":463,"line_end":463,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4716},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642535,"byte_end":12642557,"line_start":464,"line_end":464,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4983},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642662,"byte_end":12642670,"line_start":470,"line_end":470,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":5422},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642672,"byte_end":12642680,"line_start":470,"line_end":470,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139384,"byte_end":139393,"line_start":279,"line_end":279,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":2057},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139395,"byte_end":139405,"line_start":279,"line_end":279,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5801},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139449,"byte_end":139463,"line_start":282,"line_end":282,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5804},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139500,"byte_end":139505,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5552},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139626,"byte_end":139635,"line_start":292,"line_end":292,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5817},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139673,"byte_end":139684,"line_start":295,"line_end":295,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5808},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139686,"byte_end":139694,"line_start":295,"line_end":295,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5712},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139742,"byte_end":139750,"line_start":298,"line_end":298,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":5788},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139804,"byte_end":139817,"line_start":301,"line_end":301,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":6806},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139819,"byte_end":139832,"line_start":301,"line_end":301,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":914}},{"kind":"Use","ref_id":{"krate":0,"index":6839},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":140086,"byte_end":140101,"line_start":315,"line_end":315,"column_start":36,"column_end":51},"alias_span":null,"name":"TaskLocalFuture","value":"","parent":{"krate":0,"index":5797}},{"kind":"Use","ref_id":{"krate":0,"index":5804},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15727,"byte_end":15732,"line_start":418,"line_end":418,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6115},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111755,"byte_end":13111760,"line_start":94,"line_end":94,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6114},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111762,"byte_end":13111773,"line_start":94,"line_end":94,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6775},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111775,"byte_end":13111780,"line_start":94,"line_end":94,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111836,"byte_end":13111843,"line_start":99,"line_end":99,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6362},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111879,"byte_end":13111887,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6363},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111889,"byte_end":13111900,"line_start":102,"line_end":102,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6620},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111902,"byte_end":13111910,"line_start":102,"line_end":102,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6602},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111912,"byte_end":13111930,"line_start":102,"line_end":102,"column_start":53,"column_end":71},"alias_span":null,"name":"MissedTickBehavior","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6432},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111980,"byte_end":13111987,"line_start":106,"line_end":106,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6434},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111989,"byte_end":13111999,"line_start":106,"line_end":106,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":0,"index":6735},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13112001,"byte_end":13112008,"line_start":106,"line_end":106,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":5839}},{"kind":"Use","ref_id":{"krate":2,"index":45715},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13112121,"byte_end":13112129,"line_start":114,"line_end":114,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":5839}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":0,"byte_end":19217,"line_start":1,"line_end":537,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":99},{"krate":0,"index":136},{"krate":0,"index":384},{"krate":0,"index":475},{"krate":0,"index":754},{"krate":0,"index":1174},{"krate":0,"index":886},{"krate":0,"index":2928},{"krate":0,"index":914},{"krate":0,"index":5836},{"krate":0,"index":5839},{"krate":0,"index":915},{"krate":0,"index":1057},{"krate":0,"index":1058}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_must_use)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":220,"byte_end":245,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":450,"byte_end":533,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":534,"byte_end":537,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":538,"byte_end":618,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":619,"byte_end":691,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":692,"byte_end":728,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":729,"byte_end":732,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":733,"byte_end":800,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":801,"byte_end":881,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":882,"byte_end":905,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":906,"byte_end":993,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":994,"byte_end":1067,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1068,"byte_end":1146,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1147,"byte_end":1227,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1228,"byte_end":1278,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1283,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1344,"byte_end":1376,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1377,"byte_end":1400,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1401,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1425,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1452,"byte_end":1473,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1474,"byte_end":1493,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1494,"byte_end":1523,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1524,"byte_end":1551,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1552,"byte_end":1571,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1572,"byte_end":1601,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1602,"byte_end":1648,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1649,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1653,"byte_end":1674,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1675,"byte_end":1678,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1679,"byte_end":1758,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1759,"byte_end":1832,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1833,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1913,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1929,"byte_end":1932,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":1933,"byte_end":2005,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2006,"byte_end":2043,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2048,"byte_end":2059,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2060,"byte_end":2110,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2111,"byte_end":2118,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2119,"byte_end":2122,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2123,"byte_end":2153,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2154,"byte_end":2157,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2158,"byte_end":2239,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2240,"byte_end":2325,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2326,"byte_end":2410,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2411,"byte_end":2441,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2442,"byte_end":2445,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2446,"byte_end":2462,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2463,"byte_end":2466,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2467,"byte_end":2533,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2534,"byte_end":2537,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2538,"byte_end":2549,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2550,"byte_end":2600,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2601,"byte_end":2608,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2609,"byte_end":2612,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2613,"byte_end":2640,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2641,"byte_end":2644,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2645,"byte_end":2725,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2726,"byte_end":2808,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2809,"byte_end":2890,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2891,"byte_end":2926,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2927,"byte_end":2930,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2931,"byte_end":2947,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2948,"byte_end":2951,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":2952,"byte_end":3034,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3035,"byte_end":3085,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3086,"byte_end":3089,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3090,"byte_end":3101,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3102,"byte_end":3157,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3158,"byte_end":3165,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3166,"byte_end":3169,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3170,"byte_end":3195,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3196,"byte_end":3199,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3200,"byte_end":3276,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3277,"byte_end":3360,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3361,"byte_end":3404,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3405,"byte_end":3408,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3409,"byte_end":3488,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3489,"byte_end":3572,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3573,"byte_end":3651,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3652,"byte_end":3671,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3672,"byte_end":3675,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3676,"byte_end":3749,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3750,"byte_end":3765,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3766,"byte_end":3769,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3770,"byte_end":3813,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3814,"byte_end":3846,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3847,"byte_end":3882,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3883,"byte_end":3926,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3927,"byte_end":3980,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3981,"byte_end":3984,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":3985,"byte_end":4063,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4064,"byte_end":4120,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4121,"byte_end":4124,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4125,"byte_end":4198,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4199,"byte_end":4219,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4220,"byte_end":4295,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4296,"byte_end":4308,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4309,"byte_end":4389,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4390,"byte_end":4420,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4421,"byte_end":4424,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4425,"byte_end":4501,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4502,"byte_end":4514,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4515,"byte_end":4518,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4519,"byte_end":4551,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4552,"byte_end":4585,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4586,"byte_end":4623,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4624,"byte_end":4661,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4662,"byte_end":4693,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4732,"byte_end":4803,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4804,"byte_end":4884,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4885,"byte_end":4973,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4974,"byte_end":4998,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":4999,"byte_end":5002,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5003,"byte_end":5078,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5079,"byte_end":5082,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5083,"byte_end":5115,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5116,"byte_end":5149,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5150,"byte_end":5189,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5190,"byte_end":5227,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5228,"byte_end":5231,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5232,"byte_end":5310,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5311,"byte_end":5395,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5396,"byte_end":5480,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5481,"byte_end":5574,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5575,"byte_end":5666,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5667,"byte_end":5706,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5707,"byte_end":5710,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5711,"byte_end":5789,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5790,"byte_end":5863,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5864,"byte_end":5936,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":5937,"byte_end":6015,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6016,"byte_end":6086,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6087,"byte_end":6090,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6091,"byte_end":6117,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6118,"byte_end":6156,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6157,"byte_end":6197,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6198,"byte_end":6238,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#current-thread-scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6239,"byte_end":6292,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/ [rt-multi-thread]: runtime/index.html#multi-thread-scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6293,"byte_end":6357,"line_start":164,"line_end":164,"column_start":1,"column_end":65}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6358,"byte_end":6413,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6414,"byte_end":6417,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6418,"byte_end":6458,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6459,"byte_end":6462,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6463,"byte_end":6542,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6543,"byte_end":6620,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6621,"byte_end":6701,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6702,"byte_end":6776,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6777,"byte_end":6856,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6857,"byte_end":6934,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":6935,"byte_end":7008,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7009,"byte_end":7085,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7086,"byte_end":7167,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7168,"byte_end":7238,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7239,"byte_end":7313,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7314,"byte_end":7390,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7391,"byte_end":7468,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7469,"byte_end":7472,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7473,"byte_end":7550,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7551,"byte_end":7554,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7555,"byte_end":7595,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7596,"byte_end":7649,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7650,"byte_end":7721,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7722,"byte_end":7725,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7726,"byte_end":7733,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7734,"byte_end":7752,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7753,"byte_end":7774,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7775,"byte_end":7819,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7820,"byte_end":7823,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7824,"byte_end":7884,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7885,"byte_end":7937,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7938,"byte_end":7973,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7974,"byte_end":7985,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7986,"byte_end":7989,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":7990,"byte_end":8045,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8046,"byte_end":8121,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8122,"byte_end":8139,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8140,"byte_end":8177,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8178,"byte_end":8183,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8184,"byte_end":8191,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8192,"byte_end":8195,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8196,"byte_end":8274,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should use a separate thread pool dedicated to CPU bound tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8275,"byte_end":8357,"line_start":207,"line_end":207,"column_start":1,"column_end":83}},{"value":"/ For example, you could consider using the [rayon] library for CPU-bound","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8358,"byte_end":8433,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ tasks. It is also possible to create an extra Tokio runtime dedicated to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8434,"byte_end":8510,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ CPU-bound tasks, but if you do this, you should be careful that the extra","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8511,"byte_end":8588,"line_start":210,"line_end":210,"column_start":1,"column_end":78}},{"value":"/ runtime runs _only_ CPU-bound tasks, as IO-bound tasks on that runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8589,"byte_end":8663,"line_start":211,"line_end":211,"column_start":1,"column_end":75}},{"value":"/ will behave poorly.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8664,"byte_end":8687,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8688,"byte_end":8691,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Hint: If using rayon, you can use a [`oneshot`] channel to send the result back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8692,"byte_end":8775,"line_start":214,"line_end":214,"column_start":1,"column_end":84}},{"value":"/ to Tokio when the rayon task finishes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8776,"byte_end":8818,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8819,"byte_end":8822,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8823,"byte_end":8857,"line_start":217,"line_end":217,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8858,"byte_end":8895,"line_start":218,"line_end":218,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8896,"byte_end":8899,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8900,"byte_end":8922,"line_start":220,"line_end":220,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8923,"byte_end":8926,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":8927,"byte_end":9006,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9007,"byte_end":9054,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9055,"byte_end":9058,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9059,"byte_end":9138,"line_start":225,"line_end":225,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9139,"byte_end":9219,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9220,"byte_end":9300,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9301,"byte_end":9372,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9373,"byte_end":9404,"line_start":229,"line_end":229,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9405,"byte_end":9408,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9409,"byte_end":9489,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9490,"byte_end":9550,"line_start":232,"line_end":232,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9551,"byte_end":9554,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9555,"byte_end":9634,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9635,"byte_end":9704,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9705,"byte_end":9782,"line_start":236,"line_end":236,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9783,"byte_end":9839,"line_start":237,"line_end":237,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9840,"byte_end":9920,"line_start":238,"line_end":238,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9921,"byte_end":9966,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":9967,"byte_end":10046,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10047,"byte_end":10081,"line_start":241,"line_end":241,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10082,"byte_end":10085,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10086,"byte_end":10114,"line_start":243,"line_end":243,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10115,"byte_end":10154,"line_start":244,"line_end":244,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10155,"byte_end":10196,"line_start":245,"line_end":245,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10197,"byte_end":10242,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10243,"byte_end":10267,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10268,"byte_end":10298,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10299,"byte_end":10325,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10326,"byte_end":10358,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10359,"byte_end":10386,"line_start":251,"line_end":251,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10387,"byte_end":10415,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10416,"byte_end":10440,"line_start":253,"line_end":253,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10441,"byte_end":10477,"line_start":254,"line_end":254,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10478,"byte_end":10516,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10517,"byte_end":10520,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10521,"byte_end":10535,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10536,"byte_end":10539,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10540,"byte_end":10569,"line_start":259,"line_end":259,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10570,"byte_end":10573,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10574,"byte_end":10587,"line_start":261,"line_end":261,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10588,"byte_end":10620,"line_start":262,"line_end":262,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10621,"byte_end":10670,"line_start":263,"line_end":263,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10671,"byte_end":10674,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10675,"byte_end":10693,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10694,"byte_end":10757,"line_start":266,"line_end":266,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10758,"byte_end":10824,"line_start":267,"line_end":267,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10825,"byte_end":10828,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10829,"byte_end":10843,"line_start":269,"line_end":269,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10844,"byte_end":10903,"line_start":270,"line_end":270,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10904,"byte_end":10907,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10908,"byte_end":10945,"line_start":272,"line_end":272,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10946,"byte_end":10986,"line_start":273,"line_end":273,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10987,"byte_end":10990,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":10991,"byte_end":11071,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11072,"byte_end":11094,"line_start":276,"line_end":276,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11095,"byte_end":11158,"line_start":277,"line_end":277,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11159,"byte_end":11199,"line_start":278,"line_end":278,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11200,"byte_end":11250,"line_start":279,"line_end":279,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11251,"byte_end":11286,"line_start":280,"line_end":280,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11287,"byte_end":11322,"line_start":281,"line_end":281,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11323,"byte_end":11406,"line_start":282,"line_end":282,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11407,"byte_end":11442,"line_start":283,"line_end":283,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11443,"byte_end":11468,"line_start":284,"line_end":284,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11469,"byte_end":11491,"line_start":285,"line_end":285,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11492,"byte_end":11495,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11496,"byte_end":11538,"line_start":287,"line_end":287,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11539,"byte_end":11611,"line_start":288,"line_end":288,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11612,"byte_end":11690,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11691,"byte_end":11722,"line_start":290,"line_end":290,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11723,"byte_end":11744,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11745,"byte_end":11762,"line_start":292,"line_end":292,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11763,"byte_end":11778,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11779,"byte_end":11788,"line_start":294,"line_end":294,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11789,"byte_end":11794,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11795,"byte_end":11802,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11803,"byte_end":11806,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11807,"byte_end":11827,"line_start":298,"line_end":298,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11828,"byte_end":11831,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11832,"byte_end":11913,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11914,"byte_end":11992,"line_start":301,"line_end":301,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":11993,"byte_end":12073,"line_start":302,"line_end":302,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12074,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12152,"byte_end":12235,"line_start":304,"line_end":304,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12236,"byte_end":12313,"line_start":305,"line_end":305,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12314,"byte_end":12401,"line_start":306,"line_end":306,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12402,"byte_end":12483,"line_start":307,"line_end":307,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12484,"byte_end":12493,"line_start":308,"line_end":308,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12494,"byte_end":12497,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all features listed below except `test-util` and `tracing`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12498,"byte_end":12579,"line_start":310,"line_end":310,"column_start":1,"column_end":82}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12580,"byte_end":12653,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12654,"byte_end":12694,"line_start":312,"line_end":312,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12695,"byte_end":12781,"line_start":313,"line_end":313,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12782,"byte_end":12833,"line_start":314,"line_end":314,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12834,"byte_end":12894,"line_start":315,"line_end":315,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12895,"byte_end":12972,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/          `UdpSocket`, as well as (on Unix-like systems) `AsyncFd` and (on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":12973,"byte_end":13050,"line_start":317,"line_end":317,"column_start":1,"column_end":78}},{"value":"/          FreeBSD) `PollAio`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13051,"byte_end":13083,"line_start":318,"line_end":318,"column_start":1,"column_end":33}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13084,"byte_end":13161,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13162,"byte_end":13195,"line_start":320,"line_end":320,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13196,"byte_end":13244,"line_start":321,"line_end":321,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13245,"byte_end":13314,"line_start":322,"line_end":322,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13315,"byte_end":13361,"line_start":323,"line_end":323,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13362,"byte_end":13412,"line_start":324,"line_end":324,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13413,"byte_end":13451,"line_start":325,"line_end":325,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13452,"byte_end":13530,"line_start":326,"line_end":326,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13531,"byte_end":13534,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13535,"byte_end":13617,"line_start":328,"line_end":328,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13618,"byte_end":13640,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13641,"byte_end":13644,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13645,"byte_end":13670,"line_start":331,"line_end":331,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13671,"byte_end":13674,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13675,"byte_end":13743,"line_start":333,"line_end":333,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13744,"byte_end":13807,"line_start":334,"line_end":334,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13808,"byte_end":13825,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13826,"byte_end":13829,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13830,"byte_end":13909,"line_start":337,"line_end":337,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13910,"byte_end":13987,"line_start":338,"line_end":338,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":13988,"byte_end":14021,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14022,"byte_end":14025,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14026,"byte_end":14051,"line_start":341,"line_end":341,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14052,"byte_end":14055,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14056,"byte_end":14141,"line_start":343,"line_end":343,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14142,"byte_end":14226,"line_start":344,"line_end":344,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14227,"byte_end":14311,"line_start":345,"line_end":345,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14312,"byte_end":14351,"line_start":346,"line_end":346,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14352,"byte_end":14355,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14356,"byte_end":14396,"line_start":348,"line_end":348,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14397,"byte_end":14400,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":14401,"byte_end":14498,"line_start":350,"line_end":350,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":89}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15131,"byte_end":15143,"line_start":369,"line_end":369,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/mod.rs","byte_start":19254,"byte_end":19274,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":136},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37170,"byte_end":37247,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37248,"byte_end":37251,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37252,"byte_end":37323,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37324,"byte_end":37404,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37405,"byte_end":37479,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37480,"byte_end":37483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37484,"byte_end":37514,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37515,"byte_end":37518,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37519,"byte_end":37599,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37600,"byte_end":37677,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37678,"byte_end":37755,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37756,"byte_end":37836,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37837,"byte_end":37915,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37916,"byte_end":37981,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37982,"byte_end":37985,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":37986,"byte_end":38058,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38059,"byte_end":38126,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38127,"byte_end":38206,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38207,"byte_end":38281,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38282,"byte_end":38356,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38357,"byte_end":38374,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38375,"byte_end":38378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38379,"byte_end":38443,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38444,"byte_end":38519,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38520,"byte_end":38595,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38596,"byte_end":38673,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38674,"byte_end":38677,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38678,"byte_end":38754,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38755,"byte_end":38830,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38831,"byte_end":38911,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38912,"byte_end":38983,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":38984,"byte_end":39053,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39054,"byte_end":39057,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39058,"byte_end":39130,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39131,"byte_end":39211,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39212,"byte_end":39265,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39266,"byte_end":39269,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39270,"byte_end":39283,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39284,"byte_end":39324,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39325,"byte_end":39349,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39350,"byte_end":39353,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39354,"byte_end":39372,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39373,"byte_end":39412,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39413,"byte_end":39462,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39463,"byte_end":39496,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39497,"byte_end":39500,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39501,"byte_end":39531,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39532,"byte_end":39575,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39576,"byte_end":39579,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39580,"byte_end":39630,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39631,"byte_end":39645,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39646,"byte_end":39651,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39652,"byte_end":39659,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39660,"byte_end":39663,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39664,"byte_end":39693,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39694,"byte_end":39734,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39735,"byte_end":39771,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39772,"byte_end":39813,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39814,"byte_end":39817,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39818,"byte_end":39853,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39854,"byte_end":39857,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39858,"byte_end":39939,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":39940,"byte_end":40014,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40015,"byte_end":40093,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40094,"byte_end":40138,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40139,"byte_end":40142,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40143,"byte_end":40213,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40214,"byte_end":40292,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40293,"byte_end":40371,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40372,"byte_end":40449,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40450,"byte_end":40453,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40454,"byte_end":40529,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40530,"byte_end":40568,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40569,"byte_end":40572,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40573,"byte_end":40586,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40587,"byte_end":40641,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40642,"byte_end":40666,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40667,"byte_end":40670,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40671,"byte_end":40689,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40690,"byte_end":40729,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40730,"byte_end":40775,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40776,"byte_end":40819,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40820,"byte_end":40859,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40860,"byte_end":40863,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40864,"byte_end":40898,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40899,"byte_end":40944,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40945,"byte_end":40948,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40949,"byte_end":40980,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40981,"byte_end":40995,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":40996,"byte_end":41001,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41002,"byte_end":41009,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41010,"byte_end":41013,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41014,"byte_end":41095,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41096,"byte_end":41174,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41175,"byte_end":41237,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41238,"byte_end":41241,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41242,"byte_end":41255,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41256,"byte_end":41308,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41309,"byte_end":41333,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41334,"byte_end":41337,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41338,"byte_end":41356,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41357,"byte_end":41396,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41397,"byte_end":41444,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41445,"byte_end":41454,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41455,"byte_end":41502,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41503,"byte_end":41506,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41507,"byte_end":41549,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41550,"byte_end":41591,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41592,"byte_end":41595,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41596,"byte_end":41656,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41657,"byte_end":41691,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41692,"byte_end":41695,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41696,"byte_end":41786,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41787,"byte_end":41790,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41791,"byte_end":41805,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41806,"byte_end":41811,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41812,"byte_end":41819,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41820,"byte_end":41823,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41824,"byte_end":41869,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41870,"byte_end":41912,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41913,"byte_end":41958,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41959,"byte_end":41998,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":41999,"byte_end":42038,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42039,"byte_end":42042,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42043,"byte_end":42087,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42088,"byte_end":42091,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42092,"byte_end":42174,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42175,"byte_end":42254,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42255,"byte_end":42329,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42330,"byte_end":42403,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42404,"byte_end":42464,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42465,"byte_end":42468,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42469,"byte_end":42510,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42511,"byte_end":42514,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42515,"byte_end":42583,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42584,"byte_end":42653,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42654,"byte_end":42720,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42721,"byte_end":42784,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42785,"byte_end":42852,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42853,"byte_end":42922,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42923,"byte_end":42993,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":42994,"byte_end":43072,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43073,"byte_end":43098,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43099,"byte_end":43102,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43103,"byte_end":43179,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43180,"byte_end":43183,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43184,"byte_end":43215,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43216,"byte_end":43219,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43220,"byte_end":43300,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43301,"byte_end":43377,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43378,"byte_end":43425,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43426,"byte_end":43429,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43430,"byte_end":43503,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43504,"byte_end":43580,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43581,"byte_end":43657,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43658,"byte_end":43661,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43662,"byte_end":43683,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43684,"byte_end":43707,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43708,"byte_end":43730,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43731,"byte_end":43734,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43735,"byte_end":43757,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43758,"byte_end":43761,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43762,"byte_end":43838,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43839,"byte_end":43886,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43887,"byte_end":43890,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43891,"byte_end":43925,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43926,"byte_end":43962,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":43963,"byte_end":44003,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44004,"byte_end":44046,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44047,"byte_end":44120,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44121,"byte_end":44204,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44205,"byte_end":44288,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44289,"byte_end":44316,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44317,"byte_end":44350,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44351,"byte_end":44378,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44379,"byte_end":44406,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44407,"byte_end":44438,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44439,"byte_end":44509,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44510,"byte_end":44586,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/mod.rs","byte_start":44587,"byte_end":44616,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47461,"byte_end":47473,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":46784,"byte_end":46815,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":46816,"byte_end":46819,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":46820,"byte_end":46892,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":46893,"byte_end":46971,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":46972,"byte_end":47058,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47059,"byte_end":47136,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47137,"byte_end":47148,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47149,"byte_end":47152,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47153,"byte_end":47221,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47222,"byte_end":47246,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47247,"byte_end":47250,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47251,"byte_end":47293,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47294,"byte_end":47344,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47345,"byte_end":47398,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47399,"byte_end":47450,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48571,"byte_end":48584,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47491,"byte_end":47576,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47581,"byte_end":47622,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47627,"byte_end":47630,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47635,"byte_end":47682,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47687,"byte_end":47690,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47695,"byte_end":47754,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47759,"byte_end":47817,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47822,"byte_end":47903,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47908,"byte_end":47934,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47939,"byte_end":47942,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47947,"byte_end":48018,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48023,"byte_end":48085,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48090,"byte_end":48161,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48166,"byte_end":48247,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48252,"byte_end":48328,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48333,"byte_end":48384,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48389,"byte_end":48392,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48397,"byte_end":48468,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48473,"byte_end":48476,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48481,"byte_end":48520,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48525,"byte_end":48563,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49487,"byte_end":49494,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48662,"byte_end":48736,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48741,"byte_end":48808,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48813,"byte_end":48816,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48821,"byte_end":48892,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48897,"byte_end":48966,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":48971,"byte_end":49045,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49050,"byte_end":49127,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49132,"byte_end":49202,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49207,"byte_end":49260,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49265,"byte_end":49268,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49273,"byte_end":49345,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49350,"byte_end":49372,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49377,"byte_end":49380,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49385,"byte_end":49424,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49429,"byte_end":49479,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52808,"byte_end":52817,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":200}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51121,"byte_end":51151,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51152,"byte_end":51155,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51156,"byte_end":51235,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51236,"byte_end":51310,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51311,"byte_end":51390,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51391,"byte_end":51468,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51469,"byte_end":51480,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51481,"byte_end":51484,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51485,"byte_end":51562,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51563,"byte_end":51581,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51582,"byte_end":51585,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51586,"byte_end":51666,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51667,"byte_end":51740,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51741,"byte_end":51820,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51821,"byte_end":51865,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51866,"byte_end":51869,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51870,"byte_end":51935,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":51936,"byte_end":52016,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52017,"byte_end":52096,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52097,"byte_end":52170,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52171,"byte_end":52244,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52245,"byte_end":52266,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52267,"byte_end":52270,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52271,"byte_end":52355,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52356,"byte_end":52380,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52381,"byte_end":52384,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52385,"byte_end":52458,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52459,"byte_end":52538,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52539,"byte_end":52542,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52543,"byte_end":52608,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52609,"byte_end":52630,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52631,"byte_end":52634,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52635,"byte_end":52674,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52675,"byte_end":52711,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52712,"byte_end":52751,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52752,"byte_end":52797,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53334,"byte_end":53343,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52824,"byte_end":52877,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52882,"byte_end":52885,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52890,"byte_end":52958,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":52963,"byte_end":53038,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53043,"byte_end":53096,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53101,"byte_end":53104,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53109,"byte_end":53184,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53189,"byte_end":53258,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53263,"byte_end":53326,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":238},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55939,"byte_end":55948,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55457,"byte_end":55487,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55488,"byte_end":55491,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55492,"byte_end":55566,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55567,"byte_end":55637,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55638,"byte_end":55707,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55708,"byte_end":55711,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55712,"byte_end":55777,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55778,"byte_end":55799,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55800,"byte_end":55803,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55804,"byte_end":55840,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55841,"byte_end":55882,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55883,"byte_end":55928,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56590,"byte_end":56600,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":55955,"byte_end":56012,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56017,"byte_end":56020,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56025,"byte_end":56098,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56103,"byte_end":56129,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56134,"byte_end":56137,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56142,"byte_end":56217,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56222,"byte_end":56278,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56283,"byte_end":56286,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56291,"byte_end":56303,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56308,"byte_end":56311,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56316,"byte_end":56386,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56391,"byte_end":56465,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56470,"byte_end":56544,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56549,"byte_end":56582,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57123,"byte_end":57136,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56667,"byte_end":56710,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56715,"byte_end":56718,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56723,"byte_end":56772,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56777,"byte_end":56847,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56852,"byte_end":56924,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":56929,"byte_end":57000,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57005,"byte_end":57021,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57026,"byte_end":57029,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57034,"byte_end":57046,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57051,"byte_end":57054,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57059,"byte_end":57115,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60427,"byte_end":60437,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":285}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58564,"byte_end":58596,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58597,"byte_end":58600,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58601,"byte_end":58683,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58684,"byte_end":58759,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58760,"byte_end":58827,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58828,"byte_end":58831,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58832,"byte_end":58912,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58913,"byte_end":58931,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58932,"byte_end":58935,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":58936,"byte_end":59007,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59008,"byte_end":59022,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59023,"byte_end":59026,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59027,"byte_end":59095,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59096,"byte_end":59176,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59177,"byte_end":59256,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59257,"byte_end":59330,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59331,"byte_end":59404,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59405,"byte_end":59426,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59427,"byte_end":59430,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59431,"byte_end":59515,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59516,"byte_end":59540,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59541,"byte_end":59544,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59545,"byte_end":59627,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59628,"byte_end":59711,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59712,"byte_end":59715,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59716,"byte_end":59800,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59801,"byte_end":59885,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59886,"byte_end":59964,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":59965,"byte_end":60044,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60045,"byte_end":60106,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60107,"byte_end":60110,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60111,"byte_end":60177,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60178,"byte_end":60200,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60201,"byte_end":60204,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60205,"byte_end":60243,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60244,"byte_end":60288,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60289,"byte_end":60328,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60329,"byte_end":60368,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60369,"byte_end":60416,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61109,"byte_end":61119,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60444,"byte_end":60498,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60503,"byte_end":60506,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60511,"byte_end":60587,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60592,"byte_end":60667,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60672,"byte_end":60746,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60751,"byte_end":60826,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60831,"byte_end":60860,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60865,"byte_end":60868,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60873,"byte_end":60935,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":60940,"byte_end":60998,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61003,"byte_end":61070,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61075,"byte_end":61101,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61660,"byte_end":61670,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61247,"byte_end":61318,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61323,"byte_end":61345,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61350,"byte_end":61353,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61358,"byte_end":61404,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61409,"byte_end":61412,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61417,"byte_end":61481,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61486,"byte_end":61544,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61549,"byte_end":61617,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61622,"byte_end":61652,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64956,"byte_end":64969,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61752,"byte_end":61826,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61831,"byte_end":61879,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61884,"byte_end":61887,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61892,"byte_end":61963,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":61968,"byte_end":62044,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62049,"byte_end":62125,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62130,"byte_end":62205,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62210,"byte_end":62281,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62286,"byte_end":62362,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62367,"byte_end":62395,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62400,"byte_end":62403,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62408,"byte_end":62469,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62474,"byte_end":62545,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62550,"byte_end":62622,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62627,"byte_end":62702,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62707,"byte_end":62780,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62785,"byte_end":62860,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62865,"byte_end":62937,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62942,"byte_end":62953,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62958,"byte_end":62961,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":62966,"byte_end":63040,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63045,"byte_end":63117,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63122,"byte_end":63191,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63196,"byte_end":63264,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63269,"byte_end":63330,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63335,"byte_end":63338,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63343,"byte_end":63361,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63366,"byte_end":63369,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63374,"byte_end":63444,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63449,"byte_end":63452,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63457,"byte_end":63520,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63525,"byte_end":63594,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63599,"byte_end":63674,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63679,"byte_end":63752,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63757,"byte_end":63808,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63813,"byte_end":63816,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63821,"byte_end":63891,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63896,"byte_end":63971,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":63976,"byte_end":64048,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64053,"byte_end":64123,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64128,"byte_end":64203,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64208,"byte_end":64211,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64216,"byte_end":64297,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64302,"byte_end":64377,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64382,"byte_end":64449,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64454,"byte_end":64457,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64462,"byte_end":64474,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64479,"byte_end":64482,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64487,"byte_end":64558,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64563,"byte_end":64629,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64634,"byte_end":64708,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64713,"byte_end":64777,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64782,"byte_end":64821,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64826,"byte_end":64829,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64834,"byte_end":64846,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64851,"byte_end":64854,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64859,"byte_end":64934,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":64939,"byte_end":64948,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66082,"byte_end":66101,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65051,"byte_end":65122,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65127,"byte_end":65130,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65135,"byte_end":65202,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65207,"byte_end":65277,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65282,"byte_end":65352,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65357,"byte_end":65360,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65365,"byte_end":65447,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65452,"byte_end":65504,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65509,"byte_end":65512,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65517,"byte_end":65578,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65583,"byte_end":65586,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65591,"byte_end":65653,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65658,"byte_end":65716,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65721,"byte_end":65788,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65793,"byte_end":65819,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65824,"byte_end":65827,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65832,"byte_end":65842,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65847,"byte_end":65850,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65855,"byte_end":65927,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":65932,"byte_end":66002,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66007,"byte_end":66019,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66024,"byte_end":66027,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66032,"byte_end":66074,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66869,"byte_end":66886,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66399,"byte_end":66469,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66474,"byte_end":66493,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66498,"byte_end":66501,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66506,"byte_end":66575,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66580,"byte_end":66655,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66660,"byte_end":66728,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66733,"byte_end":66736,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66741,"byte_end":66788,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66793,"byte_end":66796,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":66801,"byte_end":66861,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73959,"byte_end":73966,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73011,"byte_end":73091,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73092,"byte_end":73095,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73096,"byte_end":73170,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73171,"byte_end":73246,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73247,"byte_end":73325,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73326,"byte_end":73402,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73403,"byte_end":73480,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73481,"byte_end":73484,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73485,"byte_end":73549,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73550,"byte_end":73553,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73554,"byte_end":73569,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73570,"byte_end":73611,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73612,"byte_end":73653,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73654,"byte_end":73695,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73696,"byte_end":73703,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73704,"byte_end":73707,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73708,"byte_end":73786,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73787,"byte_end":73865,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":73866,"byte_end":73947,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74168,"byte_end":74171,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74082,"byte_end":74142,"line_start":30,"line_end":30,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74147,"byte_end":74156,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74584,"byte_end":74590,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74404,"byte_end":74466,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74471,"byte_end":74474,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74479,"byte_end":74558,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74563,"byte_end":74572,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74818,"byte_end":74826,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74747,"byte_end":74792,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74797,"byte_end":74806,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74972,"byte_end":74978,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74879,"byte_end":74946,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74951,"byte_end":74960,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75326,"byte_end":75336,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75232,"byte_end":75300,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75305,"byte_end":75314,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75704,"byte_end":75708,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75606,"byte_end":75678,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75683,"byte_end":75692,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76114,"byte_end":76125,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":75966,"byte_end":76038,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76043,"byte_end":76046,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76051,"byte_end":76088,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76093,"byte_end":76102,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76531,"byte_end":76546,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76382,"byte_end":76455,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76460,"byte_end":76463,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76468,"byte_end":76505,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76510,"byte_end":76519,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77658,"byte_end":77667,"line_start":123,"line_end":123,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76819,"byte_end":76912,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76917,"byte_end":76933,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76938,"byte_end":76941,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":76946,"byte_end":77034,"line_start":111,"line_end":111,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be converted to a `&mut [u8]`).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77039,"byte_end":77129,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77134,"byte_end":77137,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77142,"byte_end":77237,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77242,"byte_end":77326,"line_start":115,"line_end":115,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77331,"byte_end":77407,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77412,"byte_end":77415,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77420,"byte_end":77432,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77437,"byte_end":77440,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77445,"byte_end":77541,"line_start":120,"line_end":120,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77546,"byte_end":77625,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77630,"byte_end":77639,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78113,"byte_end":78125,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77735,"byte_end":77841,"line_start":127,"line_end":127,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77846,"byte_end":77862,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77867,"byte_end":77870,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77875,"byte_end":77887,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77892,"byte_end":77895,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":77900,"byte_end":77996,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78001,"byte_end":78080,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78085,"byte_end":78094,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78487,"byte_end":78506,"line_start":144,"line_end":144,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78213,"byte_end":78314,"line_start":139,"line_end":139,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78319,"byte_end":78322,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78327,"byte_end":78438,"line_start":141,"line_end":141,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78443,"byte_end":78461,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78466,"byte_end":78475,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78844,"byte_end":78866,"line_start":155,"line_end":155,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78598,"byte_end":78703,"line_start":148,"line_end":148,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78708,"byte_end":78730,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78735,"byte_end":78738,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78743,"byte_end":78755,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78760,"byte_end":78763,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78768,"byte_end":78818,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":78823,"byte_end":78832,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79681,"byte_end":79690,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79569,"byte_end":79655,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79660,"byte_end":79669,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79957,"byte_end":79962,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79758,"byte_end":79818,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79823,"byte_end":79826,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79831,"byte_end":79931,"line_start":184,"line_end":184,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":79936,"byte_end":79945,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80291,"byte_end":80298,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80012,"byte_end":80069,"line_start":190,"line_end":190,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80074,"byte_end":80077,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80082,"byte_end":80133,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80138,"byte_end":80141,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80146,"byte_end":80158,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80163,"byte_end":80166,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80171,"byte_end":80265,"line_start":196,"line_end":196,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80270,"byte_end":80279,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80909,"byte_end":80919,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80435,"byte_end":80488,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80493,"byte_end":80496,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80501,"byte_end":80552,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80557,"byte_end":80560,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80565,"byte_end":80670,"line_start":207,"line_end":207,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80675,"byte_end":80751,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80756,"byte_end":80759,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80764,"byte_end":80776,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80781,"byte_end":80784,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80789,"byte_end":80883,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":80888,"byte_end":80897,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81523,"byte_end":81534,"line_start":231,"line_end":231,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81103,"byte_end":81179,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81184,"byte_end":81187,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81192,"byte_end":81301,"line_start":224,"line_end":224,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81306,"byte_end":81357,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81362,"byte_end":81365,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81370,"byte_end":81382,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81387,"byte_end":81390,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81395,"byte_end":81490,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81495,"byte_end":81504,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81914,"byte_end":81923,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81686,"byte_end":81792,"line_start":238,"line_end":238,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81797,"byte_end":81800,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81805,"byte_end":81817,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81822,"byte_end":81825,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81830,"byte_end":81888,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":81893,"byte_end":81902,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":384},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":472}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83397,"byte_end":83415,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83417,"byte_end":83455,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83456,"byte_end":83459,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83460,"byte_end":83543,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83544,"byte_end":83609,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83610,"byte_end":83613,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83614,"byte_end":83632,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83633,"byte_end":83636,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83637,"byte_end":83725,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83726,"byte_end":83795,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83796,"byte_end":83884,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83885,"byte_end":83943,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":83944,"byte_end":84007,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84008,"byte_end":84073,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84075,"byte_end":84078,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84079,"byte_end":84111,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84112,"byte_end":84140,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84141,"byte_end":84169,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84170,"byte_end":84204,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84205,"byte_end":84235,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/mod.rs","byte_start":84236,"byte_end":84270,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":411},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85532,"byte_end":85545,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":84944,"byte_end":85021,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85022,"byte_end":85025,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85026,"byte_end":85035,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85036,"byte_end":85039,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85040,"byte_end":85117,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85118,"byte_end":85121,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85122,"byte_end":85135,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85136,"byte_end":85139,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85140,"byte_end":85217,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85218,"byte_end":85290,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85291,"byte_end":85360,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85361,"byte_end":85364,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85365,"byte_end":85444,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85445,"byte_end":85521,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":466},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92006,"byte_end":92023,"line_start":247,"line_end":247,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":467},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92039,"byte_end":92043,"line_start":248,"line_end":248,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92104,"byte_end":92110,"line_start":249,"line_end":249,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92182,"byte_end":92197,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":470},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92308,"byte_end":92316,"line_start":255,"line_end":255,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":92253,"byte_end":92292,"line_start":254,"line_end":254,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":874},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":107948,"byte_end":107954,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":107885,"byte_end":107938,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":875},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":108008,"byte_end":108013,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Error returned by `park`.\n","sig":null,"attributes":[{"value":"/ Error returned by `park`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":107969,"byte_end":107998,"line_start":53,"line_end":53,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1174},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1198},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2121},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2619},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2759},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2882},{"krate":0,"index":2886},{"krate":0,"index":2888},{"krate":0,"index":2892},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2880}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425591,"byte_end":12425613,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425614,"byte_end":12425617,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425618,"byte_end":12425691,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425692,"byte_end":12425765,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425766,"byte_end":12425769,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425770,"byte_end":12425848,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425849,"byte_end":12425906,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425907,"byte_end":12425977,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12425978,"byte_end":12426050,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426051,"byte_end":12426054,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426055,"byte_end":12426135,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426136,"byte_end":12426216,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426217,"byte_end":12426298,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426299,"byte_end":12426379,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426380,"byte_end":12426383,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426384,"byte_end":12426395,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426396,"byte_end":12426399,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426400,"byte_end":12426479,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426480,"byte_end":12426489,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426490,"byte_end":12426493,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426494,"byte_end":12426507,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426508,"byte_end":12426540,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426541,"byte_end":12426590,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426591,"byte_end":12426594,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426595,"byte_end":12426613,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426614,"byte_end":12426677,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426678,"byte_end":12426744,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426745,"byte_end":12426748,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426749,"byte_end":12426763,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426764,"byte_end":12426823,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426824,"byte_end":12426827,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426828,"byte_end":12426865,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426866,"byte_end":12426906,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426907,"byte_end":12426910,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426911,"byte_end":12426991,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12426992,"byte_end":12427014,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427015,"byte_end":12427078,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427079,"byte_end":12427119,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427120,"byte_end":12427170,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427171,"byte_end":12427206,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427207,"byte_end":12427242,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427243,"byte_end":12427325,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427326,"byte_end":12427361,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427362,"byte_end":12427387,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427388,"byte_end":12427410,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427411,"byte_end":12427414,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427415,"byte_end":12427457,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427458,"byte_end":12427530,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427531,"byte_end":12427608,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427609,"byte_end":12427640,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427641,"byte_end":12427662,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427663,"byte_end":12427680,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427681,"byte_end":12427696,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427697,"byte_end":12427706,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427707,"byte_end":12427712,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427713,"byte_end":12427720,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427721,"byte_end":12427724,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427725,"byte_end":12427803,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427804,"byte_end":12427882,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427883,"byte_end":12427944,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427945,"byte_end":12427948,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12427949,"byte_end":12428002,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428003,"byte_end":12428006,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428007,"byte_end":12428020,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428021,"byte_end":12428053,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428054,"byte_end":12428103,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428104,"byte_end":12428136,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428137,"byte_end":12428140,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428141,"byte_end":12428198,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428199,"byte_end":12428228,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428229,"byte_end":12428263,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428264,"byte_end":12428267,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428268,"byte_end":12428298,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428299,"byte_end":12428326,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428327,"byte_end":12428397,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428398,"byte_end":12428401,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428402,"byte_end":12428420,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428421,"byte_end":12428484,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428485,"byte_end":12428488,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428489,"byte_end":12428530,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428531,"byte_end":12428575,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428576,"byte_end":12428579,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428580,"byte_end":12428664,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428665,"byte_end":12428691,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428692,"byte_end":12428759,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428760,"byte_end":12428804,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428805,"byte_end":12428859,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428860,"byte_end":12428899,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428900,"byte_end":12428939,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12428940,"byte_end":12429026,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429027,"byte_end":12429066,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429067,"byte_end":12429096,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429097,"byte_end":12429123,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429124,"byte_end":12429127,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429128,"byte_end":12429174,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429175,"byte_end":12429251,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429252,"byte_end":12429333,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429334,"byte_end":12429369,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429370,"byte_end":12429395,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429396,"byte_end":12429417,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429418,"byte_end":12429437,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429438,"byte_end":12429451,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429452,"byte_end":12429462,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429463,"byte_end":12429468,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429469,"byte_end":12429476,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429477,"byte_end":12429480,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429481,"byte_end":12429510,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429511,"byte_end":12429514,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429515,"byte_end":12429593,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429594,"byte_end":12429670,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429671,"byte_end":12429713,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429714,"byte_end":12429717,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429718,"byte_end":12429749,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429750,"byte_end":12429753,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429754,"byte_end":12429829,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429830,"byte_end":12429908,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429909,"byte_end":12429987,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12429988,"byte_end":12430072,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430073,"byte_end":12430118,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430119,"byte_end":12430126,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430127,"byte_end":12430150,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430151,"byte_end":12430154,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430155,"byte_end":12430214,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430215,"byte_end":12430262,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430263,"byte_end":12430277,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430278,"byte_end":12430285,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430286,"byte_end":12430289,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430290,"byte_end":12430365,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430366,"byte_end":12430441,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430442,"byte_end":12430445,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430446,"byte_end":12430479,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430480,"byte_end":12430483,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430484,"byte_end":12430562,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430563,"byte_end":12430642,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430643,"byte_end":12430669,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430670,"byte_end":12430677,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430678,"byte_end":12430701,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430702,"byte_end":12430705,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430706,"byte_end":12430765,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430766,"byte_end":12430823,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430824,"byte_end":12430842,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430843,"byte_end":12430857,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430858,"byte_end":12430865,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430866,"byte_end":12430869,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430870,"byte_end":12430895,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430896,"byte_end":12430899,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430900,"byte_end":12430974,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12430975,"byte_end":12431055,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431056,"byte_end":12431135,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431136,"byte_end":12431215,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431216,"byte_end":12431285,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431286,"byte_end":12431289,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431290,"byte_end":12431324,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431325,"byte_end":12431328,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431329,"byte_end":12431408,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431409,"byte_end":12431493,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431494,"byte_end":12431504,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431505,"byte_end":12431508,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431509,"byte_end":12431587,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431588,"byte_end":12431667,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431668,"byte_end":12431726,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431727,"byte_end":12431730,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431731,"byte_end":12431755,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431756,"byte_end":12431780,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431781,"byte_end":12431815,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431816,"byte_end":12431854,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431855,"byte_end":12431901,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431902,"byte_end":12431952,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12431953,"byte_end":12432027,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12432028,"byte_end":12432108,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12432109,"byte_end":12432171,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12432172,"byte_end":12432238,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12432239,"byte_end":12432303,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12475736,"byte_end":12475745,"line_start":9,"line_end":9,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":2056}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476247,"byte_end":12476259,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476166,"byte_end":12476235,"line_start":32,"line_end":32,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476714,"byte_end":12476722,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking.","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476334,"byte_end":12476397,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476402,"byte_end":12476405,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476410,"byte_end":12476424,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476429,"byte_end":12476432,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476437,"byte_end":12476444,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476449,"byte_end":12476468,"line_start":42,"line_end":42,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476473,"byte_end":12476476,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476481,"byte_end":12476499,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476504,"byte_end":12476525,"line_start":45,"line_end":45,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476530,"byte_end":12476568,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476573,"byte_end":12476600,"line_start":47,"line_end":47,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476605,"byte_end":12476635,"line_start":48,"line_end":48,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476640,"byte_end":12476643,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476648,"byte_end":12476680,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476685,"byte_end":12476690,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476695,"byte_end":12476702,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477577,"byte_end":12477587,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476796,"byte_end":12476875,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476880,"byte_end":12476883,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476888,"byte_end":12476900,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476905,"byte_end":12476908,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476913,"byte_end":12476987,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12476992,"byte_end":12477067,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477072,"byte_end":12477130,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477135,"byte_end":12477138,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477143,"byte_end":12477157,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477162,"byte_end":12477165,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477170,"byte_end":12477189,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477194,"byte_end":12477213,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477218,"byte_end":12477221,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477226,"byte_end":12477244,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477249,"byte_end":12477270,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477275,"byte_end":12477313,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477318,"byte_end":12477345,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477350,"byte_end":12477380,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477385,"byte_end":12477388,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477393,"byte_end":12477420,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477425,"byte_end":12477473,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477478,"byte_end":12477529,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477534,"byte_end":12477543,"line_start":79,"line_end":79,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477548,"byte_end":12477553,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477558,"byte_end":12477565,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478352,"byte_end":12478366,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477728,"byte_end":12477797,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477802,"byte_end":12477874,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477879,"byte_end":12477892,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477897,"byte_end":12477900,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477905,"byte_end":12477919,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477924,"byte_end":12477927,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477932,"byte_end":12477951,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477956,"byte_end":12477975,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477980,"byte_end":12477983,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12477988,"byte_end":12478006,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478011,"byte_end":12478032,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478037,"byte_end":12478075,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478080,"byte_end":12478107,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478112,"byte_end":12478142,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478147,"byte_end":12478150,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478155,"byte_end":12478205,"line_start":102,"line_end":102,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478210,"byte_end":12478258,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478263,"byte_end":12478304,"line_start":104,"line_end":104,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478309,"byte_end":12478318,"line_start":105,"line_end":105,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478323,"byte_end":12478328,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478333,"byte_end":12478340,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2057},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501215,"byte_end":12501225,"line_start":145,"line_end":145,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502670,"byte_end":12502675,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501655,"byte_end":12501701,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501706,"byte_end":12501709,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501714,"byte_end":12501783,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501788,"byte_end":12501858,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ will fail with a [cancelled] `JoinError`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501863,"byte_end":12501908,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501913,"byte_end":12501916,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501921,"byte_end":12501932,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501937,"byte_end":12501957,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501962,"byte_end":12501965,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501970,"byte_end":12501988,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501993,"byte_end":12502014,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502019,"byte_end":12502055,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502060,"byte_end":12502063,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502068,"byte_end":12502108,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502113,"byte_end":12502172,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502177,"byte_end":12502191,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502196,"byte_end":12502207,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502212,"byte_end":12502215,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502220,"byte_end":12502260,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502265,"byte_end":12502324,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502329,"byte_end":12502344,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502349,"byte_end":12502360,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502365,"byte_end":12502368,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502373,"byte_end":12502404,"line_start":188,"line_end":188,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502409,"byte_end":12502435,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502440,"byte_end":12502448,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502453,"byte_end":12502456,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502461,"byte_end":12502491,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502496,"byte_end":12502557,"line_start":193,"line_end":193,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502562,"byte_end":12502570,"line_start":194,"line_end":194,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502575,"byte_end":12502580,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502585,"byte_end":12502592,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ [cancelled]: method@super::error::JoinError::is_cancelled","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12502597,"byte_end":12502658,"line_start":197,"line_end":197,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2540},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579815,"byte_end":12579822,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12578859,"byte_end":12578917,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12578918,"byte_end":12578921,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12578922,"byte_end":12578994,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12578995,"byte_end":12579043,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579044,"byte_end":12579047,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579048,"byte_end":12579125,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579126,"byte_end":12579165,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579166,"byte_end":12579169,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579170,"byte_end":12579247,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579248,"byte_end":12579261,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579262,"byte_end":12579265,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579266,"byte_end":12579299,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579300,"byte_end":12579364,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579365,"byte_end":12579433,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579434,"byte_end":12579437,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579438,"byte_end":12579452,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579453,"byte_end":12579456,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579457,"byte_end":12579464,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579465,"byte_end":12579497,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579498,"byte_end":12579501,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579502,"byte_end":12579517,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579518,"byte_end":12579542,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579543,"byte_end":12579592,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579593,"byte_end":12579623,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579624,"byte_end":12579666,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579667,"byte_end":12579714,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579715,"byte_end":12579735,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579736,"byte_end":12579758,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579759,"byte_end":12579762,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579763,"byte_end":12579789,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579790,"byte_end":12579795,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12579796,"byte_end":12579803,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581536,"byte_end":12581554,"line_start":100,"line_end":100,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581221,"byte_end":12581290,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581295,"byte_end":12581298,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581303,"byte_end":12581364,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581369,"byte_end":12581372,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581377,"byte_end":12581450,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581455,"byte_end":12581472,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581477,"byte_end":12581480,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581485,"byte_end":12581524,"line_start":99,"line_end":99,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583488,"byte_end":12583498,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12582995,"byte_end":12583033,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583038,"byte_end":12583041,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583046,"byte_end":12583117,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583122,"byte_end":12583198,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583203,"byte_end":12583257,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583262,"byte_end":12583265,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583270,"byte_end":12583284,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583289,"byte_end":12583292,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583297,"byte_end":12583304,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583309,"byte_end":12583332,"line_start":160,"line_end":160,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583337,"byte_end":12583340,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583345,"byte_end":12583394,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583399,"byte_end":12583420,"line_start":163,"line_end":163,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583425,"byte_end":12583441,"line_start":164,"line_end":164,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583446,"byte_end":12583464,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583469,"byte_end":12583476,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585175,"byte_end":12585189,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583726,"byte_end":12583787,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583792,"byte_end":12583795,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583800,"byte_end":12583874,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583879,"byte_end":12583903,"line_start":179,"line_end":179,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583908,"byte_end":12583911,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583916,"byte_end":12583929,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583934,"byte_end":12583937,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12583942,"byte_end":12584011,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584016,"byte_end":12584019,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584024,"byte_end":12584035,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584040,"byte_end":12584043,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584048,"byte_end":12584121,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584126,"byte_end":12584187,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584192,"byte_end":12584195,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584200,"byte_end":12584203,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584208,"byte_end":12584222,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584227,"byte_end":12584230,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584235,"byte_end":12584279,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584284,"byte_end":12584287,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584292,"byte_end":12584299,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584304,"byte_end":12584327,"line_start":196,"line_end":196,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584332,"byte_end":12584335,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584340,"byte_end":12584409,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584414,"byte_end":12584463,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584468,"byte_end":12584494,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584499,"byte_end":12584515,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584520,"byte_end":12584538,"line_start":202,"line_end":202,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584543,"byte_end":12584546,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584551,"byte_end":12584579,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584584,"byte_end":12584591,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584596,"byte_end":12584599,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584604,"byte_end":12584695,"line_start":207,"line_end":207,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584700,"byte_end":12584703,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584708,"byte_end":12584715,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584720,"byte_end":12584743,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584748,"byte_end":12584751,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584756,"byte_end":12584813,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584818,"byte_end":12584848,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584853,"byte_end":12584904,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584909,"byte_end":12584925,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584930,"byte_end":12584948,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584953,"byte_end":12584956,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12584961,"byte_end":12585026,"line_start":218,"line_end":218,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585031,"byte_end":12585062,"line_start":219,"line_end":219,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585067,"byte_end":12585074,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585079,"byte_end":12585082,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585087,"byte_end":12585098,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585103,"byte_end":12585106,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585111,"byte_end":12585163,"line_start":224,"line_end":224,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586314,"byte_end":12586334,"line_start":253,"line_end":253,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585356,"byte_end":12585426,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585431,"byte_end":12585434,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585439,"byte_end":12585508,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585513,"byte_end":12585588,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585593,"byte_end":12585666,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585671,"byte_end":12585724,"line_start":236,"line_end":236,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585729,"byte_end":12585732,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585737,"byte_end":12585766,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585771,"byte_end":12585774,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585779,"byte_end":12585790,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585795,"byte_end":12585798,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585803,"byte_end":12585855,"line_start":242,"line_end":242,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585860,"byte_end":12585863,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585868,"byte_end":12585892,"line_start":244,"line_end":244,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585897,"byte_end":12585900,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585905,"byte_end":12585988,"line_start":246,"line_end":246,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12585993,"byte_end":12586079,"line_start":247,"line_end":247,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586084,"byte_end":12586087,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586092,"byte_end":12586146,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586151,"byte_end":12586195,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586200,"byte_end":12586250,"line_start":251,"line_end":251,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586890,"byte_end":12586901,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586507,"byte_end":12586571,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586576,"byte_end":12586579,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586584,"byte_end":12586631,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586636,"byte_end":12586639,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586644,"byte_end":12586658,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586663,"byte_end":12586666,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586671,"byte_end":12586678,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586683,"byte_end":12586708,"line_start":266,"line_end":266,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586713,"byte_end":12586716,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586721,"byte_end":12586742,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586747,"byte_end":12586796,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586801,"byte_end":12586832,"line_start":270,"line_end":270,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586837,"byte_end":12586854,"line_start":271,"line_end":271,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586859,"byte_end":12586866,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12586871,"byte_end":12586878,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587750,"byte_end":12587764,"line_start":300,"line_end":300,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587075,"byte_end":12587171,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587176,"byte_end":12587179,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587184,"byte_end":12587246,"line_start":282,"line_end":282,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587251,"byte_end":12587254,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587259,"byte_end":12587273,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587278,"byte_end":12587281,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587286,"byte_end":12587293,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587298,"byte_end":12587323,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587328,"byte_end":12587381,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587386,"byte_end":12587389,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587394,"byte_end":12587415,"line_start":290,"line_end":290,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587420,"byte_end":12587469,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587474,"byte_end":12587502,"line_start":292,"line_end":292,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587507,"byte_end":12587570,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587575,"byte_end":12587636,"line_start":294,"line_end":294,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587641,"byte_end":12587677,"line_start":295,"line_end":295,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587682,"byte_end":12587692,"line_start":296,"line_end":296,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587697,"byte_end":12587714,"line_start":297,"line_end":297,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587719,"byte_end":12587726,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587731,"byte_end":12587738,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588529,"byte_end":12588546,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587940,"byte_end":12587994,"line_start":308,"line_end":308,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12587999,"byte_end":12588002,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588007,"byte_end":12588079,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588084,"byte_end":12588117,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588122,"byte_end":12588125,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588130,"byte_end":12588198,"line_start":313,"line_end":313,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588203,"byte_end":12588264,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588269,"byte_end":12588272,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588277,"byte_end":12588291,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588296,"byte_end":12588299,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588304,"byte_end":12588311,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588316,"byte_end":12588341,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588346,"byte_end":12588349,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588354,"byte_end":12588375,"line_start":321,"line_end":321,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588380,"byte_end":12588429,"line_start":322,"line_end":322,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588434,"byte_end":12588471,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588476,"byte_end":12588493,"line_start":324,"line_end":324,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588498,"byte_end":12588505,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588510,"byte_end":12588517,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589166,"byte_end":12589181,"line_start":351,"line_end":351,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588653,"byte_end":12588728,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588733,"byte_end":12588748,"line_start":333,"line_end":333,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588753,"byte_end":12588756,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588761,"byte_end":12588823,"line_start":335,"line_end":335,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588828,"byte_end":12588831,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588836,"byte_end":12588850,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588855,"byte_end":12588858,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588863,"byte_end":12588870,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588875,"byte_end":12588900,"line_start":340,"line_end":340,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588905,"byte_end":12588908,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588913,"byte_end":12588934,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588939,"byte_end":12588993,"line_start":343,"line_end":343,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12588998,"byte_end":12589027,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589032,"byte_end":12589071,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589076,"byte_end":12589086,"line_start":346,"line_end":346,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589091,"byte_end":12589108,"line_start":347,"line_end":347,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589113,"byte_end":12589120,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589125,"byte_end":12589132,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589137,"byte_end":12589154,"line_start":350,"line_end":350,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589822,"byte_end":12589836,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589353,"byte_end":12589404,"line_start":359,"line_end":359,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589409,"byte_end":12589412,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589417,"byte_end":12589479,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589484,"byte_end":12589487,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589492,"byte_end":12589506,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589511,"byte_end":12589514,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589519,"byte_end":12589526,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589531,"byte_end":12589556,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589561,"byte_end":12589564,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589569,"byte_end":12589590,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589595,"byte_end":12589649,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589654,"byte_end":12589682,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589687,"byte_end":12589727,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589732,"byte_end":12589742,"line_start":372,"line_end":372,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589747,"byte_end":12589764,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589769,"byte_end":12589776,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589781,"byte_end":12589788,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12589793,"byte_end":12589810,"line_start":376,"line_end":376,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592431,"byte_end":12592445,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"on_thread_park","qualname":"<Builder>::on_thread_park","value":"pub fn on_thread_park<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` just before a thread is parked (goes idle).\n `f` is called within the Tokio context, so functions like [`tokio::spawn`](crate::spawn)\n can be called, and may result in this thread being unparked immediately.","sig":null,"attributes":[{"value":"/ Executes function `f` just before a thread is parked (goes idle).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590008,"byte_end":12590077,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/ `f` is called within the Tokio context, so functions like [`tokio::spawn`](crate::spawn)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590082,"byte_end":12590174,"line_start":386,"line_end":386,"column_start":5,"column_end":97}},{"value":"/ can be called, and may result in this thread being unparked immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590179,"byte_end":12590255,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590260,"byte_end":12590263,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This can be used to start work only when the executor is idle, or for bookkeeping","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590268,"byte_end":12590353,"line_start":389,"line_end":389,"column_start":5,"column_end":90}},{"value":"/ and monitoring purposes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590358,"byte_end":12590386,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590391,"byte_end":12590394,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Note: There can only be one park callback for a runtime; calling this function","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590399,"byte_end":12590481,"line_start":392,"line_end":392,"column_start":5,"column_end":87}},{"value":"/ more than once replaces the last callback defined, rather than adding to it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590486,"byte_end":12590566,"line_start":393,"line_end":393,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590571,"byte_end":12590574,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590579,"byte_end":12590593,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590598,"byte_end":12590601,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ## Multithreaded executor","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590606,"byte_end":12590635,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590640,"byte_end":12590647,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590652,"byte_end":12590677,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590682,"byte_end":12590734,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590739,"byte_end":12590764,"line_start":401,"line_end":401,"column_start":5,"column_end":30}},{"value":"/ # use tokio::sync::Barrier;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590769,"byte_end":12590800,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590805,"byte_end":12590826,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/ let once = AtomicBool::new(true);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590831,"byte_end":12590868,"line_start":404,"line_end":404,"column_start":5,"column_end":42}},{"value":"/ let barrier = Arc::new(Barrier::new(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590873,"byte_end":12590917,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590922,"byte_end":12590925,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590930,"byte_end":12590984,"line_start":407,"line_end":407,"column_start":5,"column_end":59}},{"value":"/     .worker_threads(1)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12590989,"byte_end":12591015,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/     .on_thread_park({","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591020,"byte_end":12591045,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"/         let barrier = barrier.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591050,"byte_end":12591092,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/         move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591097,"byte_end":12591118,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/             let barrier = barrier.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591123,"byte_end":12591169,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/             if once.swap(false, Ordering::Relaxed) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591174,"byte_end":12591230,"line_start":413,"line_end":413,"column_start":5,"column_end":61}},{"value":"/                 tokio::spawn(async move { barrier.wait().await; });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591235,"byte_end":12591306,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/            }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591311,"byte_end":12591327,"line_start":415,"line_end":415,"column_start":5,"column_end":21}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591332,"byte_end":12591345,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591350,"byte_end":12591360,"line_start":417,"line_end":417,"column_start":5,"column_end":15}},{"value":"/     .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591365,"byte_end":12591381,"line_start":418,"line_end":418,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591386,"byte_end":12591404,"line_start":419,"line_end":419,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591409,"byte_end":12591412,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ runtime.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591417,"byte_end":12591445,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/    barrier.wait().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591450,"byte_end":12591478,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591483,"byte_end":12591489,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591494,"byte_end":12591501,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591506,"byte_end":12591513,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ ## Current thread executor","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591518,"byte_end":12591548,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591553,"byte_end":12591560,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591565,"byte_end":12591590,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591595,"byte_end":12591647,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591652,"byte_end":12591677,"line_start":430,"line_end":430,"column_start":5,"column_end":30}},{"value":"/ # use tokio::sync::Barrier;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591682,"byte_end":12591713,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591718,"byte_end":12591739,"line_start":432,"line_end":432,"column_start":5,"column_end":26}},{"value":"/ let once = AtomicBool::new(true);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591744,"byte_end":12591781,"line_start":433,"line_end":433,"column_start":5,"column_end":42}},{"value":"/ let barrier = Arc::new(Barrier::new(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591786,"byte_end":12591830,"line_start":434,"line_end":434,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591835,"byte_end":12591838,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let runtime = runtime::Builder::new_current_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591843,"byte_end":12591899,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/     .on_thread_park({","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591904,"byte_end":12591929,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/         let barrier = barrier.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591934,"byte_end":12591976,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/         move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12591981,"byte_end":12592002,"line_start":439,"line_end":439,"column_start":5,"column_end":26}},{"value":"/             let barrier = barrier.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592007,"byte_end":12592053,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/             if once.swap(false, Ordering::Relaxed) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592058,"byte_end":12592114,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/                 tokio::spawn(async move { barrier.wait().await; });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592119,"byte_end":12592190,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/            }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592195,"byte_end":12592211,"line_start":443,"line_end":443,"column_start":5,"column_end":21}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592216,"byte_end":12592229,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592234,"byte_end":12592244,"line_start":445,"line_end":445,"column_start":5,"column_end":15}},{"value":"/     .build()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592249,"byte_end":12592265,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592270,"byte_end":12592288,"line_start":447,"line_end":447,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592293,"byte_end":12592296,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ runtime.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592301,"byte_end":12592329,"line_start":449,"line_end":449,"column_start":5,"column_end":33}},{"value":"/    barrier.wait().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592334,"byte_end":12592362,"line_start":450,"line_end":450,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592367,"byte_end":12592373,"line_start":451,"line_end":451,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592378,"byte_end":12592385,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592390,"byte_end":12592397,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592402,"byte_end":12592419,"line_start":454,"line_end":454,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593590,"byte_end":12593606,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"on_thread_unpark","qualname":"<Builder>::on_thread_unpark","value":"pub fn on_thread_unpark<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` just after a thread unparks (starts executing tasks).","sig":null,"attributes":[{"value":"/ Executes function `f` just after a thread unparks (starts executing tasks).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592617,"byte_end":12592696,"line_start":463,"line_end":463,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592701,"byte_end":12592704,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases; note that work","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592709,"byte_end":12592786,"line_start":465,"line_end":465,"column_start":5,"column_end":82}},{"value":"/ in this callback will increase latencies when the application has allowed one or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592791,"byte_end":12592875,"line_start":466,"line_end":466,"column_start":5,"column_end":89}},{"value":"/ more runtime threads to go idle.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592880,"byte_end":12592916,"line_start":467,"line_end":467,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592921,"byte_end":12592924,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Note: There can only be one unpark callback for a runtime; calling this function","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12592929,"byte_end":12593013,"line_start":469,"line_end":469,"column_start":5,"column_end":89}},{"value":"/ more than once replaces the last callback defined, rather than adding to it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593018,"byte_end":12593098,"line_start":470,"line_end":470,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593103,"byte_end":12593106,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593111,"byte_end":12593125,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593130,"byte_end":12593133,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593138,"byte_end":12593145,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593150,"byte_end":12593175,"line_start":475,"line_end":475,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593180,"byte_end":12593183,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593188,"byte_end":12593209,"line_start":477,"line_end":477,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593214,"byte_end":12593268,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/     .on_thread_unpark(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593273,"byte_end":12593303,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/         println!(\"thread unparking\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593308,"byte_end":12593349,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/     })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593354,"byte_end":12593364,"line_start":481,"line_end":481,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593369,"byte_end":12593386,"line_start":482,"line_end":482,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593391,"byte_end":12593394,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ runtime.unwrap().block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593399,"byte_end":12593436,"line_start":484,"line_end":484,"column_start":5,"column_end":42}},{"value":"/    tokio::task::yield_now().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593441,"byte_end":12593479,"line_start":485,"line_end":485,"column_start":5,"column_end":43}},{"value":"/    println!(\"Hello from Tokio!\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593484,"byte_end":12593521,"line_start":486,"line_end":486,"column_start":5,"column_end":42}},{"value":"/ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593526,"byte_end":12593532,"line_start":487,"line_end":487,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593537,"byte_end":12593544,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593549,"byte_end":12593556,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593561,"byte_end":12593578,"line_start":490,"line_end":490,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594171,"byte_end":12594176,"line_start":514,"line_end":514,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593779,"byte_end":12593816,"line_start":499,"line_end":499,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593821,"byte_end":12593824,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593829,"byte_end":12593889,"line_start":501,"line_end":501,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593894,"byte_end":12593897,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593902,"byte_end":12593916,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593921,"byte_end":12593924,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593929,"byte_end":12593936,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593941,"byte_end":12593973,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593978,"byte_end":12593981,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12593986,"byte_end":12594045,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594050,"byte_end":12594053,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594058,"byte_end":12594081,"line_start":510,"line_end":510,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594086,"byte_end":12594135,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594140,"byte_end":12594147,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594152,"byte_end":12594159,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595356,"byte_end":12595373,"line_start":552,"line_end":552,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594846,"byte_end":12594906,"line_start":535,"line_end":535,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594911,"byte_end":12594914,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594919,"byte_end":12594990,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ be overridden using .thread_keep_alive().","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12594995,"byte_end":12595040,"line_start":538,"line_end":538,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595045,"byte_end":12595048,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595053,"byte_end":12595066,"line_start":540,"line_end":540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595071,"byte_end":12595074,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595079,"byte_end":12595086,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595091,"byte_end":12595116,"line_start":543,"line_end":543,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595121,"byte_end":12595151,"line_start":544,"line_end":544,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595156,"byte_end":12595159,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595164,"byte_end":12595185,"line_start":546,"line_end":546,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595190,"byte_end":12595239,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595244,"byte_end":12595298,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595303,"byte_end":12595320,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595325,"byte_end":12595332,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12595337,"byte_end":12595344,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12597718,"byte_end":12597729,"line_start":629,"line_end":629,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610258,"byte_end":12610264,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12609989,"byte_end":12610015,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610016,"byte_end":12610019,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610020,"byte_end":12610108,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610109,"byte_end":12610159,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610160,"byte_end":12610163,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12610164,"byte_end":12610222,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611474,"byte_end":12611484,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611179,"byte_end":12611205,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611206,"byte_end":12611209,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611210,"byte_end":12611291,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611292,"byte_end":12611324,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611325,"byte_end":12611328,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611329,"byte_end":12611386,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611404,"byte_end":12611462,"line_start":57,"line_end":57,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611983,"byte_end":12611988,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enters the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enters the runtime context. This allows you to construct types that must","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611592,"byte_end":12611668,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611673,"byte_end":12611751,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611756,"byte_end":12611824,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611829,"byte_end":12611832,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611837,"byte_end":12611877,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611882,"byte_end":12611929,"line_start":69,"line_end":69,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611934,"byte_end":12611971,"line_start":70,"line_end":70,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613501,"byte_end":12613508,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`.","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612151,"byte_end":12612216,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612221,"byte_end":12612224,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612229,"byte_end":12612240,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612245,"byte_end":12612248,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612253,"byte_end":12612347,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612352,"byte_end":12612444,"line_start":83,"line_end":83,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612449,"byte_end":12612525,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612530,"byte_end":12612533,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612538,"byte_end":12612552,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612557,"byte_end":12612560,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612565,"byte_end":12612647,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612652,"byte_end":12612698,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612703,"byte_end":12612706,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612711,"byte_end":12612718,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612723,"byte_end":12612745,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612750,"byte_end":12612784,"line_start":93,"line_end":93,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612789,"byte_end":12612805,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612810,"byte_end":12612849,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612854,"byte_end":12612876,"line_start":96,"line_end":96,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612881,"byte_end":12612912,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612917,"byte_end":12612920,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612925,"byte_end":12612966,"line_start":99,"line_end":99,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12612971,"byte_end":12613006,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613011,"byte_end":12613035,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613040,"byte_end":12613096,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613101,"byte_end":12613108,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613113,"byte_end":12613116,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613121,"byte_end":12613139,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613144,"byte_end":12613171,"line_start":106,"line_end":106,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613176,"byte_end":12613261,"line_start":107,"line_end":107,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613266,"byte_end":12613307,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613312,"byte_end":12613357,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613362,"byte_end":12613405,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613410,"byte_end":12613417,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613422,"byte_end":12613451,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613456,"byte_end":12613465,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613470,"byte_end":12613477,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613482,"byte_end":12613489,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613752,"byte_end":12613763,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613559,"byte_end":12613619,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613624,"byte_end":12613627,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613632,"byte_end":12613683,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613688,"byte_end":12613691,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613696,"byte_end":12613740,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614666,"byte_end":12614671,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawns a future onto the Tokio runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613843,"byte_end":12613886,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613891,"byte_end":12613894,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613899,"byte_end":12613970,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12613975,"byte_end":12614050,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614055,"byte_end":12614078,"line_start":133,"line_end":133,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614083,"byte_end":12614086,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614091,"byte_end":12614150,"line_start":135,"line_end":135,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614155,"byte_end":12614158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614163,"byte_end":12614184,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614189,"byte_end":12614192,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614197,"byte_end":12614211,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614216,"byte_end":12614219,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614224,"byte_end":12614231,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614236,"byte_end":12614268,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614273,"byte_end":12614276,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614281,"byte_end":12614297,"line_start":144,"line_end":144,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614302,"byte_end":12614327,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614332,"byte_end":12614369,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614374,"byte_end":12614411,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614416,"byte_end":12614445,"line_start":148,"line_end":148,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614450,"byte_end":12614453,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614458,"byte_end":12614513,"line_start":150,"line_end":150,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614518,"byte_end":12614542,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614547,"byte_end":12614598,"line_start":152,"line_end":152,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614603,"byte_end":12614610,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614615,"byte_end":12614622,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614627,"byte_end":12614634,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614639,"byte_end":12614654,"line_start":156,"line_end":156,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615552,"byte_end":12615566,"line_start":187,"line_end":187,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided function on an executor dedicated to blocking.\n operations.","sig":null,"attributes":[{"value":"/ Runs the provided function on an executor dedicated to blocking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12614977,"byte_end":12615045,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ operations.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615050,"byte_end":12615065,"line_start":168,"line_end":168,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615070,"byte_end":12615073,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615078,"byte_end":12615092,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615097,"byte_end":12615100,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615105,"byte_end":12615112,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615117,"byte_end":12615149,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615154,"byte_end":12615157,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615162,"byte_end":12615178,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615183,"byte_end":12615208,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615213,"byte_end":12615250,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615255,"byte_end":12615292,"line_start":178,"line_end":178,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615297,"byte_end":12615326,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615331,"byte_end":12615334,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615339,"byte_end":12615405,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615410,"byte_end":12615440,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615445,"byte_end":12615496,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615501,"byte_end":12615508,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615513,"byte_end":12615520,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12615525,"byte_end":12615540,"line_start":186,"line_end":186,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12621171,"byte_end":12621179,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Runs a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618323,"byte_end":12618395,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618400,"byte_end":12618403,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618408,"byte_end":12618482,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618487,"byte_end":12618560,"line_start":276,"line_end":276,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618565,"byte_end":12618630,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618635,"byte_end":12618638,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618643,"byte_end":12618704,"line_start":279,"line_end":279,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618709,"byte_end":12618785,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618790,"byte_end":12618866,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618871,"byte_end":12618945,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12618950,"byte_end":12619023,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619028,"byte_end":12619074,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619079,"byte_end":12619082,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619087,"byte_end":12619126,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619131,"byte_end":12619134,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619139,"byte_end":12619209,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619214,"byte_end":12619288,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619293,"byte_end":12619368,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619373,"byte_end":12619446,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619451,"byte_end":12619509,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619514,"byte_end":12619517,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619522,"byte_end":12619534,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619539,"byte_end":12619542,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619547,"byte_end":12619622,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619627,"byte_end":12619700,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619705,"byte_end":12619741,"line_start":298,"line_end":298,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619746,"byte_end":12619749,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619754,"byte_end":12619768,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619773,"byte_end":12619776,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619781,"byte_end":12619788,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619793,"byte_end":12619825,"line_start":303,"line_end":303,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619830,"byte_end":12619833,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619838,"byte_end":12619863,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619868,"byte_end":12619906,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619911,"byte_end":12619914,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619919,"byte_end":12619956,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619961,"byte_end":12619990,"line_start":309,"line_end":309,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12619995,"byte_end":12619998,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620003,"byte_end":12620074,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620079,"byte_end":12620106,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620111,"byte_end":12620137,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620142,"byte_end":12620149,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620154,"byte_end":12620161,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620166,"byte_end":12620169,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620174,"byte_end":12620205,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620210,"byte_end":12620213,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620218,"byte_end":12620225,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620230,"byte_end":12620261,"line_start":320,"line_end":320,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620266,"byte_end":12620269,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620274,"byte_end":12620292,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620297,"byte_end":12620319,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620324,"byte_end":12620363,"line_start":324,"line_end":324,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620368,"byte_end":12620404,"line_start":325,"line_end":325,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620409,"byte_end":12620483,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620488,"byte_end":12620523,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620528,"byte_end":12620562,"line_start":328,"line_end":328,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620567,"byte_end":12620582,"line_start":329,"line_end":329,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620587,"byte_end":12620598,"line_start":330,"line_end":330,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620603,"byte_end":12620608,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620613,"byte_end":12620620,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620625,"byte_end":12620628,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620633,"byte_end":12620681,"line_start":334,"line_end":334,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620686,"byte_end":12620736,"line_start":335,"line_end":335,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620741,"byte_end":12620804,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620809,"byte_end":12620894,"line_start":337,"line_end":337,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620899,"byte_end":12620978,"line_start":338,"line_end":338,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12620983,"byte_end":12621034,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12621039,"byte_end":12621067,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12621072,"byte_end":12621102,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12621107,"byte_end":12621139,"line_start":342,"line_end":342,"column_start":5,"column_end":37}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12621144,"byte_end":12621159,"line_start":343,"line_end":343,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622242,"byte_end":12622257,"line_start":379,"line_end":379,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"TryCurrentError {  }","parent":null,"children":[{"krate":0,"index":2847}],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622145,"byte_end":12622213,"line_start":377,"line_end":377,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622713,"byte_end":12622731,"line_start":398,"line_end":398,"column_start":12,"column_end":30},"name":"is_missing_context","qualname":"<TryCurrentError>::is_missing_context","value":"pub fn is_missing_context(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the call failed because there is currently no runtime in\n the Tokio context.\n","sig":null,"attributes":[{"value":"/ Returns true if the call failed because there is currently no runtime in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622598,"byte_end":12622674,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the Tokio context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622679,"byte_end":12622701,"line_start":397,"line_end":397,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623016,"byte_end":12623041,"line_start":405,"line_end":405,"column_start":12,"column_end":37},"name":"is_thread_local_destroyed","qualname":"<TryCurrentError>::is_thread_local_destroyed","value":"pub fn is_thread_local_destroyed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the call failed because the Tokio context thread-local\n had been destroyed. This can usually only happen if in the destructor of\n other thread-locals.\n","sig":null,"attributes":[{"value":"/ Returns true if the call failed because the Tokio context thread-local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622820,"byte_end":12622894,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ had been destroyed. This can usually only happen if in the destructor of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622899,"byte_end":12622975,"line_start":403,"line_end":403,"column_start":5,"column_end":81}},{"value":"/ other thread-locals.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622980,"byte_end":12623004,"line_start":404,"line_end":404,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2882},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12435157,"byte_end":12435164,"line_start":285,"line_end":285,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12437774,"byte_end":12437780,"line_start":363,"line_end":363,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12438675,"byte_end":12438680,"line_start":393,"line_end":393,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12438644,"byte_end":12438659,"line_start":392,"line_end":392,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12439424,"byte_end":12439438,"line_start":418,"line_end":418,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12439393,"byte_end":12439408,"line_start":417,"line_end":417,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12441395,"byte_end":12441403,"line_start":468,"line_end":468,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12441364,"byte_end":12441379,"line_start":467,"line_end":467,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12443031,"byte_end":12443036,"line_start":513,"line_end":513,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enters the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12444608,"byte_end":12444624,"line_start":552,"line_end":552,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12446055,"byte_end":12446074,"line_start":584,"line_end":584,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2928},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2929},{"krate":0,"index":2933},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":3158},{"krate":0,"index":3781},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4204},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4836},{"krate":0,"index":4839},{"krate":0,"index":4842},{"krate":0,"index":4845},{"krate":0,"index":4848},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4857},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5055},{"krate":0,"index":5058}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626590,"byte_end":12626654,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626655,"byte_end":12626658,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626659,"byte_end":12626734,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626735,"byte_end":12626815,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626816,"byte_end":12626895,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626896,"byte_end":12626930,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626931,"byte_end":12626934,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626935,"byte_end":12626959,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626960,"byte_end":12626963,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626964,"byte_end":12626985,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626986,"byte_end":12626989,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12626990,"byte_end":12627063,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627064,"byte_end":12627143,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627144,"byte_end":12627213,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627214,"byte_end":12627217,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627218,"byte_end":12627297,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627298,"byte_end":12627375,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627376,"byte_end":12627451,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627452,"byte_end":12627524,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627525,"byte_end":12627597,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627598,"byte_end":12627676,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627677,"byte_end":12627690,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627691,"byte_end":12627694,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627695,"byte_end":12627773,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627774,"byte_end":12627835,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627836,"byte_end":12627839,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627840,"byte_end":12627864,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627865,"byte_end":12627868,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627869,"byte_end":12627948,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12627949,"byte_end":12628027,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628028,"byte_end":12628072,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628073,"byte_end":12628076,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628077,"byte_end":12628157,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628158,"byte_end":12628174,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628175,"byte_end":12628178,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628179,"byte_end":12628186,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628187,"byte_end":12628216,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628217,"byte_end":12628220,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628221,"byte_end":12628264,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628265,"byte_end":12628327,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628328,"byte_end":12628333,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628334,"byte_end":12628337,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628338,"byte_end":12628356,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628357,"byte_end":12628378,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628379,"byte_end":12628421,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628422,"byte_end":12628425,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628426,"byte_end":12628459,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628460,"byte_end":12628507,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628508,"byte_end":12628542,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628543,"byte_end":12628554,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628555,"byte_end":12628558,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628559,"byte_end":12628636,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628637,"byte_end":12628640,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628641,"byte_end":12628683,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628684,"byte_end":12628720,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628721,"byte_end":12628726,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628727,"byte_end":12628734,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628735,"byte_end":12628738,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628739,"byte_end":12628803,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628804,"byte_end":12628868,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628869,"byte_end":12628931,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12628932,"byte_end":12629002,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629003,"byte_end":12629068,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629069,"byte_end":12629079,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629080,"byte_end":12629083,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629084,"byte_end":12629100,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629101,"byte_end":12629104,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629105,"byte_end":12629112,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629113,"byte_end":12629156,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629157,"byte_end":12629208,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629209,"byte_end":12629214,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629215,"byte_end":12629218,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629219,"byte_end":12629237,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629238,"byte_end":12629259,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629260,"byte_end":12629311,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629312,"byte_end":12629348,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629349,"byte_end":12629360,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629361,"byte_end":12629364,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629365,"byte_end":12629442,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629443,"byte_end":12629446,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629447,"byte_end":12629489,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629490,"byte_end":12629535,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629536,"byte_end":12629541,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629542,"byte_end":12629549,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629550,"byte_end":12629553,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629554,"byte_end":12629576,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629577,"byte_end":12629620,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629621,"byte_end":12629624,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629625,"byte_end":12629646,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629647,"byte_end":12629650,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629651,"byte_end":12629728,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629729,"byte_end":12629809,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629810,"byte_end":12629865,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629866,"byte_end":12629869,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629870,"byte_end":12629948,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629949,"byte_end":12629969,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629970,"byte_end":12629973,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629974,"byte_end":12629981,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12629982,"byte_end":12630008,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630009,"byte_end":12630012,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630013,"byte_end":12630066,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630067,"byte_end":12630121,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630122,"byte_end":12630127,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630128,"byte_end":12630131,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630132,"byte_end":12630150,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630151,"byte_end":12630172,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630173,"byte_end":12630219,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630220,"byte_end":12630223,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630224,"byte_end":12630257,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630258,"byte_end":12630286,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630287,"byte_end":12630339,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630340,"byte_end":12630384,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630385,"byte_end":12630398,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630399,"byte_end":12630410,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630411,"byte_end":12630414,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630415,"byte_end":12630462,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630463,"byte_end":12630501,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630502,"byte_end":12630511,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630512,"byte_end":12630517,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630518,"byte_end":12630525,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630526,"byte_end":12630529,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630530,"byte_end":12630610,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630611,"byte_end":12630688,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630689,"byte_end":12630762,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630763,"byte_end":12630838,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630839,"byte_end":12630852,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630853,"byte_end":12630856,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630857,"byte_end":12630932,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12630933,"byte_end":12631012,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631013,"byte_end":12631091,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631092,"byte_end":12631171,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631172,"byte_end":12631252,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631253,"byte_end":12631318,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631319,"byte_end":12631322,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631323,"byte_end":12631403,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631404,"byte_end":12631416,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631417,"byte_end":12631420,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631421,"byte_end":12631434,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631435,"byte_end":12631476,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631477,"byte_end":12631507,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631508,"byte_end":12631534,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631535,"byte_end":12631538,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631539,"byte_end":12631557,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631558,"byte_end":12631597,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631598,"byte_end":12631673,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631674,"byte_end":12631720,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631721,"byte_end":12631724,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631725,"byte_end":12631749,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631750,"byte_end":12631829,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631830,"byte_end":12631861,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631862,"byte_end":12631894,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631895,"byte_end":12631898,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631899,"byte_end":12631936,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12631937,"byte_end":12631999,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632000,"byte_end":12632015,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632016,"byte_end":12632025,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632026,"byte_end":12632029,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632030,"byte_end":12632109,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632110,"byte_end":12632185,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632186,"byte_end":12632264,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632265,"byte_end":12632312,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632313,"byte_end":12632330,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632331,"byte_end":12632334,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632335,"byte_end":12632382,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632383,"byte_end":12632424,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632425,"byte_end":12632434,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632435,"byte_end":12632438,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632439,"byte_end":12632453,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632454,"byte_end":12632459,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632460,"byte_end":12632467,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632468,"byte_end":12632471,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632472,"byte_end":12632547,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632548,"byte_end":12632623,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632624,"byte_end":12632703,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632704,"byte_end":12632769,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632770,"byte_end":12632847,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632848,"byte_end":12632851,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632852,"byte_end":12632930,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12632931,"byte_end":12633011,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633012,"byte_end":12633057,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633058,"byte_end":12633061,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633062,"byte_end":12633069,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633070,"byte_end":12633107,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633108,"byte_end":12633135,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633136,"byte_end":12633139,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633140,"byte_end":12633158,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633159,"byte_end":12633177,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633178,"byte_end":12633221,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633222,"byte_end":12633227,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633228,"byte_end":12633231,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633232,"byte_end":12633250,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633251,"byte_end":12633272,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633273,"byte_end":12633362,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633363,"byte_end":12633366,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633367,"byte_end":12633412,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633413,"byte_end":12633446,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633447,"byte_end":12633484,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633485,"byte_end":12633488,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633489,"byte_end":12633556,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633557,"byte_end":12633584,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633585,"byte_end":12633619,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633620,"byte_end":12633663,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633664,"byte_end":12633701,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633702,"byte_end":12633755,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633756,"byte_end":12633777,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633778,"byte_end":12633795,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633796,"byte_end":12633809,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633810,"byte_end":12633821,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633822,"byte_end":12633825,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633826,"byte_end":12633864,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633865,"byte_end":12633868,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633869,"byte_end":12633929,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633930,"byte_end":12633954,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633955,"byte_end":12633995,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12633996,"byte_end":12633999,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634000,"byte_end":12634055,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634056,"byte_end":12634116,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634117,"byte_end":12634120,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634121,"byte_end":12634191,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634192,"byte_end":12634241,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634242,"byte_end":12634245,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634246,"byte_end":12634299,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634300,"byte_end":12634316,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634317,"byte_end":12634326,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634327,"byte_end":12634330,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634331,"byte_end":12634372,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634373,"byte_end":12634424,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634425,"byte_end":12634464,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634465,"byte_end":12634474,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634475,"byte_end":12634480,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634481,"byte_end":12634488,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634489,"byte_end":12634492,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634493,"byte_end":12634509,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634510,"byte_end":12634513,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634514,"byte_end":12634540,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634541,"byte_end":12634544,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634545,"byte_end":12634612,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634613,"byte_end":12634685,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634686,"byte_end":12634759,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634760,"byte_end":12634813,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634814,"byte_end":12634817,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634818,"byte_end":12634898,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634899,"byte_end":12634921,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634922,"byte_end":12634925,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634926,"byte_end":12634941,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634942,"byte_end":12634945,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634946,"byte_end":12634953,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634954,"byte_end":12634985,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634986,"byte_end":12634989,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12634990,"byte_end":12635008,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635009,"byte_end":12635030,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635031,"byte_end":12635082,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635083,"byte_end":12635120,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635121,"byte_end":12635124,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635125,"byte_end":12635158,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635159,"byte_end":12635213,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635214,"byte_end":12635268,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635269,"byte_end":12635280,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635281,"byte_end":12635284,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635285,"byte_end":12635318,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635319,"byte_end":12635373,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635374,"byte_end":12635428,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635429,"byte_end":12635440,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635441,"byte_end":12635444,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635445,"byte_end":12635474,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635475,"byte_end":12635504,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635505,"byte_end":12635510,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635511,"byte_end":12635518,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635519,"byte_end":12635522,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635523,"byte_end":12635572,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635573,"byte_end":12635576,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635577,"byte_end":12635599,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635600,"byte_end":12635603,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635604,"byte_end":12635680,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635681,"byte_end":12635759,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635760,"byte_end":12635839,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635840,"byte_end":12635905,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635906,"byte_end":12635909,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635910,"byte_end":12635990,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635991,"byte_end":12635994,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12635995,"byte_end":12636069,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636070,"byte_end":12636143,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636144,"byte_end":12636157,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636158,"byte_end":12636161,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636162,"byte_end":12636235,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636236,"byte_end":12636316,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636317,"byte_end":12636392,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636393,"byte_end":12636396,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636397,"byte_end":12636404,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636405,"byte_end":12636432,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636433,"byte_end":12636480,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636481,"byte_end":12636484,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636485,"byte_end":12636501,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636502,"byte_end":12636505,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636506,"byte_end":12636548,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636549,"byte_end":12636568,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636569,"byte_end":12636595,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636596,"byte_end":12636601,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636602,"byte_end":12636605,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636606,"byte_end":12636623,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636624,"byte_end":12636681,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636682,"byte_end":12636740,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636741,"byte_end":12636793,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636794,"byte_end":12636803,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636804,"byte_end":12636809,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636810,"byte_end":12636813,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636814,"byte_end":12636849,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636850,"byte_end":12636878,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636879,"byte_end":12636884,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636885,"byte_end":12636888,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636889,"byte_end":12636907,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636908,"byte_end":12636929,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636930,"byte_end":12636973,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12636974,"byte_end":12637039,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637040,"byte_end":12637043,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637044,"byte_end":12637122,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637123,"byte_end":12637177,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637178,"byte_end":12637181,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637182,"byte_end":12637226,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637227,"byte_end":12637260,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637261,"byte_end":12637279,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637280,"byte_end":12637329,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637330,"byte_end":12637389,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637390,"byte_end":12637393,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637394,"byte_end":12637440,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637441,"byte_end":12637514,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637515,"byte_end":12637518,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637519,"byte_end":12637593,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637594,"byte_end":12637634,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637635,"byte_end":12637676,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637677,"byte_end":12637734,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637735,"byte_end":12637775,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637776,"byte_end":12637793,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637794,"byte_end":12637807,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637808,"byte_end":12637819,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637820,"byte_end":12637823,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637824,"byte_end":12637857,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637858,"byte_end":12637861,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637862,"byte_end":12637940,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637941,"byte_end":12637995,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12637996,"byte_end":12638006,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638007,"byte_end":12638084,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638085,"byte_end":12638163,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638164,"byte_end":12638199,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638200,"byte_end":12638223,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638224,"byte_end":12638287,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638288,"byte_end":12638324,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638325,"byte_end":12638328,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638329,"byte_end":12638379,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638380,"byte_end":12638459,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638460,"byte_end":12638535,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638536,"byte_end":12638589,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638590,"byte_end":12638636,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638637,"byte_end":12638669,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638670,"byte_end":12638673,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638674,"byte_end":12638721,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638722,"byte_end":12638773,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638774,"byte_end":12638777,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638778,"byte_end":12638828,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638829,"byte_end":12638900,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638901,"byte_end":12638936,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638937,"byte_end":12638940,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638941,"byte_end":12638963,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12638964,"byte_end":12639000,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639001,"byte_end":12639044,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639045,"byte_end":12639109,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639110,"byte_end":12639167,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639168,"byte_end":12639171,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639172,"byte_end":12639227,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639228,"byte_end":12639282,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639283,"byte_end":12639286,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639287,"byte_end":12639337,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639338,"byte_end":12639420,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639421,"byte_end":12639446,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639447,"byte_end":12639492,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639493,"byte_end":12639548,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639549,"byte_end":12639552,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639553,"byte_end":12639630,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639631,"byte_end":12639700,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639701,"byte_end":12639775,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639776,"byte_end":12639801,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639802,"byte_end":12639842,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639843,"byte_end":12639898,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639899,"byte_end":12639933,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639934,"byte_end":12639959,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639960,"byte_end":12639981,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12639982,"byte_end":12639999,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640000,"byte_end":12640015,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640016,"byte_end":12640019,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640020,"byte_end":12640053,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640054,"byte_end":12640063,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640064,"byte_end":12640067,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640068,"byte_end":12640109,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640110,"byte_end":12640144,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640145,"byte_end":12640154,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640155,"byte_end":12640160,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640161,"byte_end":12640168,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640169,"byte_end":12640172,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640173,"byte_end":12640218,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640219,"byte_end":12640272,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640273,"byte_end":12640276,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640277,"byte_end":12640304,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640305,"byte_end":12640308,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640309,"byte_end":12640383,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640384,"byte_end":12640458,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640459,"byte_end":12640529,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640530,"byte_end":12640580,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640581,"byte_end":12640584,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640585,"byte_end":12640662,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640663,"byte_end":12640740,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640741,"byte_end":12640744,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640745,"byte_end":12640822,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640823,"byte_end":12640878,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640879,"byte_end":12640882,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640883,"byte_end":12640962,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12640963,"byte_end":12641041,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641042,"byte_end":12641067,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641068,"byte_end":12641071,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641072,"byte_end":12641147,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641148,"byte_end":12641224,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641225,"byte_end":12641292,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641293,"byte_end":12641296,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641297,"byte_end":12641373,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641374,"byte_end":12641450,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641451,"byte_end":12641525,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641526,"byte_end":12641553,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2929},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641607,"byte_end":12641614,"line_start":432,"line_end":432,"column_start":13,"column_end":20},"name":"futures","qualname":"::sync::futures","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2930}],"decl_id":null,"docs":" Named future types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5158},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644469,"byte_end":12644476,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5161}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643408,"byte_end":12643494,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643495,"byte_end":12643498,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643499,"byte_end":12643506,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643507,"byte_end":12643527,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643528,"byte_end":12643551,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643552,"byte_end":12643581,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643582,"byte_end":12643605,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643606,"byte_end":12643609,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643610,"byte_end":12643655,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643656,"byte_end":12643701,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643702,"byte_end":12643722,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643723,"byte_end":12643755,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643756,"byte_end":12643810,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643811,"byte_end":12643856,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643857,"byte_end":12643903,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643904,"byte_end":12643940,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643941,"byte_end":12643986,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12643987,"byte_end":12644022,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644023,"byte_end":12644046,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644047,"byte_end":12644059,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644060,"byte_end":12644065,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644066,"byte_end":12644069,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644070,"byte_end":12644143,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644144,"byte_end":12644172,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644173,"byte_end":12644200,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644201,"byte_end":12644249,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644250,"byte_end":12644286,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644287,"byte_end":12644316,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644317,"byte_end":12644326,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644327,"byte_end":12644332,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644333,"byte_end":12644336,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644337,"byte_end":12644392,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644393,"byte_end":12644424,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644425,"byte_end":12644432,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644433,"byte_end":12644440,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12645038,"byte_end":12645041,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644786,"byte_end":12644851,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644856,"byte_end":12644859,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644864,"byte_end":12644950,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644955,"byte_end":12645006,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12645011,"byte_end":12645026,"line_start":62,"line_end":62,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12647059,"byte_end":12647063,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646589,"byte_end":12646649,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646654,"byte_end":12646657,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646662,"byte_end":12646736,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646741,"byte_end":12646766,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646771,"byte_end":12646774,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646779,"byte_end":12646872,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646877,"byte_end":12646968,"line_start":118,"line_end":118,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12646973,"byte_end":12647041,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5170},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650070,"byte_end":12650087,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12649936,"byte_end":12650034,"line_start":194,"line_end":194,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650327,"byte_end":12650336,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650125,"byte_end":12650188,"line_start":199,"line_end":199,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650193,"byte_end":12650196,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650201,"byte_end":12650289,"line_start":201,"line_end":201,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650294,"byte_end":12650315,"line_start":202,"line_end":202,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":2957},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2961},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3018},{"krate":0,"index":3022},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3044},{"krate":0,"index":3049},{"krate":0,"index":3055},{"krate":0,"index":3060},{"krate":0,"index":3064},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3109},{"krate":0,"index":3115},{"krate":0,"index":3118},{"krate":0,"index":3123},{"krate":0,"index":3128},{"krate":0,"index":3134},{"krate":0,"index":3140},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":3151},{"krate":0,"index":3156}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650378,"byte_end":12650458,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650459,"byte_end":12650477,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650478,"byte_end":12650481,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650482,"byte_end":12650560,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650561,"byte_end":12650636,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650637,"byte_end":12650715,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650716,"byte_end":12650770,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650771,"byte_end":12650774,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650775,"byte_end":12650851,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650852,"byte_end":12650932,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12650933,"byte_end":12651010,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651011,"byte_end":12651061,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651062,"byte_end":12651065,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651066,"byte_end":12651144,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651145,"byte_end":12651202,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651203,"byte_end":12651206,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651207,"byte_end":12651285,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651286,"byte_end":12651358,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651359,"byte_end":12651375,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651376,"byte_end":12651379,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651380,"byte_end":12651394,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651395,"byte_end":12651398,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651399,"byte_end":12651479,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651480,"byte_end":12651559,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651560,"byte_end":12651637,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651638,"byte_end":12651716,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651717,"byte_end":12651724,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651725,"byte_end":12651728,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651729,"byte_end":12651806,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651807,"byte_end":12651882,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651883,"byte_end":12651963,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651964,"byte_end":12651967,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12651968,"byte_end":12652040,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652041,"byte_end":12652119,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652120,"byte_end":12652196,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652197,"byte_end":12652256,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652257,"byte_end":12652260,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652261,"byte_end":12652339,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652340,"byte_end":12652414,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652415,"byte_end":12652451,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652452,"byte_end":12652455,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652456,"byte_end":12652535,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652536,"byte_end":12652613,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652614,"byte_end":12652689,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652690,"byte_end":12652721,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652722,"byte_end":12652725,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652726,"byte_end":12652740,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652741,"byte_end":12652744,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652745,"byte_end":12652820,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652821,"byte_end":12652899,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652900,"byte_end":12652977,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12652978,"byte_end":12653009,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653010,"byte_end":12653013,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653014,"byte_end":12653060,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653061,"byte_end":12653129,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653130,"byte_end":12653180,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653181,"byte_end":12653229,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653230,"byte_end":12653305,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653306,"byte_end":12653381,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653382,"byte_end":12653434,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653435,"byte_end":12653438,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653439,"byte_end":12653453,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653454,"byte_end":12653457,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653458,"byte_end":12653473,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653474,"byte_end":12653477,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653478,"byte_end":12653485,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653486,"byte_end":12653517,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653518,"byte_end":12653521,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653522,"byte_end":12653540,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653541,"byte_end":12653562,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653563,"byte_end":12653614,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653615,"byte_end":12653652,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653653,"byte_end":12653656,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653657,"byte_end":12653690,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653691,"byte_end":12653745,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653746,"byte_end":12653800,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653801,"byte_end":12653812,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653813,"byte_end":12653816,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653817,"byte_end":12653850,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653851,"byte_end":12653905,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653906,"byte_end":12653960,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653961,"byte_end":12653972,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653973,"byte_end":12653976,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12653977,"byte_end":12654006,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654007,"byte_end":12654036,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654037,"byte_end":12654042,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654043,"byte_end":12654050,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654051,"byte_end":12654054,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654055,"byte_end":12654071,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654072,"byte_end":12654075,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654076,"byte_end":12654083,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654084,"byte_end":12654115,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654116,"byte_end":12654119,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654120,"byte_end":12654138,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654139,"byte_end":12654160,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654161,"byte_end":12654210,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654211,"byte_end":12654214,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654215,"byte_end":12654244,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654245,"byte_end":12654274,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654275,"byte_end":12654304,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654305,"byte_end":12654308,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654309,"byte_end":12654346,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654347,"byte_end":12654389,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654390,"byte_end":12654393,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654394,"byte_end":12654463,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654464,"byte_end":12654467,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654468,"byte_end":12654517,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654518,"byte_end":12654567,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654568,"byte_end":12654573,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654574,"byte_end":12654581,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3015},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655778,"byte_end":12655784,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3017}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12654985,"byte_end":12655031,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655032,"byte_end":12655035,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655036,"byte_end":12655096,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655097,"byte_end":12655124,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655125,"byte_end":12655128,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655129,"byte_end":12655143,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655144,"byte_end":12655147,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655148,"byte_end":12655155,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655156,"byte_end":12655187,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655188,"byte_end":12655191,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655192,"byte_end":12655210,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655211,"byte_end":12655232,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655233,"byte_end":12655284,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655285,"byte_end":12655322,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655323,"byte_end":12655326,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655327,"byte_end":12655360,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655361,"byte_end":12655415,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655416,"byte_end":12655470,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655471,"byte_end":12655482,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655483,"byte_end":12655486,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655487,"byte_end":12655520,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655521,"byte_end":12655575,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655576,"byte_end":12655630,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655631,"byte_end":12655642,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655643,"byte_end":12655646,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655647,"byte_end":12655676,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655677,"byte_end":12655706,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655707,"byte_end":12655712,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655713,"byte_end":12655720,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655721,"byte_end":12655724,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655725,"byte_end":12655766,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3018},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656832,"byte_end":12656840,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655821,"byte_end":12655869,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655870,"byte_end":12655873,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655874,"byte_end":12655940,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655941,"byte_end":12655970,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655971,"byte_end":12655974,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12655975,"byte_end":12656053,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656054,"byte_end":12656066,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656067,"byte_end":12656070,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656071,"byte_end":12656178,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656179,"byte_end":12656182,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656183,"byte_end":12656197,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656198,"byte_end":12656201,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656202,"byte_end":12656209,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656210,"byte_end":12656241,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656242,"byte_end":12656245,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656246,"byte_end":12656264,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656265,"byte_end":12656286,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656287,"byte_end":12656338,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656339,"byte_end":12656376,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656377,"byte_end":12656380,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656381,"byte_end":12656414,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656415,"byte_end":12656469,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656470,"byte_end":12656524,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656525,"byte_end":12656536,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656537,"byte_end":12656540,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656541,"byte_end":12656574,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656575,"byte_end":12656629,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656630,"byte_end":12656684,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656685,"byte_end":12656696,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656697,"byte_end":12656700,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656701,"byte_end":12656730,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656731,"byte_end":12656760,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656761,"byte_end":12656766,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656767,"byte_end":12656774,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656775,"byte_end":12656778,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656779,"byte_end":12656820,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":3022},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12656989,"byte_end":12656994,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":5177},{"krate":0,"index":5181},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":5184},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":5196},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":3034},{"krate":0,"index":3036}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657001,"byte_end":12657026,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5177},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657498,"byte_end":12657507,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657051,"byte_end":12657116,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657121,"byte_end":12657124,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657129,"byte_end":12657201,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657206,"byte_end":12657283,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657288,"byte_end":12657347,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657352,"byte_end":12657355,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657360,"byte_end":12657410,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657415,"byte_end":12657461,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5180},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657511,"byte_end":12657516,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":5177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5185},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658113,"byte_end":12658119,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":5184},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658008,"byte_end":12658083,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658092,"byte_end":12658104,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658345,"byte_end":12658351,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":5184},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658130,"byte_end":12658202,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658211,"byte_end":12658271,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658280,"byte_end":12658283,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658292,"byte_end":12658336,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5184},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657988,"byte_end":12657997,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":5185},{"krate":0,"index":5187}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657755,"byte_end":12657822,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657827,"byte_end":12657830,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657835,"byte_end":12657887,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657892,"byte_end":12657942,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5197},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659191,"byte_end":12659196,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5196},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658991,"byte_end":12659049,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659058,"byte_end":12659115,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659124,"byte_end":12659127,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659136,"byte_end":12659182,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5199},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659312,"byte_end":12659318,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5196},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659207,"byte_end":12659282,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659291,"byte_end":12659303,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5201},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659591,"byte_end":12659597,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":5196},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659329,"byte_end":12659403,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659412,"byte_end":12659480,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659489,"byte_end":12659517,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659526,"byte_end":12659529,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659538,"byte_end":12659582,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5196},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658968,"byte_end":12658980,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":5197},{"krate":0,"index":5199},{"krate":0,"index":5201}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658723,"byte_end":12658794,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658799,"byte_end":12658802,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658807,"byte_end":12658867,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658872,"byte_end":12658922,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":3076},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663808,"byte_end":12663815,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662182,"byte_end":12662258,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662259,"byte_end":12662308,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662309,"byte_end":12662312,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662313,"byte_end":12662382,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662383,"byte_end":12662433,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662434,"byte_end":12662437,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662438,"byte_end":12662512,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662513,"byte_end":12662588,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662589,"byte_end":12662657,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662658,"byte_end":12662661,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662662,"byte_end":12662738,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662739,"byte_end":12662820,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662821,"byte_end":12662860,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662861,"byte_end":12662864,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662865,"byte_end":12662911,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662912,"byte_end":12662980,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662981,"byte_end":12663031,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663032,"byte_end":12663084,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663085,"byte_end":12663144,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663145,"byte_end":12663204,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663205,"byte_end":12663208,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663209,"byte_end":12663223,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663224,"byte_end":12663227,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663228,"byte_end":12663235,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663236,"byte_end":12663267,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663268,"byte_end":12663271,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663272,"byte_end":12663290,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663291,"byte_end":12663312,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663313,"byte_end":12663364,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663365,"byte_end":12663402,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663403,"byte_end":12663406,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663407,"byte_end":12663440,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663441,"byte_end":12663495,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663496,"byte_end":12663550,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663551,"byte_end":12663562,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663563,"byte_end":12663566,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663567,"byte_end":12663600,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663601,"byte_end":12663655,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663656,"byte_end":12663710,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663711,"byte_end":12663722,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663723,"byte_end":12663726,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663727,"byte_end":12663756,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663757,"byte_end":12663786,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663787,"byte_end":12663792,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12663793,"byte_end":12663800,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666867,"byte_end":12666871,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665017,"byte_end":12665091,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665096,"byte_end":12665132,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665137,"byte_end":12665140,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665145,"byte_end":12665220,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665225,"byte_end":12665291,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665296,"byte_end":12665347,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665352,"byte_end":12665355,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665360,"byte_end":12665372,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665377,"byte_end":12665380,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665385,"byte_end":12665459,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665464,"byte_end":12665540,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665545,"byte_end":12665598,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665603,"byte_end":12665606,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665611,"byte_end":12665621,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665626,"byte_end":12665629,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665634,"byte_end":12665706,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665711,"byte_end":12665786,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665791,"byte_end":12665852,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665857,"byte_end":12665860,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665865,"byte_end":12665938,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665943,"byte_end":12666008,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666013,"byte_end":12666031,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666036,"byte_end":12666039,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666044,"byte_end":12666094,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666099,"byte_end":12666159,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666164,"byte_end":12666167,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666172,"byte_end":12666186,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666191,"byte_end":12666194,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666199,"byte_end":12666206,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666211,"byte_end":12666242,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666247,"byte_end":12666250,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666255,"byte_end":12666273,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666278,"byte_end":12666299,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666304,"byte_end":12666355,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666360,"byte_end":12666397,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666402,"byte_end":12666405,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666410,"byte_end":12666443,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666448,"byte_end":12666502,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666507,"byte_end":12666561,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666566,"byte_end":12666577,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666582,"byte_end":12666585,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666590,"byte_end":12666623,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666628,"byte_end":12666682,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666687,"byte_end":12666741,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666746,"byte_end":12666757,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666762,"byte_end":12666765,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666770,"byte_end":12666799,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666804,"byte_end":12666833,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666838,"byte_end":12666843,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12666848,"byte_end":12666855,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667631,"byte_end":12667640,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667036,"byte_end":12667113,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667118,"byte_end":12667147,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667152,"byte_end":12667155,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667160,"byte_end":12667174,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667179,"byte_end":12667182,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667187,"byte_end":12667194,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667199,"byte_end":12667230,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667235,"byte_end":12667238,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667243,"byte_end":12667261,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667266,"byte_end":12667287,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667292,"byte_end":12667339,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667344,"byte_end":12667347,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667352,"byte_end":12667379,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667384,"byte_end":12667413,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667418,"byte_end":12667421,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667426,"byte_end":12667462,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667467,"byte_end":12667470,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667475,"byte_end":12667504,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667509,"byte_end":12667512,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667517,"byte_end":12667562,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667567,"byte_end":12667597,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667602,"byte_end":12667607,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667612,"byte_end":12667619,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668899,"byte_end":12668913,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667747,"byte_end":12667789,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667794,"byte_end":12667797,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667802,"byte_end":12667878,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667883,"byte_end":12667956,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667961,"byte_end":12667981,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667986,"byte_end":12667989,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12667994,"byte_end":12668004,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668009,"byte_end":12668012,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668017,"byte_end":12668087,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668092,"byte_end":12668160,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668165,"byte_end":12668178,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668183,"byte_end":12668186,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668191,"byte_end":12668243,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668248,"byte_end":12668298,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668303,"byte_end":12668349,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668354,"byte_end":12668414,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668419,"byte_end":12668467,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668472,"byte_end":12668475,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668480,"byte_end":12668494,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668499,"byte_end":12668502,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668507,"byte_end":12668514,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668519,"byte_end":12668550,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668555,"byte_end":12668558,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668563,"byte_end":12668581,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668586,"byte_end":12668607,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668612,"byte_end":12668660,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668665,"byte_end":12668668,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668673,"byte_end":12668716,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668721,"byte_end":12668724,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668729,"byte_end":12668767,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668772,"byte_end":12668775,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668780,"byte_end":12668823,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668828,"byte_end":12668831,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668836,"byte_end":12668865,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668870,"byte_end":12668875,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12668880,"byte_end":12668887,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678760,"byte_end":12678764,"line_start":884,"line_end":884,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676248,"byte_end":12676294,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676299,"byte_end":12676302,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676307,"byte_end":12676375,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676380,"byte_end":12676412,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676417,"byte_end":12676420,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676425,"byte_end":12676495,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676500,"byte_end":12676574,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676579,"byte_end":12676582,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676587,"byte_end":12676663,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676668,"byte_end":12676744,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676749,"byte_end":12676817,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676822,"byte_end":12676895,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676900,"byte_end":12676969,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676974,"byte_end":12677019,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677024,"byte_end":12677027,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677032,"byte_end":12677051,"line_start":827,"line_end":827,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677056,"byte_end":12677059,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677064,"byte_end":12677131,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677136,"byte_end":12677205,"line_start":830,"line_end":830,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677210,"byte_end":12677286,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677291,"byte_end":12677303,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677308,"byte_end":12677311,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677316,"byte_end":12677366,"line_start":834,"line_end":834,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677371,"byte_end":12677423,"line_start":835,"line_end":835,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677428,"byte_end":12677431,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677436,"byte_end":12677450,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677455,"byte_end":12677458,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677463,"byte_end":12677470,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677475,"byte_end":12677506,"line_start":840,"line_end":840,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677511,"byte_end":12677514,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677519,"byte_end":12677537,"line_start":842,"line_end":842,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677542,"byte_end":12677563,"line_start":843,"line_end":843,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677568,"byte_end":12677619,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677624,"byte_end":12677661,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677666,"byte_end":12677669,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677674,"byte_end":12677707,"line_start":847,"line_end":847,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677712,"byte_end":12677766,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677771,"byte_end":12677825,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677830,"byte_end":12677841,"line_start":850,"line_end":850,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677846,"byte_end":12677849,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677854,"byte_end":12677887,"line_start":852,"line_end":852,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677892,"byte_end":12677946,"line_start":853,"line_end":853,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12677951,"byte_end":12678005,"line_start":854,"line_end":854,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678010,"byte_end":12678021,"line_start":855,"line_end":855,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678026,"byte_end":12678029,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678034,"byte_end":12678063,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678068,"byte_end":12678097,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678102,"byte_end":12678107,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678112,"byte_end":12678119,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678124,"byte_end":12678127,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678132,"byte_end":12678148,"line_start":862,"line_end":862,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678153,"byte_end":12678156,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678161,"byte_end":12678168,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678173,"byte_end":12678204,"line_start":865,"line_end":865,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678209,"byte_end":12678212,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678217,"byte_end":12678235,"line_start":867,"line_end":867,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678240,"byte_end":12678261,"line_start":868,"line_end":868,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678266,"byte_end":12678315,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678320,"byte_end":12678323,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678328,"byte_end":12678357,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678362,"byte_end":12678391,"line_start":872,"line_end":872,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678396,"byte_end":12678425,"line_start":873,"line_end":873,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678430,"byte_end":12678433,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678438,"byte_end":12678475,"line_start":875,"line_end":875,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678480,"byte_end":12678522,"line_start":876,"line_end":876,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678527,"byte_end":12678530,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678535,"byte_end":12678604,"line_start":878,"line_end":878,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678609,"byte_end":12678612,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678617,"byte_end":12678666,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678671,"byte_end":12678720,"line_start":881,"line_end":881,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678725,"byte_end":12678730,"line_start":882,"line_end":882,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678735,"byte_end":12678742,"line_start":883,"line_end":883,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680525,"byte_end":12680533,"line_start":929,"line_end":929,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678866,"byte_end":12678939,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678944,"byte_end":12678947,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12678952,"byte_end":12679024,"line_start":891,"line_end":891,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679029,"byte_end":12679053,"line_start":892,"line_end":892,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679058,"byte_end":12679061,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679066,"byte_end":12679146,"line_start":894,"line_end":894,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679151,"byte_end":12679225,"line_start":895,"line_end":895,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679230,"byte_end":12679233,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679238,"byte_end":12679311,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679316,"byte_end":12679390,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679395,"byte_end":12679398,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679403,"byte_end":12679479,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679484,"byte_end":12679560,"line_start":901,"line_end":901,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679565,"byte_end":12679636,"line_start":902,"line_end":902,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679641,"byte_end":12679714,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679719,"byte_end":12679792,"line_start":904,"line_end":904,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679797,"byte_end":12679868,"line_start":905,"line_end":905,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679873,"byte_end":12679925,"line_start":906,"line_end":906,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679930,"byte_end":12679933,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679938,"byte_end":12679990,"line_start":908,"line_end":908,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12679995,"byte_end":12680055,"line_start":909,"line_end":909,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680060,"byte_end":12680110,"line_start":910,"line_end":910,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680115,"byte_end":12680118,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680123,"byte_end":12680137,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680142,"byte_end":12680145,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680150,"byte_end":12680157,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680162,"byte_end":12680193,"line_start":915,"line_end":915,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680198,"byte_end":12680201,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680206,"byte_end":12680224,"line_start":917,"line_end":917,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680229,"byte_end":12680250,"line_start":918,"line_end":918,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680255,"byte_end":12680305,"line_start":919,"line_end":919,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680310,"byte_end":12680313,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680318,"byte_end":12680358,"line_start":921,"line_end":921,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680363,"byte_end":12680366,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680371,"byte_end":12680400,"line_start":923,"line_end":923,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680405,"byte_end":12680408,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680413,"byte_end":12680456,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680461,"byte_end":12680491,"line_start":926,"line_end":926,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680496,"byte_end":12680501,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680506,"byte_end":12680513,"line_start":928,"line_end":928,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3158},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":3159},{"krate":0,"index":3256},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3589},{"krate":0,"index":3668},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3780}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12684806,"byte_end":12684876,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12684877,"byte_end":12684900,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12684901,"byte_end":12684904,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12684905,"byte_end":12684985,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12684986,"byte_end":12685064,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685065,"byte_end":12685141,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685142,"byte_end":12685221,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685222,"byte_end":12685302,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685303,"byte_end":12685374,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685375,"byte_end":12685397,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685398,"byte_end":12685401,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685402,"byte_end":12685479,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685480,"byte_end":12685551,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685552,"byte_end":12685617,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685618,"byte_end":12685702,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685703,"byte_end":12685781,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685782,"byte_end":12685859,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685860,"byte_end":12685938,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12685939,"byte_end":12686018,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686019,"byte_end":12686036,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686037,"byte_end":12686040,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686041,"byte_end":12686044,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686045,"byte_end":12686064,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686065,"byte_end":12686068,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686069,"byte_end":12686135,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686136,"byte_end":12686216,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686217,"byte_end":12686294,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686295,"byte_end":12686298,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686299,"byte_end":12686369,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686370,"byte_end":12686449,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686450,"byte_end":12686473,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686474,"byte_end":12686477,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686478,"byte_end":12686498,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686499,"byte_end":12686502,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686503,"byte_end":12686583,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686584,"byte_end":12686664,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686665,"byte_end":12686743,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686744,"byte_end":12686816,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686817,"byte_end":12686891,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686892,"byte_end":12686904,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686905,"byte_end":12686908,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686909,"byte_end":12686956,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686957,"byte_end":12686960,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12686961,"byte_end":12687042,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687043,"byte_end":12687078,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687079,"byte_end":12687082,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687083,"byte_end":12687163,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687164,"byte_end":12687245,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687246,"byte_end":12687320,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687321,"byte_end":12687402,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687403,"byte_end":12687448,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687449,"byte_end":12687452,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687453,"byte_end":12687533,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687534,"byte_end":12687612,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687613,"byte_end":12687679,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687680,"byte_end":12687762,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687763,"byte_end":12687827,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687828,"byte_end":12687831,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Please be aware that the above remarks were written with the `mpsc` channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687832,"byte_end":12687911,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ in mind, but they can also be generalized to other kinds of channels. In","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687912,"byte_end":12687988,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ general, any channel method that isn't marked async can be called anywhere,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12687989,"byte_end":12688068,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ including outside of the runtime. For example, sending a message on a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688069,"byte_end":12688142,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ oneshot channel from outside the runtime is perfectly fine.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688143,"byte_end":12688206,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688207,"byte_end":12688210,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Multiple runtimes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688211,"byte_end":12688234,"line_start":67,"line_end":67,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688235,"byte_end":12688238,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The mpsc channel does not care about which runtime you use it in, and can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688239,"byte_end":12688319,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ used to send messages from one runtime to another. It can also be used in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688320,"byte_end":12688397,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ non-Tokio runtimes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688398,"byte_end":12688421,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688422,"byte_end":12688425,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ There is one exception to the above: the [`send_timeout`] must be used from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688426,"byte_end":12688505,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ within a Tokio runtime, however it is still not tied to one specific Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688506,"byte_end":12688584,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ runtime, and the sender may be moved from one Tokio runtime to another.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688585,"byte_end":12688660,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688661,"byte_end":12688664,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688665,"byte_end":12688706,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688707,"byte_end":12688752,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688753,"byte_end":12688806,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688807,"byte_end":12688862,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688863,"byte_end":12688926,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688927,"byte_end":12688992,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12688993,"byte_end":12689052,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689053,"byte_end":12689116,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689117,"byte_end":12689177,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689178,"byte_end":12689223,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689224,"byte_end":12689314,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/ [`send_timeout`]: crate::sync::mpsc::Sender::send_timeout","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689315,"byte_end":12689376,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3287},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703542,"byte_end":12703548,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3289}],"decl_id":null,"docs":" Sends values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends values to the associated `Receiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703202,"byte_end":12703248,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703249,"byte_end":12703252,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703253,"byte_end":12703316,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703317,"byte_end":12703320,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To convert the `Sender` into a `Sink` or use it in a poll function, you can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703321,"byte_end":12703400,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ use the [`PollSender`] utility.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703401,"byte_end":12703436,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703437,"byte_end":12703440,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703441,"byte_end":12703530,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703924,"byte_end":12703930,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":3293}],"decl_id":null,"docs":" Permits to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permits to send one value into the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703591,"byte_end":12703638,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703639,"byte_end":12703642,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703643,"byte_end":12703730,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703731,"byte_end":12703814,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703815,"byte_end":12703818,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703819,"byte_end":12703861,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703862,"byte_end":12703912,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704499,"byte_end":12704510,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":3296}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12703981,"byte_end":12704033,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704034,"byte_end":12704037,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704038,"byte_end":12704115,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704116,"byte_end":12704145,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704146,"byte_end":12704149,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704150,"byte_end":12704222,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704223,"byte_end":12704301,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704302,"byte_end":12704342,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704343,"byte_end":12704346,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704347,"byte_end":12704369,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704370,"byte_end":12704424,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704425,"byte_end":12704487,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3297},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704878,"byte_end":12704886,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3299}],"decl_id":null,"docs":" Receives values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receives values from the associated `Sender`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704561,"byte_end":12704610,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704611,"byte_end":12704614,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704615,"byte_end":12704678,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704679,"byte_end":12704682,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704683,"byte_end":12704756,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704757,"byte_end":12704760,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704761,"byte_end":12704866,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":3300},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706336,"byte_end":12706343,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12704959,"byte_end":12705038,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705039,"byte_end":12705061,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705062,"byte_end":12705065,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705066,"byte_end":12705142,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to send new messages will wait until a message is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705143,"byte_end":12705221,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705222,"byte_end":12705301,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705302,"byte_end":12705305,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705306,"byte_end":12705383,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705384,"byte_end":12705409,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705410,"byte_end":12705413,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705414,"byte_end":12705493,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705494,"byte_end":12705542,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705543,"byte_end":12705546,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705547,"byte_end":12705626,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705627,"byte_end":12705702,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705703,"byte_end":12705762,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705763,"byte_end":12705766,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705767,"byte_end":12705779,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705780,"byte_end":12705783,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705784,"byte_end":12705823,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705824,"byte_end":12705827,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705828,"byte_end":12705842,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705843,"byte_end":12705846,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705847,"byte_end":12705858,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705859,"byte_end":12705885,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705886,"byte_end":12705889,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705890,"byte_end":12705908,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705909,"byte_end":12705930,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705931,"byte_end":12705977,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705978,"byte_end":12705981,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12705982,"byte_end":12706015,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706016,"byte_end":12706044,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706045,"byte_end":12706095,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706096,"byte_end":12706145,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706146,"byte_end":12706173,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706174,"byte_end":12706191,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706192,"byte_end":12706205,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706206,"byte_end":12706217,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706218,"byte_end":12706221,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706222,"byte_end":12706267,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706268,"byte_end":12706304,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706305,"byte_end":12706314,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706315,"byte_end":12706320,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706321,"byte_end":12706328,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708974,"byte_end":12708978,"line_start":185,"line_end":185,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706943,"byte_end":12706989,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706994,"byte_end":12706997,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707002,"byte_end":12707077,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707082,"byte_end":12707155,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707160,"byte_end":12707236,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707241,"byte_end":12707316,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707321,"byte_end":12707324,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707329,"byte_end":12707402,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707407,"byte_end":12707481,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.  Note that if [`close`] is called, but there are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707486,"byte_end":12707561,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ still outstanding [`Permits`] from before it was closed, the channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707566,"byte_end":12707641,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ not considered closed by `recv` until the permits are released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707646,"byte_end":12707713,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707718,"byte_end":12707721,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707726,"byte_end":12707745,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707750,"byte_end":12707753,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707758,"byte_end":12707825,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707830,"byte_end":12707899,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707904,"byte_end":12707980,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12707985,"byte_end":12707997,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708002,"byte_end":12708005,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708010,"byte_end":12708036,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708041,"byte_end":12708090,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708095,"byte_end":12708098,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708103,"byte_end":12708117,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708122,"byte_end":12708125,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708130,"byte_end":12708137,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708142,"byte_end":12708168,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708173,"byte_end":12708176,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708181,"byte_end":12708199,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708204,"byte_end":12708225,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708230,"byte_end":12708276,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708281,"byte_end":12708284,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708289,"byte_end":12708322,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708327,"byte_end":12708371,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708376,"byte_end":12708387,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708392,"byte_end":12708395,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708400,"byte_end":12708451,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708456,"byte_end":12708498,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708503,"byte_end":12708508,"line_start":166,"line_end":166,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708513,"byte_end":12708520,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708525,"byte_end":12708528,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708533,"byte_end":12708557,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708562,"byte_end":12708565,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708570,"byte_end":12708577,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708582,"byte_end":12708608,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708613,"byte_end":12708616,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708621,"byte_end":12708639,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708644,"byte_end":12708665,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708670,"byte_end":12708716,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708721,"byte_end":12708724,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708729,"byte_end":12708769,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708774,"byte_end":12708814,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708819,"byte_end":12708822,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708827,"byte_end":12708878,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708883,"byte_end":12708934,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708939,"byte_end":12708944,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12708949,"byte_end":12708956,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710581,"byte_end":12710589,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709099,"byte_end":12709153,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709158,"byte_end":12709161,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709166,"byte_end":12709237,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709242,"byte_end":12709308,"line_start":193,"line_end":193,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709313,"byte_end":12709316,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709321,"byte_end":12709389,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709394,"byte_end":12709467,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709472,"byte_end":12709475,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709480,"byte_end":12709549,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709554,"byte_end":12709585,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709590,"byte_end":12709593,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709598,"byte_end":12709658,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709663,"byte_end":12709737,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709742,"byte_end":12709776,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709781,"byte_end":12709821,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709826,"byte_end":12709866,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709871,"byte_end":12709874,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709879,"byte_end":12709893,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709898,"byte_end":12709901,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709906,"byte_end":12709913,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709918,"byte_end":12709944,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12709949,"byte_end":12709996,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710001,"byte_end":12710004,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710009,"byte_end":12710027,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710032,"byte_end":12710053,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710058,"byte_end":12710104,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710109,"byte_end":12710112,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710117,"byte_end":12710157,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710162,"byte_end":12710165,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710170,"byte_end":12710217,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710222,"byte_end":12710282,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710287,"byte_end":12710290,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710295,"byte_end":12710335,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710340,"byte_end":12710393,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710398,"byte_end":12710415,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710420,"byte_end":12710423,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710428,"byte_end":12710475,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710480,"byte_end":12710547,"line_start":227,"line_end":227,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710552,"byte_end":12710557,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710562,"byte_end":12710569,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712613,"byte_end":12712626,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710670,"byte_end":12710732,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710737,"byte_end":12710740,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710745,"byte_end":12710820,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710825,"byte_end":12710898,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710903,"byte_end":12710979,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12710984,"byte_end":12711059,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711064,"byte_end":12711067,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711072,"byte_end":12711145,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711150,"byte_end":12711224,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711229,"byte_end":12711255,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711260,"byte_end":12711263,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711268,"byte_end":12711336,"line_start":245,"line_end":245,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711341,"byte_end":12711416,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711421,"byte_end":12711476,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711481,"byte_end":12711484,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711489,"byte_end":12711558,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711563,"byte_end":12711635,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711640,"byte_end":12711701,"line_start":251,"line_end":251,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711706,"byte_end":12711709,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711714,"byte_end":12711740,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711745,"byte_end":12711794,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711799,"byte_end":12711865,"line_start":255,"line_end":255,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711870,"byte_end":12711873,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711878,"byte_end":12711890,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711895,"byte_end":12711898,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711903,"byte_end":12711970,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711975,"byte_end":12711987,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12711992,"byte_end":12711995,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712000,"byte_end":12712014,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712019,"byte_end":12712022,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712027,"byte_end":12712034,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712039,"byte_end":12712059,"line_start":265,"line_end":265,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712064,"byte_end":12712096,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712101,"byte_end":12712127,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712132,"byte_end":12712135,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712140,"byte_end":12712155,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712160,"byte_end":12712211,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712216,"byte_end":12712219,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712224,"byte_end":12712271,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712276,"byte_end":12712329,"line_start":273,"line_end":273,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712334,"byte_end":12712345,"line_start":274,"line_end":274,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712350,"byte_end":12712353,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712358,"byte_end":12712380,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712385,"byte_end":12712406,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712411,"byte_end":12712445,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712450,"byte_end":12712492,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712497,"byte_end":12712512,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712517,"byte_end":12712550,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712555,"byte_end":12712560,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712565,"byte_end":12712572,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712577,"byte_end":12712601,"line_start":284,"line_end":284,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714037,"byte_end":12714042,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712709,"byte_end":12712772,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712777,"byte_end":12712780,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712785,"byte_end":12712860,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712865,"byte_end":12712937,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12712942,"byte_end":12713012,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713017,"byte_end":12713020,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713025,"byte_end":12713096,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713101,"byte_end":12713167,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713172,"byte_end":12713248,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713253,"byte_end":12713300,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713305,"byte_end":12713308,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713313,"byte_end":12713335,"line_start":300,"line_end":300,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713340,"byte_end":12713372,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713377,"byte_end":12713380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713385,"byte_end":12713399,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713404,"byte_end":12713407,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713412,"byte_end":12713419,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713424,"byte_end":12713450,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713455,"byte_end":12713458,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713463,"byte_end":12713481,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713486,"byte_end":12713507,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713512,"byte_end":12713557,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713562,"byte_end":12713565,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713570,"byte_end":12713603,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713608,"byte_end":12713634,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713639,"byte_end":12713694,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713699,"byte_end":12713730,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713735,"byte_end":12713758,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713763,"byte_end":12713776,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713781,"byte_end":12713792,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713797,"byte_end":12713800,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713805,"byte_end":12713824,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713829,"byte_end":12713832,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713837,"byte_end":12713884,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713889,"byte_end":12713925,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713930,"byte_end":12713939,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713944,"byte_end":12713947,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12713952,"byte_end":12714003,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714008,"byte_end":12714013,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714018,"byte_end":12714025,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715266,"byte_end":12715275,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714094,"byte_end":12714148,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714153,"byte_end":12714156,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714161,"byte_end":12714185,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714190,"byte_end":12714193,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714198,"byte_end":12714272,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714277,"byte_end":12714325,"line_start":338,"line_end":338,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714330,"byte_end":12714392,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714397,"byte_end":12714471,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714476,"byte_end":12714528,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714533,"byte_end":12714536,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714541,"byte_end":12714613,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714618,"byte_end":12714694,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714699,"byte_end":12714775,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714780,"byte_end":12714851,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714856,"byte_end":12714905,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714910,"byte_end":12714913,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714918,"byte_end":12714992,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12714997,"byte_end":12715069,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715074,"byte_end":12715147,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715152,"byte_end":12715228,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715233,"byte_end":12715254,"line_start":353,"line_end":353,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717822,"byte_end":12717826,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715731,"byte_end":12715782,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715787,"byte_end":12715790,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715795,"byte_end":12715871,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715876,"byte_end":12715952,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715957,"byte_end":12716031,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716036,"byte_end":12716111,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716116,"byte_end":12716185,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716190,"byte_end":12716262,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716267,"byte_end":12716298,"line_start":382,"line_end":382,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716303,"byte_end":12716306,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716311,"byte_end":12716323,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716328,"byte_end":12716331,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716336,"byte_end":12716409,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716414,"byte_end":12716488,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716493,"byte_end":12716553,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716558,"byte_end":12716561,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716566,"byte_end":12716596,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716601,"byte_end":12716627,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716632,"byte_end":12716635,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716640,"byte_end":12716659,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716664,"byte_end":12716667,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ If `send` is used as the event in a [`tokio::select!`](crate::select)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716672,"byte_end":12716745,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ statement and some other branch completes first, then it is guaranteed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716750,"byte_end":12716824,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ that the message was not sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716829,"byte_end":12716863,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716868,"byte_end":12716871,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716876,"byte_end":12716950,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12716955,"byte_end":12717023,"line_start":400,"line_end":400,"column_start":5,"column_end":73}},{"value":"/ `send` makes you lose your place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717028,"byte_end":12717078,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717083,"byte_end":12717086,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717091,"byte_end":12717105,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717110,"byte_end":12717113,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717118,"byte_end":12717188,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717193,"byte_end":12717232,"line_start":406,"line_end":406,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717237,"byte_end":12717240,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717245,"byte_end":12717256,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717261,"byte_end":12717287,"line_start":409,"line_end":409,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717292,"byte_end":12717295,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717300,"byte_end":12717318,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717323,"byte_end":12717344,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717349,"byte_end":12717393,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717398,"byte_end":12717401,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717406,"byte_end":12717439,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717444,"byte_end":12717472,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717477,"byte_end":12717527,"line_start":417,"line_end":417,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717532,"byte_end":12717581,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717586,"byte_end":12717613,"line_start":419,"line_end":419,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717618,"byte_end":12717635,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717640,"byte_end":12717653,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717658,"byte_end":12717669,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717674,"byte_end":12717677,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717682,"byte_end":12717727,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717732,"byte_end":12717768,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717773,"byte_end":12717782,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717787,"byte_end":12717792,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12717797,"byte_end":12717804,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719153,"byte_end":12719159,"line_start":475,"line_end":475,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718078,"byte_end":12718122,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718127,"byte_end":12718130,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718135,"byte_end":12718210,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718215,"byte_end":12718270,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718275,"byte_end":12718278,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718283,"byte_end":12718302,"line_start":444,"line_end":444,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718307,"byte_end":12718310,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718315,"byte_end":12718390,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718395,"byte_end":12718464,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718469,"byte_end":12718472,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718477,"byte_end":12718491,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718496,"byte_end":12718499,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718504,"byte_end":12718511,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718516,"byte_end":12718542,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718547,"byte_end":12718550,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718555,"byte_end":12718573,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718578,"byte_end":12718599,"line_start":455,"line_end":455,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718604,"byte_end":12718651,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718656,"byte_end":12718686,"line_start":457,"line_end":457,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718691,"byte_end":12718721,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718726,"byte_end":12718756,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718761,"byte_end":12718791,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718796,"byte_end":12718829,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718834,"byte_end":12718855,"line_start":462,"line_end":462,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718860,"byte_end":12718871,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718876,"byte_end":12718879,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718884,"byte_end":12718907,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718912,"byte_end":12718937,"line_start":466,"line_end":466,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718942,"byte_end":12718967,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12718972,"byte_end":12718997,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719002,"byte_end":12719027,"line_start":469,"line_end":469,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719032,"byte_end":12719056,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719061,"byte_end":12719071,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719076,"byte_end":12719113,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719118,"byte_end":12719123,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719128,"byte_end":12719135,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721333,"byte_end":12721341,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719213,"byte_end":12719272,"line_start":479,"line_end":479,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719277,"byte_end":12719280,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719285,"byte_end":12719364,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719369,"byte_end":12719444,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719449,"byte_end":12719527,"line_start":483,"line_end":483,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719532,"byte_end":12719574,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719579,"byte_end":12719582,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719587,"byte_end":12719599,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719604,"byte_end":12719607,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719612,"byte_end":12719683,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719688,"byte_end":12719764,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719769,"byte_end":12719791,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719796,"byte_end":12719799,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719804,"byte_end":12719877,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719882,"byte_end":12719956,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12719961,"byte_end":12720021,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720026,"byte_end":12720029,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720034,"byte_end":12720060,"line_start":496,"line_end":496,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720065,"byte_end":12720089,"line_start":497,"line_end":497,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720094,"byte_end":12720124,"line_start":498,"line_end":498,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720129,"byte_end":12720132,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720137,"byte_end":12720151,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720156,"byte_end":12720159,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720164,"byte_end":12720171,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720176,"byte_end":12720202,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720207,"byte_end":12720210,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720215,"byte_end":12720233,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720238,"byte_end":12720259,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720264,"byte_end":12720310,"line_start":507,"line_end":507,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720315,"byte_end":12720360,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720365,"byte_end":12720395,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720400,"byte_end":12720403,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720408,"byte_end":12720441,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720446,"byte_end":12720485,"line_start":512,"line_end":512,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720490,"byte_end":12720529,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720534,"byte_end":12720596,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720601,"byte_end":12720612,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720617,"byte_end":12720620,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720625,"byte_end":12720658,"line_start":517,"line_end":517,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720663,"byte_end":12720712,"line_start":518,"line_end":518,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720717,"byte_end":12720764,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720769,"byte_end":12720805,"line_start":520,"line_end":520,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720810,"byte_end":12720821,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720826,"byte_end":12720829,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720834,"byte_end":12720854,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720859,"byte_end":12720898,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720903,"byte_end":12720948,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720953,"byte_end":12720956,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12720961,"byte_end":12721000,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721005,"byte_end":12721050,"line_start":528,"line_end":528,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721055,"byte_end":12721058,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721063,"byte_end":12721112,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721117,"byte_end":12721148,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721153,"byte_end":12721215,"line_start":532,"line_end":532,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721220,"byte_end":12721285,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721290,"byte_end":12721299,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721304,"byte_end":12721309,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721314,"byte_end":12721321,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723614,"byte_end":12723626,"line_start":601,"line_end":601,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721746,"byte_end":12721826,"line_start":549,"line_end":549,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721831,"byte_end":12721834,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721839,"byte_end":12721916,"line_start":551,"line_end":551,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12721921,"byte_end":12721999,"line_start":552,"line_end":552,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722004,"byte_end":12722052,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722057,"byte_end":12722060,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722065,"byte_end":12722091,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722096,"byte_end":12722099,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722104,"byte_end":12722116,"line_start":557,"line_end":557,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722121,"byte_end":12722124,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722129,"byte_end":12722202,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722207,"byte_end":12722264,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722269,"byte_end":12722350,"line_start":561,"line_end":561,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722355,"byte_end":12722358,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722363,"byte_end":12722393,"line_start":563,"line_end":563,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722398,"byte_end":12722424,"line_start":564,"line_end":564,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722429,"byte_end":12722432,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722437,"byte_end":12722449,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722454,"byte_end":12722457,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This function panics if it is called outside the context of a Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722462,"byte_end":12722533,"line_start":568,"line_end":568,"column_start":5,"column_end":76}},{"value":"/ runtime [with time enabled](crate::runtime::Builder::enable_time).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722538,"byte_end":12722608,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722613,"byte_end":12722616,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722621,"byte_end":12722635,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722640,"byte_end":12722643,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722648,"byte_end":12722726,"line_start":573,"line_end":573,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722731,"byte_end":12722802,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722807,"byte_end":12722810,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722815,"byte_end":12722826,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722831,"byte_end":12722857,"line_start":577,"line_end":577,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722862,"byte_end":12722901,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722906,"byte_end":12722909,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722914,"byte_end":12722932,"line_start":580,"line_end":580,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722937,"byte_end":12722958,"line_start":581,"line_end":581,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12722963,"byte_end":12723007,"line_start":582,"line_end":582,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723012,"byte_end":12723015,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723020,"byte_end":12723053,"line_start":584,"line_end":584,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723058,"byte_end":12723086,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723091,"byte_end":12723177,"line_start":586,"line_end":586,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723182,"byte_end":12723235,"line_start":587,"line_end":587,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723240,"byte_end":12723267,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723272,"byte_end":12723289,"line_start":589,"line_end":589,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723294,"byte_end":12723307,"line_start":590,"line_end":590,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723312,"byte_end":12723323,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723328,"byte_end":12723331,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723336,"byte_end":12723381,"line_start":593,"line_end":593,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723386,"byte_end":12723422,"line_start":594,"line_end":594,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723427,"byte_end":12723479,"line_start":595,"line_end":595,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723484,"byte_end":12723493,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723498,"byte_end":12723503,"line_start":597,"line_end":597,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723508,"byte_end":12723515,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12723520,"byte_end":12723544,"line_start":599,"line_end":599,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725191,"byte_end":12725204,"line_start":654,"line_end":654,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724119,"byte_end":12724178,"line_start":620,"line_end":620,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724183,"byte_end":12724186,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724191,"byte_end":12724259,"line_start":622,"line_end":622,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724264,"byte_end":12724332,"line_start":623,"line_end":623,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724337,"byte_end":12724404,"line_start":624,"line_end":624,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724409,"byte_end":12724412,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724417,"byte_end":12724485,"line_start":626,"line_end":626,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724490,"byte_end":12724493,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724498,"byte_end":12724510,"line_start":628,"line_end":628,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724515,"byte_end":12724518,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724523,"byte_end":12724590,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724595,"byte_end":12724607,"line_start":631,"line_end":631,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724612,"byte_end":12724615,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724620,"byte_end":12724634,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724639,"byte_end":12724642,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724647,"byte_end":12724654,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724659,"byte_end":12724679,"line_start":636,"line_end":636,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724684,"byte_end":12724716,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724721,"byte_end":12724747,"line_start":638,"line_end":638,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724752,"byte_end":12724755,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724760,"byte_end":12724775,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724780,"byte_end":12724830,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724835,"byte_end":12724838,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724843,"byte_end":12724890,"line_start":643,"line_end":643,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724895,"byte_end":12724937,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724942,"byte_end":12724953,"line_start":645,"line_end":645,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724958,"byte_end":12724961,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12724966,"byte_end":12725019,"line_start":647,"line_end":647,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725024,"byte_end":12725074,"line_start":648,"line_end":648,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725079,"byte_end":12725090,"line_start":649,"line_end":649,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725095,"byte_end":12725128,"line_start":650,"line_end":650,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725133,"byte_end":12725138,"line_start":651,"line_end":651,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725143,"byte_end":12725150,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725155,"byte_end":12725179,"line_start":653,"line_end":653,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725895,"byte_end":12725904,"line_start":676,"line_end":676,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725313,"byte_end":12725377,"line_start":658,"line_end":658,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725382,"byte_end":12725452,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725457,"byte_end":12725468,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725473,"byte_end":12725476,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725481,"byte_end":12725526,"line_start":662,"line_end":662,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725531,"byte_end":12725590,"line_start":663,"line_end":663,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725595,"byte_end":12725598,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725603,"byte_end":12725610,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725615,"byte_end":12725671,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725676,"byte_end":12725705,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725710,"byte_end":12725713,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725718,"byte_end":12725743,"line_start":669,"line_end":669,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725748,"byte_end":12725778,"line_start":670,"line_end":670,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725783,"byte_end":12725786,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725791,"byte_end":12725804,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725809,"byte_end":12725837,"line_start":673,"line_end":673,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725842,"byte_end":12725871,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725876,"byte_end":12725883,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727546,"byte_end":12727553,"line_start":724,"line_end":724,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12725963,"byte_end":12726031,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726036,"byte_end":12726081,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726086,"byte_end":12726089,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726094,"byte_end":12726169,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726174,"byte_end":12726249,"line_start":684,"line_end":684,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726254,"byte_end":12726327,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726332,"byte_end":12726407,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726412,"byte_end":12726434,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726439,"byte_end":12726442,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726447,"byte_end":12726523,"line_start":689,"line_end":689,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726528,"byte_end":12726547,"line_start":690,"line_end":690,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726552,"byte_end":12726555,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726560,"byte_end":12726582,"line_start":692,"line_end":692,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726587,"byte_end":12726613,"line_start":693,"line_end":693,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726618,"byte_end":12726621,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726626,"byte_end":12726645,"line_start":695,"line_end":695,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726650,"byte_end":12726653,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726658,"byte_end":12726732,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726737,"byte_end":12726805,"line_start":698,"line_end":698,"column_start":5,"column_end":73}},{"value":"/ `reserve` makes you lose your place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726810,"byte_end":12726863,"line_start":699,"line_end":699,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726868,"byte_end":12726871,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726876,"byte_end":12726890,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726895,"byte_end":12726898,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726903,"byte_end":12726910,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726915,"byte_end":12726941,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726946,"byte_end":12726949,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726954,"byte_end":12726972,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12726977,"byte_end":12726998,"line_start":707,"line_end":707,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727003,"byte_end":12727047,"line_start":708,"line_end":708,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727052,"byte_end":12727055,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727060,"byte_end":12727087,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727092,"byte_end":12727141,"line_start":711,"line_end":711,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727146,"byte_end":12727149,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727154,"byte_end":12727220,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727225,"byte_end":12727255,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727260,"byte_end":12727303,"line_start":715,"line_end":715,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727308,"byte_end":12727311,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727316,"byte_end":12727357,"line_start":717,"line_end":717,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727362,"byte_end":12727387,"line_start":718,"line_end":718,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727392,"byte_end":12727395,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727400,"byte_end":12727451,"line_start":720,"line_end":720,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727456,"byte_end":12727506,"line_start":721,"line_end":721,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727511,"byte_end":12727516,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727521,"byte_end":12727528,"line_start":723,"line_end":723,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730931,"byte_end":12730944,"line_start":809,"line_end":809,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727691,"byte_end":12727765,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727770,"byte_end":12727844,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727849,"byte_end":12727868,"line_start":731,"line_end":731,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727873,"byte_end":12727876,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727881,"byte_end":12727955,"line_start":733,"line_end":733,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12727960,"byte_end":12728035,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728040,"byte_end":12728115,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728120,"byte_end":12728195,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728200,"byte_end":12728275,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728280,"byte_end":12728354,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728359,"byte_end":12728420,"line_start":739,"line_end":739,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728425,"byte_end":12728428,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728433,"byte_end":12728508,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728513,"byte_end":12728588,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728593,"byte_end":12728666,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728671,"byte_end":12728744,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728749,"byte_end":12728784,"line_start":745,"line_end":745,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728789,"byte_end":12728792,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728797,"byte_end":12728868,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728873,"byte_end":12728906,"line_start":748,"line_end":748,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728911,"byte_end":12728914,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728919,"byte_end":12728938,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728943,"byte_end":12728946,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12728951,"byte_end":12729025,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729030,"byte_end":12729098,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/ `reserve_owned` makes you lose your place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729103,"byte_end":12729162,"line_start":754,"line_end":754,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729167,"byte_end":12729170,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729175,"byte_end":12729189,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729194,"byte_end":12729241,"line_start":757,"line_end":757,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729246,"byte_end":12729253,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729258,"byte_end":12729284,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729289,"byte_end":12729292,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729297,"byte_end":12729315,"line_start":761,"line_end":761,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729320,"byte_end":12729341,"line_start":762,"line_end":762,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729346,"byte_end":12729390,"line_start":763,"line_end":763,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729395,"byte_end":12729398,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729403,"byte_end":12729450,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729455,"byte_end":12729510,"line_start":766,"line_end":766,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729515,"byte_end":12729518,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729523,"byte_end":12729584,"line_start":768,"line_end":768,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729589,"byte_end":12729617,"line_start":769,"line_end":769,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729622,"byte_end":12729656,"line_start":770,"line_end":770,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729661,"byte_end":12729664,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729669,"byte_end":12729721,"line_start":772,"line_end":772,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729726,"byte_end":12729776,"line_start":773,"line_end":773,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729781,"byte_end":12729784,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729789,"byte_end":12729833,"line_start":775,"line_end":775,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729838,"byte_end":12729874,"line_start":776,"line_end":776,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729879,"byte_end":12729884,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729889,"byte_end":12729896,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729901,"byte_end":12729904,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729909,"byte_end":12729985,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12729990,"byte_end":12730066,"line_start":781,"line_end":781,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730071,"byte_end":12730074,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730079,"byte_end":12730086,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730091,"byte_end":12730117,"line_start":784,"line_end":784,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730122,"byte_end":12730125,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730130,"byte_end":12730148,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730153,"byte_end":12730174,"line_start":787,"line_end":787,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730179,"byte_end":12730223,"line_start":788,"line_end":788,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730228,"byte_end":12730231,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730236,"byte_end":12730285,"line_start":790,"line_end":790,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730290,"byte_end":12730353,"line_start":791,"line_end":791,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730358,"byte_end":12730361,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730366,"byte_end":12730432,"line_start":793,"line_end":793,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730437,"byte_end":12730467,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730472,"byte_end":12730515,"line_start":795,"line_end":795,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730520,"byte_end":12730523,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730528,"byte_end":12730570,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730575,"byte_end":12730600,"line_start":798,"line_end":798,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730605,"byte_end":12730608,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730613,"byte_end":12730664,"line_start":800,"line_end":800,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730669,"byte_end":12730719,"line_start":801,"line_end":801,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730724,"byte_end":12730729,"line_start":802,"line_end":802,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730734,"byte_end":12730741,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730746,"byte_end":12730749,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730754,"byte_end":12730794,"line_start":805,"line_end":805,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730799,"byte_end":12730831,"line_start":806,"line_end":806,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730836,"byte_end":12730867,"line_start":807,"line_end":807,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12730872,"byte_end":12730913,"line_start":808,"line_end":808,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732846,"byte_end":12732857,"line_start":866,"line_end":866,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731323,"byte_end":12731404,"line_start":823,"line_end":823,"column_start":5,"column_end":86}},{"value":"/ available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731409,"byte_end":12731423,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731428,"byte_end":12731431,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731436,"byte_end":12731516,"line_start":826,"line_end":826,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731521,"byte_end":12731606,"line_start":827,"line_end":827,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731611,"byte_end":12731693,"line_start":828,"line_end":828,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731698,"byte_end":12731772,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731777,"byte_end":12731780,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731785,"byte_end":12731861,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731866,"byte_end":12731885,"line_start":832,"line_end":832,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731890,"byte_end":12731893,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731898,"byte_end":12731920,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731925,"byte_end":12731951,"line_start":835,"line_end":835,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731956,"byte_end":12731988,"line_start":836,"line_end":836,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12731993,"byte_end":12731996,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732001,"byte_end":12732015,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732020,"byte_end":12732023,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732028,"byte_end":12732035,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732040,"byte_end":12732066,"line_start":841,"line_end":841,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732071,"byte_end":12732074,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732079,"byte_end":12732097,"line_start":843,"line_end":843,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732102,"byte_end":12732123,"line_start":844,"line_end":844,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732128,"byte_end":12732172,"line_start":845,"line_end":845,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732177,"byte_end":12732180,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732185,"byte_end":12732212,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732217,"byte_end":12732264,"line_start":848,"line_end":848,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732269,"byte_end":12732272,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732277,"byte_end":12732343,"line_start":850,"line_end":850,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732348,"byte_end":12732378,"line_start":851,"line_end":851,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732383,"byte_end":12732426,"line_start":852,"line_end":852,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732431,"byte_end":12732434,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732439,"byte_end":12732503,"line_start":854,"line_end":854,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732508,"byte_end":12732553,"line_start":855,"line_end":855,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732558,"byte_end":12732601,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732606,"byte_end":12732609,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732614,"byte_end":12732655,"line_start":858,"line_end":858,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732660,"byte_end":12732685,"line_start":859,"line_end":859,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732690,"byte_end":12732693,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732698,"byte_end":12732749,"line_start":861,"line_end":861,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732754,"byte_end":12732804,"line_start":862,"line_end":862,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732809,"byte_end":12732812,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732817,"byte_end":12732822,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12732827,"byte_end":12732834,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735598,"byte_end":12735615,"line_start":931,"line_end":931,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733216,"byte_end":12733297,"line_start":876,"line_end":876,"column_start":5,"column_end":86}},{"value":"/ available, returning an owned permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733302,"byte_end":12733343,"line_start":877,"line_end":877,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733348,"byte_end":12733351,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733356,"byte_end":12733430,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733435,"byte_end":12733514,"line_start":880,"line_end":880,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733519,"byte_end":12733594,"line_start":881,"line_end":881,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733599,"byte_end":12733675,"line_start":882,"line_end":882,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733680,"byte_end":12733755,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733760,"byte_end":12733834,"line_start":884,"line_end":884,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733839,"byte_end":12733904,"line_start":885,"line_end":885,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733909,"byte_end":12733912,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733917,"byte_end":12733989,"line_start":887,"line_end":887,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12733994,"byte_end":12734069,"line_start":888,"line_end":888,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734074,"byte_end":12734147,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734152,"byte_end":12734225,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734230,"byte_end":12734306,"line_start":891,"line_end":891,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734311,"byte_end":12734386,"line_start":892,"line_end":892,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734391,"byte_end":12734428,"line_start":893,"line_end":893,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734433,"byte_end":12734436,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734441,"byte_end":12734526,"line_start":895,"line_end":895,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734531,"byte_end":12734550,"line_start":896,"line_end":896,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734555,"byte_end":12734558,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734563,"byte_end":12734595,"line_start":898,"line_end":898,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734600,"byte_end":12734631,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734636,"byte_end":12734680,"line_start":900,"line_end":900,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734685,"byte_end":12734726,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734731,"byte_end":12734734,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734739,"byte_end":12734753,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734758,"byte_end":12734761,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734766,"byte_end":12734773,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734778,"byte_end":12734804,"line_start":906,"line_end":906,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734809,"byte_end":12734812,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734817,"byte_end":12734835,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734840,"byte_end":12734861,"line_start":909,"line_end":909,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734866,"byte_end":12734910,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734915,"byte_end":12734918,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734923,"byte_end":12734950,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12734955,"byte_end":12735016,"line_start":913,"line_end":913,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735021,"byte_end":12735024,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735029,"byte_end":12735095,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735100,"byte_end":12735130,"line_start":916,"line_end":916,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735135,"byte_end":12735178,"line_start":917,"line_end":917,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735183,"byte_end":12735186,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735191,"byte_end":12735255,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735260,"byte_end":12735305,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735310,"byte_end":12735353,"line_start":921,"line_end":921,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735358,"byte_end":12735361,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735366,"byte_end":12735407,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735412,"byte_end":12735437,"line_start":924,"line_end":924,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735442,"byte_end":12735445,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735450,"byte_end":12735501,"line_start":926,"line_end":926,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735506,"byte_end":12735556,"line_start":927,"line_end":927,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735561,"byte_end":12735564,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735569,"byte_end":12735574,"line_start":929,"line_end":929,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12735579,"byte_end":12735586,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736382,"byte_end":12736394,"line_start":955,"line_end":955,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736011,"byte_end":12736068,"line_start":943,"line_end":943,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736073,"byte_end":12736076,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736081,"byte_end":12736095,"line_start":945,"line_end":945,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736100,"byte_end":12736103,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736108,"byte_end":12736115,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736120,"byte_end":12736175,"line_start":948,"line_end":948,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736180,"byte_end":12736206,"line_start":949,"line_end":949,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736211,"byte_end":12736246,"line_start":950,"line_end":950,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736251,"byte_end":12736254,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736259,"byte_end":12736316,"line_start":952,"line_end":952,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736321,"byte_end":12736358,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736363,"byte_end":12736370,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737437,"byte_end":12737445,"line_start":988,"line_end":988,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736481,"byte_end":12736529,"line_start":959,"line_end":959,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736534,"byte_end":12736537,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736542,"byte_end":12736634,"line_start":961,"line_end":961,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736639,"byte_end":12736727,"line_start":962,"line_end":962,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736732,"byte_end":12736735,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736740,"byte_end":12736754,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736759,"byte_end":12736762,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736767,"byte_end":12736774,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736779,"byte_end":12736805,"line_start":967,"line_end":967,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736810,"byte_end":12736813,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736818,"byte_end":12736836,"line_start":969,"line_end":969,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736841,"byte_end":12736862,"line_start":970,"line_end":970,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736867,"byte_end":12736917,"line_start":971,"line_end":971,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736922,"byte_end":12736925,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736930,"byte_end":12736967,"line_start":973,"line_end":973,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736972,"byte_end":12736975,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12736980,"byte_end":12737038,"line_start":975,"line_end":975,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737043,"byte_end":12737092,"line_start":976,"line_end":976,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737097,"byte_end":12737134,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737139,"byte_end":12737142,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the capacity by one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737147,"byte_end":12737218,"line_start":979,"line_end":979,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737223,"byte_end":12737247,"line_start":980,"line_end":980,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737252,"byte_end":12737285,"line_start":981,"line_end":981,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737290,"byte_end":12737327,"line_start":982,"line_end":982,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737332,"byte_end":12737337,"line_start":983,"line_end":983,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737342,"byte_end":12737349,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737354,"byte_end":12737357,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737362,"byte_end":12737388,"line_start":986,"line_end":986,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737393,"byte_end":12737425,"line_start":987,"line_end":987,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738992,"byte_end":12738996,"line_start":1044,"line_end":1044,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737919,"byte_end":12737965,"line_start":1012,"line_end":1012,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737970,"byte_end":12737973,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737978,"byte_end":12738053,"line_start":1014,"line_end":1014,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738058,"byte_end":12738132,"line_start":1015,"line_end":1015,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738137,"byte_end":12738211,"line_start":1016,"line_end":1016,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738216,"byte_end":12738264,"line_start":1017,"line_end":1017,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738269,"byte_end":12738272,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738277,"byte_end":12738317,"line_start":1019,"line_end":1019,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738322,"byte_end":12738325,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738330,"byte_end":12738344,"line_start":1021,"line_end":1021,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738349,"byte_end":12738352,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738357,"byte_end":12738364,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738369,"byte_end":12738395,"line_start":1024,"line_end":1024,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738400,"byte_end":12738403,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738408,"byte_end":12738426,"line_start":1026,"line_end":1026,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738431,"byte_end":12738452,"line_start":1027,"line_end":1027,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738457,"byte_end":12738501,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738506,"byte_end":12738509,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738514,"byte_end":12738541,"line_start":1030,"line_end":1030,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738546,"byte_end":12738595,"line_start":1031,"line_end":1031,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738600,"byte_end":12738603,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738608,"byte_end":12738674,"line_start":1033,"line_end":1033,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738679,"byte_end":12738709,"line_start":1034,"line_end":1034,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738714,"byte_end":12738757,"line_start":1035,"line_end":1035,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738762,"byte_end":12738765,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738770,"byte_end":12738809,"line_start":1037,"line_end":1037,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738814,"byte_end":12738839,"line_start":1038,"line_end":1038,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738844,"byte_end":12738847,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738852,"byte_end":12738903,"line_start":1040,"line_end":1040,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738908,"byte_end":12738958,"line_start":1041,"line_end":1041,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738963,"byte_end":12738968,"line_start":1042,"line_end":1042,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12738973,"byte_end":12738980,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741058,"byte_end":12741062,"line_start":1116,"line_end":1116,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739871,"byte_end":12739917,"line_start":1082,"line_end":1082,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739922,"byte_end":12739925,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739930,"byte_end":12740005,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740010,"byte_end":12740084,"line_start":1085,"line_end":1085,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740089,"byte_end":12740163,"line_start":1086,"line_end":1086,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740168,"byte_end":12740216,"line_start":1087,"line_end":1087,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740221,"byte_end":12740224,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740229,"byte_end":12740303,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740308,"byte_end":12740343,"line_start":1090,"line_end":1090,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740348,"byte_end":12740351,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740356,"byte_end":12740396,"line_start":1092,"line_end":1092,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740401,"byte_end":12740404,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740409,"byte_end":12740423,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740428,"byte_end":12740431,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740436,"byte_end":12740443,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740448,"byte_end":12740474,"line_start":1097,"line_end":1097,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740479,"byte_end":12740482,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740487,"byte_end":12740505,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740510,"byte_end":12740531,"line_start":1100,"line_end":1100,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740536,"byte_end":12740580,"line_start":1101,"line_end":1101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740585,"byte_end":12740588,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740593,"byte_end":12740620,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740625,"byte_end":12740680,"line_start":1104,"line_end":1104,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740685,"byte_end":12740688,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740693,"byte_end":12740755,"line_start":1106,"line_end":1106,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740760,"byte_end":12740794,"line_start":1107,"line_end":1107,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740799,"byte_end":12740802,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740807,"byte_end":12740858,"line_start":1109,"line_end":1109,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740863,"byte_end":12740913,"line_start":1110,"line_end":1110,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740918,"byte_end":12740921,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740926,"byte_end":12740983,"line_start":1112,"line_end":1112,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12740988,"byte_end":12741024,"line_start":1113,"line_end":1113,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741029,"byte_end":12741034,"line_start":1114,"line_end":1114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741039,"byte_end":12741046,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742288,"byte_end":12742295,"line_start":1155,"line_end":1155,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Releases the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Releases the reserved capacity *without* sending a message, returning the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741315,"byte_end":12741392,"line_start":1125,"line_end":1125,"column_start":5,"column_end":82}},{"value":"/ [`Sender`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741397,"byte_end":12741412,"line_start":1126,"line_end":1126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741417,"byte_end":12741420,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741425,"byte_end":12741439,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741444,"byte_end":12741447,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741452,"byte_end":12741459,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741464,"byte_end":12741490,"line_start":1131,"line_end":1131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741495,"byte_end":12741498,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741503,"byte_end":12741521,"line_start":1133,"line_end":1133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741526,"byte_end":12741547,"line_start":1134,"line_end":1134,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741552,"byte_end":12741592,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741597,"byte_end":12741600,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741605,"byte_end":12741653,"line_start":1137,"line_end":1137,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741658,"byte_end":12741721,"line_start":1138,"line_end":1138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741726,"byte_end":12741729,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741734,"byte_end":12741810,"line_start":1140,"line_end":1140,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741815,"byte_end":12741866,"line_start":1141,"line_end":1141,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741871,"byte_end":12741914,"line_start":1142,"line_end":1142,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741919,"byte_end":12741922,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12741927,"byte_end":12742003,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742008,"byte_end":12742033,"line_start":1145,"line_end":1145,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742038,"byte_end":12742073,"line_start":1146,"line_end":1146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742078,"byte_end":12742081,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742086,"byte_end":12742143,"line_start":1148,"line_end":1148,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742148,"byte_end":12742184,"line_start":1149,"line_end":1149,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742189,"byte_end":12742219,"line_start":1150,"line_end":1150,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742224,"byte_end":12742229,"line_start":1151,"line_end":1151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742234,"byte_end":12742241,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742246,"byte_end":12742249,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742254,"byte_end":12742276,"line_start":1154,"line_end":1154,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767619,"byte_end":12767634,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767461,"byte_end":12767515,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767516,"byte_end":12767519,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767520,"byte_end":12767552,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767553,"byte_end":12767607,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768427,"byte_end":12768444,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":3703}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768051,"byte_end":12768108,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768109,"byte_end":12768112,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768113,"byte_end":12768145,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768146,"byte_end":12768200,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768201,"byte_end":12768204,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768205,"byte_end":12768287,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768288,"byte_end":12768291,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768292,"byte_end":12768415,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":3707},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769276,"byte_end":12769293,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768743,"byte_end":12768819,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768820,"byte_end":12768851,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768852,"byte_end":12768855,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768856,"byte_end":12768936,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768937,"byte_end":12769016,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769017,"byte_end":12769030,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769031,"byte_end":12769034,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769035,"byte_end":12769114,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769115,"byte_end":12769191,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769192,"byte_end":12769268,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771056,"byte_end":12771060,"line_start":126,"line_end":126,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769702,"byte_end":12769748,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769753,"byte_end":12769756,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769761,"byte_end":12769833,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769838,"byte_end":12769892,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769897,"byte_end":12769900,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769905,"byte_end":12769924,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769929,"byte_end":12769932,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769937,"byte_end":12770004,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770009,"byte_end":12770078,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770083,"byte_end":12770159,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770164,"byte_end":12770176,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770181,"byte_end":12770184,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770189,"byte_end":12770203,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770208,"byte_end":12770211,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770216,"byte_end":12770223,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770228,"byte_end":12770254,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770259,"byte_end":12770262,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770267,"byte_end":12770285,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770290,"byte_end":12770311,"line_start":98,"line_end":98,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770316,"byte_end":12770369,"line_start":99,"line_end":99,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770374,"byte_end":12770377,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770382,"byte_end":12770415,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770420,"byte_end":12770458,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770463,"byte_end":12770474,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770479,"byte_end":12770482,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770487,"byte_end":12770538,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770543,"byte_end":12770585,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770590,"byte_end":12770595,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770600,"byte_end":12770607,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770612,"byte_end":12770615,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770620,"byte_end":12770644,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770649,"byte_end":12770652,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770657,"byte_end":12770664,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770669,"byte_end":12770695,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770700,"byte_end":12770703,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770708,"byte_end":12770726,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770731,"byte_end":12770752,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770757,"byte_end":12770810,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770815,"byte_end":12770818,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770823,"byte_end":12770857,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770862,"byte_end":12770896,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770901,"byte_end":12770904,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770909,"byte_end":12770960,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12770965,"byte_end":12771016,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771021,"byte_end":12771026,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771031,"byte_end":12771038,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772659,"byte_end":12772667,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771182,"byte_end":12771236,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771241,"byte_end":12771244,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771249,"byte_end":12771320,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771325,"byte_end":12771391,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771396,"byte_end":12771399,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771404,"byte_end":12771472,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771477,"byte_end":12771550,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771555,"byte_end":12771558,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771563,"byte_end":12771632,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771637,"byte_end":12771668,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771673,"byte_end":12771676,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771681,"byte_end":12771741,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771746,"byte_end":12771820,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771825,"byte_end":12771859,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771864,"byte_end":12771904,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771909,"byte_end":12771949,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771954,"byte_end":12771957,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771962,"byte_end":12771976,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771981,"byte_end":12771984,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12771989,"byte_end":12771996,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772001,"byte_end":12772027,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772032,"byte_end":12772079,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772084,"byte_end":12772087,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772092,"byte_end":12772110,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772115,"byte_end":12772136,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772141,"byte_end":12772194,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772199,"byte_end":12772202,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772207,"byte_end":12772241,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772246,"byte_end":12772249,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772254,"byte_end":12772301,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772306,"byte_end":12772366,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772371,"byte_end":12772374,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772379,"byte_end":12772413,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772418,"byte_end":12772471,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772476,"byte_end":12772493,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772498,"byte_end":12772501,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772506,"byte_end":12772553,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772558,"byte_end":12772625,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772630,"byte_end":12772635,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772640,"byte_end":12772647,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773433,"byte_end":12773446,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772748,"byte_end":12772810,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772815,"byte_end":12772818,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772823,"byte_end":12772835,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772840,"byte_end":12772843,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772848,"byte_end":12772915,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772920,"byte_end":12772932,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772937,"byte_end":12772940,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772945,"byte_end":12772959,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772964,"byte_end":12772967,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772972,"byte_end":12772979,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12772984,"byte_end":12773004,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773009,"byte_end":12773035,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773040,"byte_end":12773043,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773048,"byte_end":12773066,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773071,"byte_end":12773092,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773097,"byte_end":12773156,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773161,"byte_end":12773164,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773169,"byte_end":12773216,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773221,"byte_end":12773274,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773279,"byte_end":12773290,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773295,"byte_end":12773298,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773303,"byte_end":12773331,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773336,"byte_end":12773370,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773375,"byte_end":12773380,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773385,"byte_end":12773392,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773397,"byte_end":12773421,"line_start":201,"line_end":201,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773766,"byte_end":12773771,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773529,"byte_end":12773593,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773598,"byte_end":12773601,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773606,"byte_end":12773681,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773686,"byte_end":12773754,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774995,"byte_end":12775004,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773823,"byte_end":12773877,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773882,"byte_end":12773885,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773890,"byte_end":12773914,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773919,"byte_end":12773922,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12773927,"byte_end":12774001,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774006,"byte_end":12774054,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774059,"byte_end":12774121,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774126,"byte_end":12774200,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774205,"byte_end":12774257,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774262,"byte_end":12774265,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774270,"byte_end":12774342,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774347,"byte_end":12774423,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774428,"byte_end":12774504,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774509,"byte_end":12774580,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774585,"byte_end":12774634,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774639,"byte_end":12774642,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774647,"byte_end":12774721,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774726,"byte_end":12774798,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774803,"byte_end":12774876,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774881,"byte_end":12774957,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12774962,"byte_end":12774983,"line_start":234,"line_end":234,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775932,"byte_end":12775936,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775244,"byte_end":12775318,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775323,"byte_end":12775326,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775331,"byte_end":12775416,"line_start":247,"line_end":247,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775421,"byte_end":12775502,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775507,"byte_end":12775575,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775580,"byte_end":12775583,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775588,"byte_end":12775661,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775666,"byte_end":12775737,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775742,"byte_end":12775819,"line_start":253,"line_end":253,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775824,"byte_end":12775827,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775832,"byte_end":12775871,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775876,"byte_end":12775920,"line_start":256,"line_end":256,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778059,"byte_end":12778065,"line_start":332,"line_end":332,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12776974,"byte_end":12777018,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777023,"byte_end":12777026,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777031,"byte_end":12777106,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777111,"byte_end":12777166,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777171,"byte_end":12777174,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777179,"byte_end":12777198,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777203,"byte_end":12777206,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777211,"byte_end":12777286,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777291,"byte_end":12777360,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777365,"byte_end":12777368,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777373,"byte_end":12777387,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777392,"byte_end":12777395,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777400,"byte_end":12777407,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777412,"byte_end":12777438,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777443,"byte_end":12777446,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777451,"byte_end":12777469,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777474,"byte_end":12777495,"line_start":312,"line_end":312,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777500,"byte_end":12777556,"line_start":313,"line_end":313,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777561,"byte_end":12777591,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777596,"byte_end":12777626,"line_start":315,"line_end":315,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777631,"byte_end":12777661,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777666,"byte_end":12777696,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777701,"byte_end":12777734,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777739,"byte_end":12777760,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777765,"byte_end":12777776,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777781,"byte_end":12777784,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777789,"byte_end":12777812,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777817,"byte_end":12777842,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777847,"byte_end":12777872,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777877,"byte_end":12777902,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777907,"byte_end":12777932,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777937,"byte_end":12777961,"line_start":327,"line_end":327,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12777966,"byte_end":12777976,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778024,"byte_end":12778029,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778034,"byte_end":12778041,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778763,"byte_end":12778772,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778119,"byte_end":12778183,"line_start":336,"line_end":336,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778188,"byte_end":12778237,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778242,"byte_end":12778292,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778297,"byte_end":12778300,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778305,"byte_end":12778368,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778373,"byte_end":12778450,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778455,"byte_end":12778458,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778463,"byte_end":12778470,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778475,"byte_end":12778539,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778544,"byte_end":12778573,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778578,"byte_end":12778581,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778586,"byte_end":12778611,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778616,"byte_end":12778646,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778651,"byte_end":12778654,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778659,"byte_end":12778672,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778677,"byte_end":12778705,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778710,"byte_end":12778739,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778744,"byte_end":12778751,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779220,"byte_end":12779232,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778831,"byte_end":12778888,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778893,"byte_end":12778896,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778901,"byte_end":12778915,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778920,"byte_end":12778923,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778928,"byte_end":12778935,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12778940,"byte_end":12779004,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779009,"byte_end":12779035,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779040,"byte_end":12779075,"line_start":365,"line_end":365,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779080,"byte_end":12779083,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779088,"byte_end":12779154,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779159,"byte_end":12779196,"line_start":368,"line_end":368,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12779201,"byte_end":12779208,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3754},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":5218},{"krate":0,"index":5222},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":5225},{"krate":0,"index":5233},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5241},{"krate":0,"index":5243},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3771},{"krate":0,"index":5247},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5258},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":5263},{"krate":0,"index":5266},{"krate":0,"index":3777},{"krate":0,"index":3779},{"krate":0,"index":5273},{"krate":0,"index":5281},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5291},{"krate":0,"index":5268},{"krate":0,"index":5270}],"decl_id":null,"docs":" Channel error types.\n","sig":null,"attributes":[{"value":"/ Channel error types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779317,"byte_end":12779341,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5218},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779445,"byte_end":12779454,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779381,"byte_end":12779416,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5221},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779458,"byte_end":12779463,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":5218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5227},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780022,"byte_end":12780026,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779890,"byte_end":12779958,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779963,"byte_end":12780017,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5230},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780127,"byte_end":12780133,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780036,"byte_end":12780105,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780110,"byte_end":12780122,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5225},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779868,"byte_end":12779880,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5230}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779707,"byte_end":12779778,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779779,"byte_end":12779826,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5248},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780955,"byte_end":12780960,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5247},"children":[],"decl_id":null,"docs":" This **channel** is currently empty, but the **Sender**(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This **channel** is currently empty, but the **Sender**(s) have not yet","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780819,"byte_end":12780894,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780899,"byte_end":12780950,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781092,"byte_end":12781104,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::mpsc::error::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":5247},"children":[],"decl_id":null,"docs":" The **channel**'s sending half has become disconnected, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The **channel**'s sending half has become disconnected, and there will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780966,"byte_end":12781040,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781045,"byte_end":12781087,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":5247},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780800,"byte_end":12780812,"line_start":58,"line_end":58,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError { Empty, Disconnected, }","parent":null,"children":[{"krate":0,"index":5248},{"krate":0,"index":5250}],"decl_id":null,"docs":" Error returned by `try_recv`.\n","sig":null,"attributes":[{"value":"/ Error returned by `try_recv`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780712,"byte_end":12780745,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5263},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781624,"byte_end":12781633,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781471,"byte_end":12781504,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"deprecated(note = \"This type is unused because recv returns an Option.\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781537,"byte_end":12781612,"line_start":83,"line_end":83,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5275},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782199,"byte_end":12782206,"line_start":104,"line_end":104,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5278},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782319,"byte_end":12782325,"line_start":108,"line_end":108,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5273},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782037,"byte_end":12782053,"line_start":101,"line_end":101,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> { Timeout(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":5275},{"krate":0,"index":5278}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":27116,"byte_end":27140,"line_start":353,"line_end":353,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3811},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787809,"byte_end":12787814,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":3813},{"krate":0,"index":3814}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783146,"byte_end":12783184,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783185,"byte_end":12783188,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783189,"byte_end":12783257,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783258,"byte_end":12783334,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783335,"byte_end":12783391,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783392,"byte_end":12783395,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783396,"byte_end":12783437,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783438,"byte_end":12783441,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783442,"byte_end":12783522,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783523,"byte_end":12783589,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783590,"byte_end":12783593,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783594,"byte_end":12783668,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783669,"byte_end":12783745,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783746,"byte_end":12783824,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783825,"byte_end":12783905,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783906,"byte_end":12783983,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12783984,"byte_end":12784057,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784058,"byte_end":12784137,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784138,"byte_end":12784169,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784170,"byte_end":12784173,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784174,"byte_end":12784256,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784257,"byte_end":12784337,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784338,"byte_end":12784415,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784416,"byte_end":12784464,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784465,"byte_end":12784468,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784469,"byte_end":12784548,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784549,"byte_end":12784625,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784626,"byte_end":12784703,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784704,"byte_end":12784737,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784738,"byte_end":12784741,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784742,"byte_end":12784817,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784818,"byte_end":12784896,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784897,"byte_end":12784939,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784940,"byte_end":12784943,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784944,"byte_end":12784971,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12784972,"byte_end":12785020,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785021,"byte_end":12785099,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785100,"byte_end":12785103,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785104,"byte_end":12785119,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785120,"byte_end":12785123,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785124,"byte_end":12785142,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785143,"byte_end":12785170,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785171,"byte_end":12785194,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785195,"byte_end":12785198,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785199,"byte_end":12785217,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785218,"byte_end":12785239,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785240,"byte_end":12785284,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785285,"byte_end":12785324,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785325,"byte_end":12785328,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785329,"byte_end":12785362,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785363,"byte_end":12785409,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785410,"byte_end":12785433,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785434,"byte_end":12785445,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785446,"byte_end":12785449,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785450,"byte_end":12785492,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785493,"byte_end":12785512,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785513,"byte_end":12785518,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785519,"byte_end":12785526,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785527,"byte_end":12785530,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785531,"byte_end":12785534,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785535,"byte_end":12785553,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785554,"byte_end":12785581,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785582,"byte_end":12785605,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785606,"byte_end":12785609,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785610,"byte_end":12785628,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785629,"byte_end":12785650,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785651,"byte_end":12785695,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785696,"byte_end":12785699,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785700,"byte_end":12785723,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785724,"byte_end":12785770,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785771,"byte_end":12785808,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785809,"byte_end":12785841,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785842,"byte_end":12785899,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785900,"byte_end":12785931,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785932,"byte_end":12785985,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12785986,"byte_end":12786003,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786004,"byte_end":12786019,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786020,"byte_end":12786029,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786030,"byte_end":12786033,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786034,"byte_end":12786048,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786049,"byte_end":12786091,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786092,"byte_end":12786114,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786115,"byte_end":12786128,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786129,"byte_end":12786138,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786139,"byte_end":12786173,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786174,"byte_end":12786179,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786180,"byte_end":12786187,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786188,"byte_end":12786264,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786265,"byte_end":12786338,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786339,"byte_end":12786354,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786355,"byte_end":12786430,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786431,"byte_end":12786507,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786508,"byte_end":12786560,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786561,"byte_end":12786564,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786565,"byte_end":12786643,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786644,"byte_end":12786724,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786725,"byte_end":12786801,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786802,"byte_end":12786882,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786883,"byte_end":12786963,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12786964,"byte_end":12787038,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787039,"byte_end":12787115,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787116,"byte_end":12787196,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787197,"byte_end":12787266,"line_start":115,"line_end":115,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787267,"byte_end":12787270,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787271,"byte_end":12787350,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787351,"byte_end":12787430,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787431,"byte_end":12787509,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787510,"byte_end":12787571,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787572,"byte_end":12787575,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787576,"byte_end":12787603,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787604,"byte_end":12787641,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787642,"byte_end":12787676,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787677,"byte_end":12787726,"line_start":125,"line_end":125,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787727,"byte_end":12787764,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787765,"byte_end":12787797,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3815},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788401,"byte_end":12788411,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":3818}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12787969,"byte_end":12788048,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788049,"byte_end":12788071,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788072,"byte_end":12788075,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788076,"byte_end":12788155,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788156,"byte_end":12788231,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788232,"byte_end":12788265,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788266,"byte_end":12788269,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788270,"byte_end":12788348,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788349,"byte_end":12788389,"line_start":143,"line_end":143,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3819},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789286,"byte_end":12789301,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":3821}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788543,"byte_end":12788581,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788582,"byte_end":12788585,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788586,"byte_end":12788667,"line_start":152,"line_end":152,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788668,"byte_end":12788748,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788749,"byte_end":12788823,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788824,"byte_end":12788885,"line_start":155,"line_end":155,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788886,"byte_end":12788889,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788890,"byte_end":12788969,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12788970,"byte_end":12789049,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789050,"byte_end":12789118,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789119,"byte_end":12789122,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789123,"byte_end":12789201,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789202,"byte_end":12789242,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789243,"byte_end":12789246,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789247,"byte_end":12789274,"line_start":164,"line_end":164,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3822},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789714,"byte_end":12789730,"line_start":177,"line_end":177,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789430,"byte_end":12789523,"line_start":171,"line_end":171,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789524,"byte_end":12789527,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789528,"byte_end":12789590,"line_start":173,"line_end":173,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789591,"byte_end":12789594,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789595,"byte_end":12789642,"line_start":175,"line_end":175,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12789643,"byte_end":12789702,"line_start":176,"line_end":176,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5295},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791131,"byte_end":12791143,"line_start":209,"line_end":209,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790542,"byte_end":12790615,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790616,"byte_end":12790652,"line_start":195,"line_end":195,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790653,"byte_end":12790656,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790657,"byte_end":12790735,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790736,"byte_end":12790739,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790740,"byte_end":12790817,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790818,"byte_end":12790845,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790846,"byte_end":12790849,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790850,"byte_end":12790927,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790928,"byte_end":12790949,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790950,"byte_end":12790953,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790954,"byte_end":12790994,"line_start":205,"line_end":205,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790995,"byte_end":12791047,"line_start":206,"line_end":206,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791048,"byte_end":12791102,"line_start":207,"line_end":207,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792390,"byte_end":12792393,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792167,"byte_end":12792225,"line_start":244,"line_end":244,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792230,"byte_end":12792233,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792238,"byte_end":12792252,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792257,"byte_end":12792260,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792265,"byte_end":12792272,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792277,"byte_end":12792304,"line_start":249,"line_end":249,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792309,"byte_end":12792312,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792317,"byte_end":12792346,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792351,"byte_end":12792358,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792363,"byte_end":12792378,"line_start":253,"line_end":253,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794791,"byte_end":12794795,"line_start":338,"line_end":338,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired.  When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794112,"byte_end":12794186,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ been acquired.  When the lock has been acquired, function returns a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794191,"byte_end":12794262,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794267,"byte_end":12794286,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794291,"byte_end":12794294,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794299,"byte_end":12794318,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794323,"byte_end":12794326,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794331,"byte_end":12794404,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock` makes you lose your place in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794409,"byte_end":12794485,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794490,"byte_end":12794504,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794509,"byte_end":12794512,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794517,"byte_end":12794531,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794536,"byte_end":12794539,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794544,"byte_end":12794551,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794556,"byte_end":12794583,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794588,"byte_end":12794591,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794596,"byte_end":12794614,"line_start":330,"line_end":330,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794619,"byte_end":12794640,"line_start":331,"line_end":331,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794645,"byte_end":12794679,"line_start":332,"line_end":332,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794684,"byte_end":12794687,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794692,"byte_end":12794731,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794736,"byte_end":12794751,"line_start":335,"line_end":335,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794756,"byte_end":12794761,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12794766,"byte_end":12794773,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797289,"byte_end":12797302,"line_start":415,"line_end":415,"column_start":12,"column_end":25},"name":"blocking_lock","qualname":"<Mutex<T>>::blocking_lock","value":"pub fn blocking_lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `Mutex`. When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Blockingly locks this `Mutex`. When the lock has been acquired, function returns a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795597,"byte_end":12795683,"line_start":367,"line_end":367,"column_start":5,"column_end":91}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795688,"byte_end":12795707,"line_start":368,"line_end":368,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795712,"byte_end":12795715,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795720,"byte_end":12795771,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/ need to use this mutex in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795776,"byte_end":12795855,"line_start":371,"line_end":371,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795860,"byte_end":12795863,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795868,"byte_end":12795880,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795885,"byte_end":12795888,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795893,"byte_end":12795969,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795974,"byte_end":12795977,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12795982,"byte_end":12796059,"line_start":377,"line_end":377,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796064,"byte_end":12796135,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796140,"byte_end":12796211,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796216,"byte_end":12796284,"line_start":380,"line_end":380,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796289,"byte_end":12796352,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796357,"byte_end":12796360,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796365,"byte_end":12796379,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796384,"byte_end":12796387,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796392,"byte_end":12796399,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796404,"byte_end":12796427,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796432,"byte_end":12796459,"line_start":387,"line_end":387,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796464,"byte_end":12796467,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796472,"byte_end":12796490,"line_start":389,"line_end":389,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796495,"byte_end":12796516,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     let mutex =  Arc::new(Mutex::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796521,"byte_end":12796566,"line_start":391,"line_end":391,"column_start":5,"column_end":50}},{"value":"/     let lock = mutex.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796571,"byte_end":12796609,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796614,"byte_end":12796617,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/     let mutex1 = Arc::clone(&mutex);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796622,"byte_end":12796662,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796667,"byte_end":12796732,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/         // This shall block until the `lock` is released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796737,"byte_end":12796798,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/         let mut n = mutex1.blocking_lock();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796803,"byte_end":12796850,"line_start":397,"line_end":397,"column_start":5,"column_end":52}},{"value":"/         *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796855,"byte_end":12796874,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796879,"byte_end":12796890,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796895,"byte_end":12796898,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*lock, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796903,"byte_end":12796932,"line_start":401,"line_end":401,"column_start":5,"column_end":34}},{"value":"/     // Release the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796937,"byte_end":12796965,"line_start":402,"line_end":402,"column_start":5,"column_end":33}},{"value":"/     drop(lock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796970,"byte_end":12796989,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12796994,"byte_end":12796997,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797002,"byte_end":12797055,"line_start":405,"line_end":405,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797060,"byte_end":12797097,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797102,"byte_end":12797105,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797110,"byte_end":12797140,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/     let n = mutex.try_lock().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797145,"byte_end":12797187,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(*n, 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797192,"byte_end":12797218,"line_start":410,"line_end":410,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797223,"byte_end":12797228,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797233,"byte_end":12797236,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797241,"byte_end":12797248,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797253,"byte_end":12797277,"line_start":414,"line_end":414,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798534,"byte_end":12798544,"line_start":451,"line_end":451,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797389,"byte_end":12797463,"line_start":419,"line_end":419,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797468,"byte_end":12797535,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797540,"byte_end":12797564,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797569,"byte_end":12797572,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797577,"byte_end":12797650,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797655,"byte_end":12797728,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797733,"byte_end":12797804,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797809,"byte_end":12797884,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797889,"byte_end":12797931,"line_start":427,"line_end":427,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797936,"byte_end":12797939,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797944,"byte_end":12797963,"line_start":429,"line_end":429,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797968,"byte_end":12797971,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12797976,"byte_end":12798049,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock_owned` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798054,"byte_end":12798127,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798132,"byte_end":12798155,"line_start":433,"line_end":433,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798160,"byte_end":12798163,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798168,"byte_end":12798182,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798187,"byte_end":12798190,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798195,"byte_end":12798202,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798207,"byte_end":12798234,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798239,"byte_end":12798262,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798267,"byte_end":12798270,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798275,"byte_end":12798293,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798298,"byte_end":12798319,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798324,"byte_end":12798368,"line_start":443,"line_end":443,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798373,"byte_end":12798376,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798381,"byte_end":12798434,"line_start":445,"line_end":445,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798439,"byte_end":12798454,"line_start":446,"line_end":446,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798459,"byte_end":12798464,"line_start":447,"line_end":447,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798469,"byte_end":12798476,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798481,"byte_end":12798484,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12798489,"byte_end":12798516,"line_start":450,"line_end":450,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800209,"byte_end":12800217,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799741,"byte_end":12799810,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799815,"byte_end":12799857,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799862,"byte_end":12799865,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799870,"byte_end":12799904,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799909,"byte_end":12799923,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799928,"byte_end":12799931,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799936,"byte_end":12799943,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799948,"byte_end":12799975,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12799980,"byte_end":12800043,"line_start":499,"line_end":499,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800048,"byte_end":12800051,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800056,"byte_end":12800086,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800091,"byte_end":12800094,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800099,"byte_end":12800129,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800134,"byte_end":12800156,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800161,"byte_end":12800173,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800178,"byte_end":12800185,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800190,"byte_end":12800197,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801398,"byte_end":12801405,"line_start":546,"line_end":546,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800927,"byte_end":12800982,"line_start":529,"line_end":529,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800987,"byte_end":12800990,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12800995,"byte_end":12801070,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801075,"byte_end":12801149,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801154,"byte_end":12801157,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801162,"byte_end":12801176,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801181,"byte_end":12801184,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801189,"byte_end":12801196,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801201,"byte_end":12801228,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801233,"byte_end":12801236,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801241,"byte_end":12801256,"line_start":539,"line_end":539,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801261,"byte_end":12801299,"line_start":540,"line_end":540,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801304,"byte_end":12801307,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801312,"byte_end":12801344,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801349,"byte_end":12801364,"line_start":543,"line_end":543,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801369,"byte_end":12801374,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801379,"byte_end":12801386,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802486,"byte_end":12802500,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801574,"byte_end":12801648,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801653,"byte_end":12801690,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801695,"byte_end":12801698,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801703,"byte_end":12801771,"line_start":556,"line_end":556,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801776,"byte_end":12801849,"line_start":557,"line_end":557,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801854,"byte_end":12801930,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12801935,"byte_end":12802009,"line_start":559,"line_end":559,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802014,"byte_end":12802062,"line_start":560,"line_end":560,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802067,"byte_end":12802070,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802075,"byte_end":12802109,"line_start":562,"line_end":562,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802114,"byte_end":12802141,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802146,"byte_end":12802160,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802165,"byte_end":12802168,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802173,"byte_end":12802180,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802185,"byte_end":12802212,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802217,"byte_end":12802240,"line_start":568,"line_end":568,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802245,"byte_end":12802308,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802313,"byte_end":12802316,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802321,"byte_end":12802361,"line_start":571,"line_end":571,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802366,"byte_end":12802369,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802374,"byte_end":12802418,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802423,"byte_end":12802445,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802450,"byte_end":12802462,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12802467,"byte_end":12802474,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803661,"byte_end":12803671,"line_start":615,"line_end":615,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803328,"byte_end":12803382,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803387,"byte_end":12803401,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803406,"byte_end":12803409,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803414,"byte_end":12803421,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803426,"byte_end":12803453,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803458,"byte_end":12803461,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803466,"byte_end":12803484,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803489,"byte_end":12803510,"line_start":608,"line_end":608,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803515,"byte_end":12803549,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803554,"byte_end":12803557,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803562,"byte_end":12803597,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803602,"byte_end":12803627,"line_start":612,"line_end":612,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803632,"byte_end":12803637,"line_start":613,"line_end":613,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803642,"byte_end":12803649,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805406,"byte_end":12805409,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804420,"byte_end":12804492,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804497,"byte_end":12804500,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804505,"byte_end":12804593,"line_start":657,"line_end":657,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804598,"byte_end":12804601,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804606,"byte_end":12804698,"line_start":659,"line_end":659,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804703,"byte_end":12804788,"line_start":660,"line_end":660,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804793,"byte_end":12804796,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804801,"byte_end":12804815,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804820,"byte_end":12804823,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804828,"byte_end":12804835,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804840,"byte_end":12804881,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804886,"byte_end":12804889,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804894,"byte_end":12804942,"line_start":667,"line_end":667,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804947,"byte_end":12804967,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804972,"byte_end":12804975,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804980,"byte_end":12805000,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805005,"byte_end":12805028,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805033,"byte_end":12805066,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805071,"byte_end":12805074,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805079,"byte_end":12805084,"line_start":674,"line_end":674,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805089,"byte_end":12805162,"line_start":675,"line_end":675,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805167,"byte_end":12805187,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805192,"byte_end":12805197,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805202,"byte_end":12805205,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805210,"byte_end":12805252,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805257,"byte_end":12805264,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805269,"byte_end":12805276,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805281,"byte_end":12805284,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805289,"byte_end":12805326,"line_start":683,"line_end":683,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805331,"byte_end":12805380,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805385,"byte_end":12805394,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806865,"byte_end":12806872,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805741,"byte_end":12805828,"line_start":700,"line_end":700,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805833,"byte_end":12805894,"line_start":701,"line_end":701,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805899,"byte_end":12805902,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12805907,"byte_end":12805995,"line_start":703,"line_end":703,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806000,"byte_end":12806003,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806008,"byte_end":12806097,"line_start":705,"line_end":705,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806102,"byte_end":12806194,"line_start":706,"line_end":706,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806199,"byte_end":12806202,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806207,"byte_end":12806221,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806226,"byte_end":12806229,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806234,"byte_end":12806241,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806246,"byte_end":12806287,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806292,"byte_end":12806295,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806300,"byte_end":12806348,"line_start":713,"line_end":713,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806353,"byte_end":12806373,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806378,"byte_end":12806381,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806386,"byte_end":12806406,"line_start":716,"line_end":716,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806411,"byte_end":12806434,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806439,"byte_end":12806472,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806477,"byte_end":12806480,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806485,"byte_end":12806490,"line_start":720,"line_end":720,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806495,"byte_end":12806577,"line_start":721,"line_end":721,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806582,"byte_end":12806621,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806626,"byte_end":12806646,"line_start":723,"line_end":723,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806651,"byte_end":12806656,"line_start":724,"line_end":724,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806661,"byte_end":12806664,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806669,"byte_end":12806711,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806716,"byte_end":12806723,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806728,"byte_end":12806735,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806740,"byte_end":12806743,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806748,"byte_end":12806785,"line_start":730,"line_end":730,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806790,"byte_end":12806839,"line_start":731,"line_end":731,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12806844,"byte_end":12806853,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808031,"byte_end":12808036,"line_start":772,"line_end":772,"column_start":12,"column_end":17},"name":"mutex","qualname":"<MutexGuard>::mutex","value":"pub fn mutex(&Self) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Mutex`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Mutex`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807318,"byte_end":12807366,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807371,"byte_end":12807374,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807379,"byte_end":12807386,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807391,"byte_end":12807432,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807437,"byte_end":12807440,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock<'l>(guard: MutexGuard<'l, u32>) -> MutexGuard<'l, u32> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807445,"byte_end":12807532,"line_start":755,"line_end":755,"column_start":5,"column_end":92}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807537,"byte_end":12807583,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/     let mutex = MutexGuard::mutex(&guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807588,"byte_end":12807634,"line_start":757,"line_end":757,"column_start":5,"column_end":51}},{"value":"/     drop(guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807639,"byte_end":12807659,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807664,"byte_end":12807703,"line_start":759,"line_end":759,"column_start":5,"column_end":44}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807708,"byte_end":12807754,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807759,"byte_end":12807772,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807777,"byte_end":12807782,"line_start":762,"line_end":762,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807787,"byte_end":12807792,"line_start":763,"line_end":763,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807797,"byte_end":12807817,"line_start":764,"line_end":764,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807822,"byte_end":12807845,"line_start":765,"line_end":765,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Mutex::new(0u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807850,"byte_end":12807889,"line_start":766,"line_end":766,"column_start":5,"column_end":44}},{"value":"/ #     let guard = mutex.lock().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807894,"byte_end":12807935,"line_start":767,"line_end":767,"column_start":5,"column_end":46}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807940,"byte_end":12807981,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807986,"byte_end":12807993,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12807998,"byte_end":12808005,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808010,"byte_end":12808019,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809982,"byte_end":12809987,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"mutex","qualname":"<OwnedMutexGuard<T>>::mutex","value":"pub fn mutex(&Self) -> &Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Arc<Mutex>`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Arc<Mutex>`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809181,"byte_end":12809234,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809239,"byte_end":12809242,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809247,"byte_end":12809254,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809259,"byte_end":12809282,"line_start":821,"line_end":821,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Mutex, OwnedMutexGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809287,"byte_end":12809333,"line_start":822,"line_end":822,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809338,"byte_end":12809341,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock(guard: OwnedMutexGuard<u32>) -> OwnedMutexGuard<u32> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809346,"byte_end":12809431,"line_start":824,"line_end":824,"column_start":5,"column_end":90}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809436,"byte_end":12809482,"line_start":825,"line_end":825,"column_start":5,"column_end":51}},{"value":"/     let mutex: Arc<Mutex<u32>> = OwnedMutexGuard::mutex(&guard).clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809487,"byte_end":12809563,"line_start":826,"line_end":826,"column_start":5,"column_end":81}},{"value":"/     drop(guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809568,"byte_end":12809588,"line_start":827,"line_end":827,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809593,"byte_end":12809638,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809643,"byte_end":12809689,"line_start":829,"line_end":829,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809694,"byte_end":12809707,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809712,"byte_end":12809717,"line_start":831,"line_end":831,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809722,"byte_end":12809727,"line_start":832,"line_end":832,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809732,"byte_end":12809752,"line_start":833,"line_end":833,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809757,"byte_end":12809780,"line_start":834,"line_end":834,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Arc::new(Mutex::new(0u32));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809785,"byte_end":12809834,"line_start":835,"line_end":835,"column_start":5,"column_end":54}},{"value":"/ #     let guard = mutex.lock_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809839,"byte_end":12809886,"line_start":836,"line_end":836,"column_start":5,"column_end":52}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809891,"byte_end":12809932,"line_start":837,"line_end":837,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809937,"byte_end":12809944,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809949,"byte_end":12809956,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809961,"byte_end":12809970,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811617,"byte_end":12811620,"line_start":896,"line_end":896,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811149,"byte_end":12811221,"line_start":887,"line_end":887,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811226,"byte_end":12811229,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811234,"byte_end":12811328,"line_start":889,"line_end":889,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811333,"byte_end":12811336,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811341,"byte_end":12811432,"line_start":891,"line_end":891,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811437,"byte_end":12811529,"line_start":892,"line_end":892,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811534,"byte_end":12811537,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811542,"byte_end":12811591,"line_start":894,"line_end":894,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811596,"byte_end":12811605,"line_start":895,"line_end":895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812499,"byte_end":12812506,"line_start":920,"line_end":920,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811946,"byte_end":12812033,"line_start":910,"line_end":910,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812038,"byte_end":12812099,"line_start":911,"line_end":911,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812104,"byte_end":12812107,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812112,"byte_end":12812206,"line_start":913,"line_end":913,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812211,"byte_end":12812214,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812219,"byte_end":12812314,"line_start":915,"line_end":915,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812319,"byte_end":12812411,"line_start":916,"line_end":916,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812416,"byte_end":12812419,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812424,"byte_end":12812473,"line_start":918,"line_end":918,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812478,"byte_end":12812487,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5300},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817504,"byte_end":12817510,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":5301},{"krate":0,"index":5302}],"decl_id":null,"docs":" Notifies a single task to wake up.","sig":null,"attributes":[{"value":"/ Notifies a single task to wake up.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814561,"byte_end":12814599,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814600,"byte_end":12814603,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814604,"byte_end":12814680,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814681,"byte_end":12814761,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814762,"byte_end":12814803,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814804,"byte_end":12814807,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814808,"byte_end":12814882,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814883,"byte_end":12814968,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12814969,"byte_end":12815035,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815036,"byte_end":12815039,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815040,"byte_end":12815098,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815099,"byte_end":12815179,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815180,"byte_end":12815260,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815261,"byte_end":12815344,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815345,"byte_end":12815395,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815396,"byte_end":12815399,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815400,"byte_end":12815484,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815485,"byte_end":12815560,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815561,"byte_end":12815631,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815632,"byte_end":12815635,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815636,"byte_end":12815720,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815721,"byte_end":12815794,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815795,"byte_end":12815866,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815867,"byte_end":12815870,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815871,"byte_end":12815885,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815886,"byte_end":12815889,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815890,"byte_end":12815906,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815907,"byte_end":12815910,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815911,"byte_end":12815918,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815919,"byte_end":12815947,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815948,"byte_end":12815971,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815972,"byte_end":12815975,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815976,"byte_end":12815994,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12815995,"byte_end":12816016,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816017,"byte_end":12816062,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816063,"byte_end":12816100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816101,"byte_end":12816104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816105,"byte_end":12816151,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816152,"byte_end":12816189,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816190,"byte_end":12816236,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816237,"byte_end":12816248,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816249,"byte_end":12816252,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816253,"byte_end":12816294,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816295,"byte_end":12816323,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816324,"byte_end":12816327,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Wait for task to receive notification.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816328,"byte_end":12816377,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/     handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816378,"byte_end":12816408,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816409,"byte_end":12816414,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816415,"byte_end":12816422,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816423,"byte_end":12816426,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816427,"byte_end":12816452,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816453,"byte_end":12816456,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816457,"byte_end":12816464,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816465,"byte_end":12816493,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816494,"byte_end":12816497,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816498,"byte_end":12816533,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816534,"byte_end":12816559,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816560,"byte_end":12816563,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816564,"byte_end":12816587,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816588,"byte_end":12816623,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816624,"byte_end":12816647,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816648,"byte_end":12816653,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816654,"byte_end":12816657,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816658,"byte_end":12816682,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816683,"byte_end":12816721,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816722,"byte_end":12816761,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816762,"byte_end":12816796,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816797,"byte_end":12816800,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816801,"byte_end":12816856,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816857,"byte_end":12816894,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816895,"byte_end":12816904,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816905,"byte_end":12816908,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816909,"byte_end":12816948,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816949,"byte_end":12816967,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12816968,"byte_end":12816999,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817000,"byte_end":12817078,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817079,"byte_end":12817112,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817113,"byte_end":12817130,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817131,"byte_end":12817134,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817135,"byte_end":12817185,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817186,"byte_end":12817231,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817232,"byte_end":12817245,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817246,"byte_end":12817255,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817256,"byte_end":12817261,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817262,"byte_end":12817269,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817270,"byte_end":12817273,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817274,"byte_end":12817303,"line_start":109,"line_end":109,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817304,"byte_end":12817345,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817346,"byte_end":12817390,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817391,"byte_end":12817433,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12817434,"byte_end":12817475,"line_start":113,"line_end":113,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5322},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818423,"byte_end":12818431,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326}],"decl_id":null,"docs":" Future returned from [`Notify::notified()`]\n","sig":null,"attributes":[{"value":"/ Future returned from [`Notify::notified()`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818347,"byte_end":12818394,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819893,"byte_end":12819896,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819689,"byte_end":12819745,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819750,"byte_end":12819753,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819758,"byte_end":12819772,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819777,"byte_end":12819780,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819785,"byte_end":12819792,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819797,"byte_end":12819825,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819830,"byte_end":12819833,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819838,"byte_end":12819869,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819874,"byte_end":12819881,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821827,"byte_end":12821835,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820550,"byte_end":12820578,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820583,"byte_end":12820586,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820591,"byte_end":12820609,"line_start":241,"line_end":241,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820614,"byte_end":12820617,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820622,"byte_end":12820635,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820640,"byte_end":12820669,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820674,"byte_end":12820681,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820686,"byte_end":12820689,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820694,"byte_end":12820770,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820775,"byte_end":12820853,"line_start":248,"line_end":248,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820858,"byte_end":12820933,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12820938,"byte_end":12821011,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821016,"byte_end":12821019,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821024,"byte_end":12821064,"line_start":252,"line_end":252,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821069,"byte_end":12821072,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821077,"byte_end":12821096,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821101,"byte_end":12821104,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute notifications in the order","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821109,"byte_end":12821185,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ they were requested. Cancelling a call to `notified` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821190,"byte_end":12821266,"line_start":257,"line_end":257,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821271,"byte_end":12821294,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821299,"byte_end":12821302,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821307,"byte_end":12821321,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821326,"byte_end":12821329,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821334,"byte_end":12821341,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821346,"byte_end":12821374,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821379,"byte_end":12821402,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821407,"byte_end":12821410,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821415,"byte_end":12821433,"line_start":266,"line_end":266,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821438,"byte_end":12821459,"line_start":267,"line_end":267,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821464,"byte_end":12821509,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821514,"byte_end":12821551,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821556,"byte_end":12821559,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821564,"byte_end":12821597,"line_start":271,"line_end":271,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821602,"byte_end":12821639,"line_start":272,"line_end":272,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821644,"byte_end":12821690,"line_start":273,"line_end":273,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821695,"byte_end":12821706,"line_start":274,"line_end":274,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821711,"byte_end":12821714,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821719,"byte_end":12821760,"line_start":276,"line_end":276,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821765,"byte_end":12821793,"line_start":277,"line_end":277,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821798,"byte_end":12821803,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12821808,"byte_end":12821815,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823612,"byte_end":12823622,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task.","sig":null,"attributes":[{"value":"/ Notifies a waiting task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822360,"byte_end":12822388,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822393,"byte_end":12822396,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822401,"byte_end":12822472,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822477,"byte_end":12822545,"line_start":299,"line_end":299,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822550,"byte_end":12822626,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822631,"byte_end":12822676,"line_start":301,"line_end":301,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822681,"byte_end":12822684,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822689,"byte_end":12822763,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822768,"byte_end":12822846,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822851,"byte_end":12822923,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822928,"byte_end":12822942,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822947,"byte_end":12822950,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12822955,"byte_end":12822999,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823004,"byte_end":12823007,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823012,"byte_end":12823026,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823031,"byte_end":12823034,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823039,"byte_end":12823046,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823051,"byte_end":12823079,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823084,"byte_end":12823107,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823112,"byte_end":12823115,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823120,"byte_end":12823138,"line_start":316,"line_end":316,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823143,"byte_end":12823164,"line_start":317,"line_end":317,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823169,"byte_end":12823214,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823219,"byte_end":12823256,"line_start":319,"line_end":319,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823261,"byte_end":12823264,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823269,"byte_end":12823302,"line_start":321,"line_end":321,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823307,"byte_end":12823344,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823349,"byte_end":12823395,"line_start":323,"line_end":323,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823400,"byte_end":12823411,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823416,"byte_end":12823419,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823424,"byte_end":12823465,"line_start":326,"line_end":326,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823470,"byte_end":12823498,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823503,"byte_end":12823508,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12823513,"byte_end":12823520,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825958,"byte_end":12825972,"line_start":398,"line_end":398,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks.","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12824865,"byte_end":12824896,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12824901,"byte_end":12824904,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12824909,"byte_end":12824979,"line_start":368,"line_end":368,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12824984,"byte_end":12825054,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825059,"byte_end":12825126,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825131,"byte_end":12825202,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825207,"byte_end":12825283,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825288,"byte_end":12825291,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825296,"byte_end":12825310,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825315,"byte_end":12825318,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825323,"byte_end":12825330,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825335,"byte_end":12825363,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825368,"byte_end":12825391,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825396,"byte_end":12825399,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825404,"byte_end":12825422,"line_start":380,"line_end":380,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825427,"byte_end":12825448,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825453,"byte_end":12825498,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825503,"byte_end":12825540,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825545,"byte_end":12825548,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825553,"byte_end":12825595,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825600,"byte_end":12825642,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825647,"byte_end":12825650,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825655,"byte_end":12825701,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825706,"byte_end":12825752,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825757,"byte_end":12825794,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825799,"byte_end":12825810,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825815,"byte_end":12825818,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825823,"byte_end":12825847,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825852,"byte_end":12825876,"line_start":394,"line_end":394,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825881,"byte_end":12825924,"line_start":395,"line_end":395,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825929,"byte_end":12825934,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12825939,"byte_end":12825946,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4052},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":4053},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":5340},{"krate":0,"index":5343},{"krate":0,"index":5346},{"krate":0,"index":5349},{"krate":0,"index":4101},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":5377},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":4132},{"krate":0,"index":4134},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4155},{"krate":0,"index":4158},{"krate":0,"index":4162},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4173},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4202}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838710,"byte_end":12838777,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838778,"byte_end":12838846,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838847,"byte_end":12838913,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838914,"byte_end":12838917,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838918,"byte_end":12838984,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12838985,"byte_end":12839056,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839057,"byte_end":12839060,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839061,"byte_end":12839107,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839108,"byte_end":12839111,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Since the `send` method is not async, it can be used anywhere. This includes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839112,"byte_end":12839192,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ sending between two runtimes, and using it from non-async code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839193,"byte_end":12839260,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839261,"byte_end":12839264,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839265,"byte_end":12839279,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839280,"byte_end":12839283,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839284,"byte_end":12839291,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839292,"byte_end":12839321,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839322,"byte_end":12839325,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839326,"byte_end":12839344,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839345,"byte_end":12839366,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839367,"byte_end":12839409,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839410,"byte_end":12839413,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839414,"byte_end":12839447,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839448,"byte_end":12839488,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839489,"byte_end":12839538,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839539,"byte_end":12839552,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839553,"byte_end":12839564,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839565,"byte_end":12839568,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839569,"byte_end":12839593,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839594,"byte_end":12839641,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839642,"byte_end":12839695,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839696,"byte_end":12839705,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839706,"byte_end":12839711,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839712,"byte_end":12839719,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839720,"byte_end":12839723,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839724,"byte_end":12839797,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839798,"byte_end":12839823,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839824,"byte_end":12839827,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839828,"byte_end":12839835,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839836,"byte_end":12839865,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839866,"byte_end":12839869,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839870,"byte_end":12839888,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839889,"byte_end":12839910,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839911,"byte_end":12839960,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839961,"byte_end":12839964,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839965,"byte_end":12839998,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12839999,"byte_end":12840020,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840021,"byte_end":12840032,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840033,"byte_end":12840036,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840037,"byte_end":12840061,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840062,"byte_end":12840113,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840114,"byte_end":12840167,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840168,"byte_end":12840177,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840178,"byte_end":12840183,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840184,"byte_end":12840191,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840192,"byte_end":12840195,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To use a oneshot channel in a `tokio::select!` loop, add `&mut` in front of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840196,"byte_end":12840275,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840276,"byte_end":12840292,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840293,"byte_end":12840296,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840297,"byte_end":12840304,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840305,"byte_end":12840334,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840335,"byte_end":12840384,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840385,"byte_end":12840388,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840389,"byte_end":12840407,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840408,"byte_end":12840432,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840433,"byte_end":12840501,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840502,"byte_end":12840523,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840524,"byte_end":12840574,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840575,"byte_end":12840639,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840640,"byte_end":12840643,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840644,"byte_end":12840666,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840667,"byte_end":12840700,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840701,"byte_end":12840749,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840750,"byte_end":12840794,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840795,"byte_end":12840806,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840807,"byte_end":12840810,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840811,"byte_end":12840825,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840826,"byte_end":12840854,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840855,"byte_end":12840920,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840921,"byte_end":12840957,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12840958,"byte_end":12841020,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841021,"byte_end":12841047,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841048,"byte_end":12841065,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841066,"byte_end":12841079,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841080,"byte_end":12841089,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841090,"byte_end":12841122,"line_start":87,"line_end":87,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841123,"byte_end":12841128,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841129,"byte_end":12841136,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841137,"byte_end":12841140,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841141,"byte_end":12841214,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841215,"byte_end":12841236,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841237,"byte_end":12841240,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841241,"byte_end":12841248,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841249,"byte_end":12841278,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841279,"byte_end":12841282,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841283,"byte_end":12841306,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841307,"byte_end":12841361,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841362,"byte_end":12841367,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841368,"byte_end":12841398,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841399,"byte_end":12841427,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841428,"byte_end":12841482,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841483,"byte_end":12841540,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841541,"byte_end":12841595,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841596,"byte_end":12841609,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841610,"byte_end":12841619,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841620,"byte_end":12841625,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841626,"byte_end":12841629,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841630,"byte_end":12841648,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841649,"byte_end":12841673,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841674,"byte_end":12841721,"line_start":111,"line_end":111,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841722,"byte_end":12841743,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841744,"byte_end":12841790,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841791,"byte_end":12841794,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841795,"byte_end":12841856,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841857,"byte_end":12841884,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841885,"byte_end":12841888,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841889,"byte_end":12841942,"line_start":118,"line_end":118,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841943,"byte_end":12841948,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12841949,"byte_end":12841956,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5340},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844391,"byte_end":12844397,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5342}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842361,"byte_end":12842410,"line_start":136,"line_end":136,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842411,"byte_end":12842414,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842415,"byte_end":12842485,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842486,"byte_end":12842523,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842524,"byte_end":12842527,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842528,"byte_end":12842542,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842543,"byte_end":12842546,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842547,"byte_end":12842554,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842555,"byte_end":12842584,"line_start":144,"line_end":144,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842585,"byte_end":12842588,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842589,"byte_end":12842607,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842608,"byte_end":12842629,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842630,"byte_end":12842672,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842673,"byte_end":12842676,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842677,"byte_end":12842710,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842711,"byte_end":12842751,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842752,"byte_end":12842801,"line_start":152,"line_end":152,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842802,"byte_end":12842815,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842816,"byte_end":12842827,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842828,"byte_end":12842831,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842832,"byte_end":12842856,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842857,"byte_end":12842904,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842905,"byte_end":12842958,"line_start":158,"line_end":158,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842959,"byte_end":12842968,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842969,"byte_end":12842974,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842975,"byte_end":12842982,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842983,"byte_end":12842986,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12842987,"byte_end":12843060,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843061,"byte_end":12843086,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843087,"byte_end":12843090,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843091,"byte_end":12843098,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843099,"byte_end":12843128,"line_start":167,"line_end":167,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843129,"byte_end":12843132,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843133,"byte_end":12843151,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843152,"byte_end":12843173,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843174,"byte_end":12843223,"line_start":171,"line_end":171,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843224,"byte_end":12843227,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843228,"byte_end":12843261,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843262,"byte_end":12843283,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843284,"byte_end":12843295,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843296,"byte_end":12843299,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843300,"byte_end":12843324,"line_start":177,"line_end":177,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843325,"byte_end":12843376,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843377,"byte_end":12843430,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843431,"byte_end":12843440,"line_start":180,"line_end":180,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843441,"byte_end":12843446,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843447,"byte_end":12843454,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843455,"byte_end":12843458,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843459,"byte_end":12843532,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843533,"byte_end":12843554,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843555,"byte_end":12843558,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843559,"byte_end":12843566,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843567,"byte_end":12843596,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843597,"byte_end":12843600,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843601,"byte_end":12843624,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843625,"byte_end":12843679,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843680,"byte_end":12843685,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843686,"byte_end":12843716,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843717,"byte_end":12843745,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843746,"byte_end":12843800,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843801,"byte_end":12843858,"line_start":196,"line_end":196,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843859,"byte_end":12843913,"line_start":197,"line_end":197,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843914,"byte_end":12843927,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843928,"byte_end":12843937,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843938,"byte_end":12843943,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843944,"byte_end":12843947,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843948,"byte_end":12843966,"line_start":202,"line_end":202,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843967,"byte_end":12843991,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12843992,"byte_end":12844039,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844040,"byte_end":12844061,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844062,"byte_end":12844108,"line_start":206,"line_end":206,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844109,"byte_end":12844112,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844113,"byte_end":12844174,"line_start":208,"line_end":208,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844175,"byte_end":12844202,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844203,"byte_end":12844206,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844207,"byte_end":12844260,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844261,"byte_end":12844266,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844267,"byte_end":12844274,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844275,"byte_end":12844278,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: std::option::Option","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844279,"byte_end":12844314,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ [`Option::take`]: std::option::Option::take","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844315,"byte_end":12844362,"line_start":216,"line_end":216,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846806,"byte_end":12846814,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5348}],"decl_id":null,"docs":" Receives a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receives a value from the associated [`Sender`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844527,"byte_end":12844579,"line_start":224,"line_end":224,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844580,"byte_end":12844583,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844584,"byte_end":12844654,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844655,"byte_end":12844692,"line_start":227,"line_end":227,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844693,"byte_end":12844696,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This channel has no `recv` method because the receiver itself implements the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844697,"byte_end":12844777,"line_start":229,"line_end":229,"column_start":1,"column_end":81}},{"value":"/ [`Future`] trait. To receive a value, `.await` the `Receiver` object directly.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844778,"byte_end":12844860,"line_start":230,"line_end":230,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844861,"byte_end":12844864,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: trait@std::future::Future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844865,"byte_end":12844906,"line_start":232,"line_end":232,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844907,"byte_end":12844910,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844911,"byte_end":12844925,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844926,"byte_end":12844929,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844930,"byte_end":12844937,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844938,"byte_end":12844967,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844968,"byte_end":12844971,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844972,"byte_end":12844990,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12844991,"byte_end":12845012,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845013,"byte_end":12845055,"line_start":241,"line_end":241,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845056,"byte_end":12845059,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845060,"byte_end":12845093,"line_start":243,"line_end":243,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845094,"byte_end":12845134,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845135,"byte_end":12845184,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845185,"byte_end":12845198,"line_start":246,"line_end":246,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845199,"byte_end":12845210,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845211,"byte_end":12845214,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845215,"byte_end":12845239,"line_start":249,"line_end":249,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845240,"byte_end":12845287,"line_start":250,"line_end":250,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845288,"byte_end":12845341,"line_start":251,"line_end":251,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845342,"byte_end":12845351,"line_start":252,"line_end":252,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845352,"byte_end":12845357,"line_start":253,"line_end":253,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845358,"byte_end":12845365,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845366,"byte_end":12845369,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845370,"byte_end":12845443,"line_start":256,"line_end":256,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845444,"byte_end":12845469,"line_start":257,"line_end":257,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845470,"byte_end":12845473,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845474,"byte_end":12845481,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845482,"byte_end":12845511,"line_start":260,"line_end":260,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845512,"byte_end":12845515,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845516,"byte_end":12845534,"line_start":262,"line_end":262,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845535,"byte_end":12845556,"line_start":263,"line_end":263,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845557,"byte_end":12845606,"line_start":264,"line_end":264,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845607,"byte_end":12845610,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845611,"byte_end":12845644,"line_start":266,"line_end":266,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845645,"byte_end":12845666,"line_start":267,"line_end":267,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845667,"byte_end":12845678,"line_start":268,"line_end":268,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845679,"byte_end":12845682,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845683,"byte_end":12845707,"line_start":270,"line_end":270,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845708,"byte_end":12845759,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845760,"byte_end":12845813,"line_start":272,"line_end":272,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845814,"byte_end":12845823,"line_start":273,"line_end":273,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845824,"byte_end":12845829,"line_start":274,"line_end":274,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845830,"byte_end":12845837,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845838,"byte_end":12845841,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ To use a `Receiver` in a `tokio::select!` loop, add `&mut` in front of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845842,"byte_end":12845920,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845921,"byte_end":12845933,"line_start":278,"line_end":278,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845934,"byte_end":12845937,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845938,"byte_end":12845945,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845946,"byte_end":12845975,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12845976,"byte_end":12846025,"line_start":282,"line_end":282,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846026,"byte_end":12846029,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846030,"byte_end":12846048,"line_start":284,"line_end":284,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846049,"byte_end":12846073,"line_start":285,"line_end":285,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846074,"byte_end":12846142,"line_start":286,"line_end":286,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846143,"byte_end":12846164,"line_start":287,"line_end":287,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846165,"byte_end":12846215,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846216,"byte_end":12846280,"line_start":289,"line_end":289,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846281,"byte_end":12846284,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846285,"byte_end":12846307,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846308,"byte_end":12846341,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846342,"byte_end":12846390,"line_start":293,"line_end":293,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846391,"byte_end":12846435,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846436,"byte_end":12846447,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846448,"byte_end":12846451,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846452,"byte_end":12846466,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846467,"byte_end":12846495,"line_start":298,"line_end":298,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846496,"byte_end":12846561,"line_start":299,"line_end":299,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846562,"byte_end":12846598,"line_start":300,"line_end":300,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846599,"byte_end":12846661,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846662,"byte_end":12846688,"line_start":302,"line_end":302,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846689,"byte_end":12846706,"line_start":303,"line_end":303,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846707,"byte_end":12846720,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846721,"byte_end":12846730,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846731,"byte_end":12846763,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846764,"byte_end":12846769,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12846770,"byte_end":12846777,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4101},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847131,"byte_end":12847136,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5364},{"krate":0,"index":5369},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":4105},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4110}],"decl_id":null,"docs":" Oneshot error types.\n","sig":null,"attributes":[{"value":"/ Oneshot error types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847143,"byte_end":12847167,"line_start":321,"line_end":321,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5352},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847309,"byte_end":12847318,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847192,"byte_end":12847257,"line_start":325,"line_end":325,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5365},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847540,"byte_end":12847545,"line_start":333,"line_end":333,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847473,"byte_end":12847531,"line_start":332,"line_end":332,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5367},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847634,"byte_end":12847640,"line_start":336,"line_end":336,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847556,"byte_end":12847625,"line_start":335,"line_end":335,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":5364},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847450,"byte_end":12847462,"line_start":331,"line_end":331,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5367}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847340,"byte_end":12847400,"line_start":329,"line_end":329,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":4132},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850761,"byte_end":12850768,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12849929,"byte_end":12850009,"line_start":425,"line_end":425,"column_start":1,"column_end":81}},{"value":"/ tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850010,"byte_end":12850020,"line_start":426,"line_end":426,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850021,"byte_end":12850024,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850025,"byte_end":12850101,"line_start":428,"line_end":428,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850102,"byte_end":12850180,"line_start":429,"line_end":429,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850181,"byte_end":12850227,"line_start":430,"line_end":430,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850228,"byte_end":12850231,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850232,"byte_end":12850278,"line_start":432,"line_end":432,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850279,"byte_end":12850282,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850283,"byte_end":12850297,"line_start":434,"line_end":434,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850298,"byte_end":12850301,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850302,"byte_end":12850309,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850310,"byte_end":12850339,"line_start":437,"line_end":437,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850340,"byte_end":12850343,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850344,"byte_end":12850362,"line_start":439,"line_end":439,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850363,"byte_end":12850384,"line_start":440,"line_end":440,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850385,"byte_end":12850427,"line_start":441,"line_end":441,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850428,"byte_end":12850431,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850432,"byte_end":12850465,"line_start":443,"line_end":443,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850466,"byte_end":12850506,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850507,"byte_end":12850556,"line_start":445,"line_end":445,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850557,"byte_end":12850570,"line_start":446,"line_end":446,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850571,"byte_end":12850582,"line_start":447,"line_end":447,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850583,"byte_end":12850586,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850587,"byte_end":12850611,"line_start":449,"line_end":449,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850612,"byte_end":12850659,"line_start":450,"line_end":450,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850660,"byte_end":12850713,"line_start":451,"line_end":451,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850714,"byte_end":12850723,"line_start":452,"line_end":452,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850724,"byte_end":12850729,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850730,"byte_end":12850737,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12850738,"byte_end":12850753,"line_start":455,"line_end":455,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854873,"byte_end":12854877,"line_start":580,"line_end":580,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853302,"byte_end":12853377,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853382,"byte_end":12853398,"line_start":541,"line_end":541,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853403,"byte_end":12853406,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853411,"byte_end":12853490,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853495,"byte_end":12853570,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853575,"byte_end":12853651,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853656,"byte_end":12853728,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853733,"byte_end":12853746,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853751,"byte_end":12853754,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853759,"byte_end":12853835,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853840,"byte_end":12853916,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853921,"byte_end":12853993,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853998,"byte_end":12854071,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854076,"byte_end":12854150,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854155,"byte_end":12854227,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854232,"byte_end":12854269,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854274,"byte_end":12854277,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854282,"byte_end":12854296,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854301,"byte_end":12854304,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854309,"byte_end":12854341,"line_start":559,"line_end":559,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854346,"byte_end":12854349,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854354,"byte_end":12854361,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854366,"byte_end":12854395,"line_start":562,"line_end":562,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854400,"byte_end":12854403,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854408,"byte_end":12854426,"line_start":564,"line_end":564,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854431,"byte_end":12854452,"line_start":565,"line_end":565,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854457,"byte_end":12854499,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854504,"byte_end":12854507,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854512,"byte_end":12854545,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854550,"byte_end":12854590,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854595,"byte_end":12854644,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854649,"byte_end":12854662,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854667,"byte_end":12854678,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854683,"byte_end":12854686,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854691,"byte_end":12854715,"line_start":574,"line_end":574,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854720,"byte_end":12854767,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854772,"byte_end":12854825,"line_start":576,"line_end":576,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854830,"byte_end":12854839,"line_start":577,"line_end":577,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854844,"byte_end":12854849,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12854854,"byte_end":12854861,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858423,"byte_end":12858429,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856418,"byte_end":12856476,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856481,"byte_end":12856484,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856489,"byte_end":12856563,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856568,"byte_end":12856602,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856607,"byte_end":12856610,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856615,"byte_end":12856680,"line_start":623,"line_end":623,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856685,"byte_end":12856757,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856762,"byte_end":12856765,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856770,"byte_end":12856782,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856787,"byte_end":12856790,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856795,"byte_end":12856843,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856848,"byte_end":12856851,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856856,"byte_end":12856882,"line_start":630,"line_end":630,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856887,"byte_end":12856917,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856922,"byte_end":12856925,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856930,"byte_end":12856944,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856949,"byte_end":12856952,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856957,"byte_end":12856972,"line_start":635,"line_end":635,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856977,"byte_end":12856980,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856985,"byte_end":12856992,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12856997,"byte_end":12857026,"line_start":638,"line_end":638,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857031,"byte_end":12857034,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857039,"byte_end":12857057,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857062,"byte_end":12857083,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857088,"byte_end":12857140,"line_start":642,"line_end":642,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857145,"byte_end":12857148,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857153,"byte_end":12857186,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857191,"byte_end":12857212,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857217,"byte_end":12857228,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857233,"byte_end":12857236,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857241,"byte_end":12857267,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857272,"byte_end":12857313,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857318,"byte_end":12857323,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857328,"byte_end":12857335,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857340,"byte_end":12857343,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857348,"byte_end":12857370,"line_start":653,"line_end":653,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857375,"byte_end":12857378,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857383,"byte_end":12857390,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857395,"byte_end":12857424,"line_start":656,"line_end":656,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857429,"byte_end":12857467,"line_start":657,"line_end":657,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857472,"byte_end":12857475,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857480,"byte_end":12857514,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857519,"byte_end":12857570,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857575,"byte_end":12857600,"line_start":661,"line_end":661,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857605,"byte_end":12857610,"line_start":662,"line_end":662,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857615,"byte_end":12857618,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857623,"byte_end":12857641,"line_start":664,"line_end":664,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857646,"byte_end":12857667,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857672,"byte_end":12857718,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857723,"byte_end":12857726,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857731,"byte_end":12857764,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857769,"byte_end":12857797,"line_start":669,"line_end":669,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857802,"byte_end":12857838,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857843,"byte_end":12857918,"line_start":671,"line_end":671,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857923,"byte_end":12857940,"line_start":672,"line_end":672,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857945,"byte_end":12857983,"line_start":673,"line_end":673,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12857988,"byte_end":12858072,"line_start":674,"line_end":674,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858077,"byte_end":12858160,"line_start":675,"line_end":675,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858165,"byte_end":12858208,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858213,"byte_end":12858230,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858235,"byte_end":12858248,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858253,"byte_end":12858264,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858269,"byte_end":12858272,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858277,"byte_end":12858313,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858318,"byte_end":12858383,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858388,"byte_end":12858393,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12858398,"byte_end":12858405,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859764,"byte_end":12859773,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859005,"byte_end":12859079,"line_start":704,"line_end":704,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859084,"byte_end":12859087,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859092,"byte_end":12859166,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859171,"byte_end":12859205,"line_start":707,"line_end":707,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859210,"byte_end":12859213,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859218,"byte_end":12859293,"line_start":709,"line_end":709,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859298,"byte_end":12859301,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859306,"byte_end":12859332,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859337,"byte_end":12859367,"line_start":712,"line_end":712,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859372,"byte_end":12859375,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859380,"byte_end":12859394,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859399,"byte_end":12859402,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859407,"byte_end":12859414,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859419,"byte_end":12859448,"line_start":717,"line_end":717,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859453,"byte_end":12859456,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859461,"byte_end":12859479,"line_start":719,"line_end":719,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859484,"byte_end":12859505,"line_start":720,"line_end":720,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859510,"byte_end":12859552,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859557,"byte_end":12859560,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859565,"byte_end":12859598,"line_start":723,"line_end":723,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859603,"byte_end":12859606,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859611,"byte_end":12859628,"line_start":725,"line_end":725,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859633,"byte_end":12859636,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859641,"byte_end":12859673,"line_start":727,"line_end":727,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859678,"byte_end":12859730,"line_start":728,"line_end":728,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859735,"byte_end":12859740,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859745,"byte_end":12859752,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4146},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861220,"byte_end":12861231,"line_start":778,"line_end":778,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Checks whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12859935,"byte_end":12860016,"line_start":738,"line_end":738,"column_start":5,"column_end":86}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860021,"byte_end":12860104,"line_start":739,"line_end":739,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860109,"byte_end":12860120,"line_start":740,"line_end":740,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860125,"byte_end":12860128,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860133,"byte_end":12860213,"line_start":742,"line_end":742,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860218,"byte_end":12860252,"line_start":743,"line_end":743,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860257,"byte_end":12860260,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860265,"byte_end":12860348,"line_start":745,"line_end":745,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860353,"byte_end":12860419,"line_start":746,"line_end":746,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860424,"byte_end":12860427,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860432,"byte_end":12860487,"line_start":748,"line_end":748,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860492,"byte_end":12860547,"line_start":749,"line_end":749,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860552,"byte_end":12860555,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860560,"byte_end":12860578,"line_start":751,"line_end":751,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860583,"byte_end":12860586,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860591,"byte_end":12860617,"line_start":753,"line_end":753,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860622,"byte_end":12860625,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860630,"byte_end":12860682,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860687,"byte_end":12860737,"line_start":756,"line_end":756,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860742,"byte_end":12860745,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860750,"byte_end":12860764,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860769,"byte_end":12860772,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860777,"byte_end":12860784,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860789,"byte_end":12860818,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860823,"byte_end":12860826,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860831,"byte_end":12860864,"line_start":763,"line_end":763,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860869,"byte_end":12860872,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860877,"byte_end":12860895,"line_start":765,"line_end":765,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860900,"byte_end":12860921,"line_start":766,"line_end":766,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860926,"byte_end":12860982,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860987,"byte_end":12860990,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12860995,"byte_end":12861028,"line_start":769,"line_end":769,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861033,"byte_end":12861056,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861061,"byte_end":12861072,"line_start":771,"line_end":771,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861077,"byte_end":12861080,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861085,"byte_end":12861132,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861137,"byte_end":12861140,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861145,"byte_end":12861186,"line_start":775,"line_end":775,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861191,"byte_end":12861196,"line_start":776,"line_end":776,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12861201,"byte_end":12861208,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864813,"byte_end":12864818,"line_start":903,"line_end":903,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863067,"byte_end":12863134,"line_start":844,"line_end":844,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863139,"byte_end":12863142,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863147,"byte_end":12863221,"line_start":846,"line_end":846,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863226,"byte_end":12863294,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863299,"byte_end":12863365,"line_start":848,"line_end":848,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863370,"byte_end":12863384,"line_start":849,"line_end":849,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863389,"byte_end":12863392,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863397,"byte_end":12863473,"line_start":851,"line_end":851,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863478,"byte_end":12863541,"line_start":852,"line_end":852,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863546,"byte_end":12863549,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863554,"byte_end":12863622,"line_start":854,"line_end":854,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863627,"byte_end":12863649,"line_start":855,"line_end":855,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863654,"byte_end":12863657,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863662,"byte_end":12863684,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863689,"byte_end":12863725,"line_start":858,"line_end":858,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863730,"byte_end":12863733,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863738,"byte_end":12863752,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863757,"byte_end":12863760,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863765,"byte_end":12863800,"line_start":862,"line_end":862,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863805,"byte_end":12863808,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863813,"byte_end":12863820,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863825,"byte_end":12863854,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863859,"byte_end":12863909,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863914,"byte_end":12863917,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863922,"byte_end":12863940,"line_start":868,"line_end":868,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863945,"byte_end":12863966,"line_start":869,"line_end":869,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863971,"byte_end":12864017,"line_start":870,"line_end":870,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864022,"byte_end":12864025,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864030,"byte_end":12864063,"line_start":872,"line_end":872,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864068,"byte_end":12864071,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864076,"byte_end":12864095,"line_start":874,"line_end":874,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864100,"byte_end":12864103,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864108,"byte_end":12864140,"line_start":876,"line_end":876,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864145,"byte_end":12864197,"line_start":877,"line_end":877,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864202,"byte_end":12864205,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864210,"byte_end":12864239,"line_start":879,"line_end":879,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864244,"byte_end":12864287,"line_start":880,"line_end":880,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864292,"byte_end":12864324,"line_start":881,"line_end":881,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864329,"byte_end":12864338,"line_start":882,"line_end":882,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864343,"byte_end":12864348,"line_start":883,"line_end":883,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864353,"byte_end":12864360,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864365,"byte_end":12864368,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864373,"byte_end":12864424,"line_start":886,"line_end":886,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864429,"byte_end":12864432,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864437,"byte_end":12864444,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864449,"byte_end":12864478,"line_start":889,"line_end":889,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864483,"byte_end":12864486,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864491,"byte_end":12864509,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864514,"byte_end":12864535,"line_start":892,"line_end":892,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864540,"byte_end":12864586,"line_start":893,"line_end":893,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864591,"byte_end":12864594,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864599,"byte_end":12864648,"line_start":895,"line_end":895,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864653,"byte_end":12864656,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864661,"byte_end":12864680,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864685,"byte_end":12864688,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864693,"byte_end":12864734,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864739,"byte_end":12864779,"line_start":900,"line_end":900,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864784,"byte_end":12864789,"line_start":901,"line_end":901,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12864794,"byte_end":12864801,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12867127,"byte_end":12867135,"line_start":980,"line_end":980,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865242,"byte_end":12865274,"line_start":917,"line_end":917,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865279,"byte_end":12865282,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865287,"byte_end":12865360,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865365,"byte_end":12865431,"line_start":920,"line_end":920,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865436,"byte_end":12865460,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865465,"byte_end":12865468,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865473,"byte_end":12865539,"line_start":923,"line_end":923,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865544,"byte_end":12865566,"line_start":924,"line_end":924,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865571,"byte_end":12865574,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865579,"byte_end":12865591,"line_start":926,"line_end":926,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865596,"byte_end":12865599,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865604,"byte_end":12865655,"line_start":928,"line_end":928,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865660,"byte_end":12865723,"line_start":929,"line_end":929,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865728,"byte_end":12865803,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865808,"byte_end":12865822,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865827,"byte_end":12865830,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865835,"byte_end":12865849,"line_start":933,"line_end":933,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865854,"byte_end":12865857,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865862,"byte_end":12865912,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865917,"byte_end":12865920,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865925,"byte_end":12865932,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865937,"byte_end":12865966,"line_start":938,"line_end":938,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12865971,"byte_end":12866021,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866026,"byte_end":12866029,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866034,"byte_end":12866052,"line_start":941,"line_end":941,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866057,"byte_end":12866078,"line_start":942,"line_end":942,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866083,"byte_end":12866129,"line_start":943,"line_end":943,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866134,"byte_end":12866137,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866142,"byte_end":12866171,"line_start":945,"line_end":945,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866176,"byte_end":12866221,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866226,"byte_end":12866268,"line_start":947,"line_end":947,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866273,"byte_end":12866305,"line_start":948,"line_end":948,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866310,"byte_end":12866319,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866324,"byte_end":12866327,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866332,"byte_end":12866355,"line_start":951,"line_end":951,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866360,"byte_end":12866394,"line_start":952,"line_end":952,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866399,"byte_end":12866402,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866407,"byte_end":12866436,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866441,"byte_end":12866493,"line_start":955,"line_end":955,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866498,"byte_end":12866530,"line_start":956,"line_end":956,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866535,"byte_end":12866544,"line_start":957,"line_end":957,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866549,"byte_end":12866554,"line_start":958,"line_end":958,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866559,"byte_end":12866566,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866571,"byte_end":12866574,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866579,"byte_end":12866640,"line_start":961,"line_end":961,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866645,"byte_end":12866648,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866653,"byte_end":12866660,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866665,"byte_end":12866694,"line_start":964,"line_end":964,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866699,"byte_end":12866749,"line_start":965,"line_end":965,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866754,"byte_end":12866757,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866762,"byte_end":12866780,"line_start":967,"line_end":967,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866785,"byte_end":12866806,"line_start":968,"line_end":968,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866811,"byte_end":12866863,"line_start":969,"line_end":969,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866868,"byte_end":12866871,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866876,"byte_end":12866893,"line_start":971,"line_end":971,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866898,"byte_end":12866901,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866906,"byte_end":12866935,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866940,"byte_end":12866994,"line_start":974,"line_end":974,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12866999,"byte_end":12867042,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12867047,"byte_end":12867079,"line_start":976,"line_end":976,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12867084,"byte_end":12867093,"line_start":977,"line_end":977,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12867098,"byte_end":12867103,"line_start":978,"line_end":978,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12867108,"byte_end":12867115,"line_start":979,"line_end":979,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869323,"byte_end":12869336,"line_start":1044,"line_end":1044,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(Self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868648,"byte_end":12868710,"line_start":1018,"line_end":1018,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868715,"byte_end":12868718,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868723,"byte_end":12868735,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868740,"byte_end":12868743,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868748,"byte_end":12868815,"line_start":1022,"line_end":1022,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868820,"byte_end":12868832,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868837,"byte_end":12868840,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868845,"byte_end":12868859,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868864,"byte_end":12868867,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868872,"byte_end":12868879,"line_start":1027,"line_end":1027,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868884,"byte_end":12868904,"line_start":1028,"line_end":1028,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868909,"byte_end":12868938,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868943,"byte_end":12868946,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868951,"byte_end":12868969,"line_start":1031,"line_end":1031,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12868974,"byte_end":12868995,"line_start":1032,"line_end":1032,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel::<u8>();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869000,"byte_end":12869048,"line_start":1033,"line_end":1033,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869053,"byte_end":12869056,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869061,"byte_end":12869108,"line_start":1035,"line_end":1035,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Ok(10), rx.blocking_recv());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869113,"byte_end":12869164,"line_start":1036,"line_end":1036,"column_start":5,"column_end":56}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869169,"byte_end":12869180,"line_start":1037,"line_end":1037,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869185,"byte_end":12869188,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869193,"byte_end":12869221,"line_start":1039,"line_end":1039,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869226,"byte_end":12869260,"line_start":1040,"line_end":1040,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869265,"byte_end":12869270,"line_start":1041,"line_end":1041,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869275,"byte_end":12869282,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869287,"byte_end":12869311,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5384},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882050,"byte_end":12882056,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881924,"byte_end":12881989,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881994,"byte_end":12881997,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882002,"byte_end":12882045,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5386},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882111,"byte_end":12882120,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882063,"byte_end":12882106,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":5383},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881902,"byte_end":12881917,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":5384},{"krate":0,"index":5386}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881728,"byte_end":12881792,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881793,"byte_end":12881796,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12881797,"byte_end":12881864,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5393},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882406,"byte_end":12882418,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882124,"byte_end":12882184,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882185,"byte_end":12882188,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882189,"byte_end":12882255,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882256,"byte_end":12882269,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882270,"byte_end":12882273,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882274,"byte_end":12882317,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12882318,"byte_end":12882377,"line_start":68,"line_end":68,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5398},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908625,"byte_end":12908634,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":5399}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906065,"byte_end":12906131,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906132,"byte_end":12906135,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906136,"byte_end":12906211,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906212,"byte_end":12906288,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906289,"byte_end":12906369,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906370,"byte_end":12906379,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906380,"byte_end":12906383,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906384,"byte_end":12906457,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906458,"byte_end":12906537,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906538,"byte_end":12906616,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906617,"byte_end":12906688,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906689,"byte_end":12906692,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906693,"byte_end":12906774,"line_start":19,"line_end":19,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906775,"byte_end":12906854,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906855,"byte_end":12906934,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12906935,"byte_end":12907014,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907015,"byte_end":12907094,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907095,"byte_end":12907112,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907113,"byte_end":12907116,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907117,"byte_end":12907197,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907198,"byte_end":12907210,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907211,"byte_end":12907214,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907215,"byte_end":12907229,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907230,"byte_end":12907233,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907234,"byte_end":12907250,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907251,"byte_end":12907254,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907255,"byte_end":12907262,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907263,"byte_end":12907313,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907314,"byte_end":12907317,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907318,"byte_end":12907336,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907337,"byte_end":12907358,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Semaphore::new(3);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907359,"byte_end":12907401,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907402,"byte_end":12907405,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     let a_permit = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907406,"byte_end":12907464,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     let two_permits = semaphore.acquire_many(2).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907465,"byte_end":12907532,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907533,"byte_end":12907536,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907537,"byte_end":12907590,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907591,"byte_end":12907594,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     let permit_attempt = semaphore.try_acquire();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907595,"byte_end":12907648,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/     assert_eq!(permit_attempt.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907649,"byte_end":12907724,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907725,"byte_end":12907730,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907731,"byte_end":12907738,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907739,"byte_end":12907742,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Use [`Semaphore::acquire_owned`] to move permits across tasks:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907743,"byte_end":12907809,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907810,"byte_end":12907813,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907814,"byte_end":12907821,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907822,"byte_end":12907845,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907846,"byte_end":12907877,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907878,"byte_end":12907881,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907882,"byte_end":12907900,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907901,"byte_end":12907922,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907923,"byte_end":12907975,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12907976,"byte_end":12908018,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908019,"byte_end":12908022,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908023,"byte_end":12908046,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908047,"byte_end":12908121,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908122,"byte_end":12908177,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/             // perform task...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908178,"byte_end":12908212,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908213,"byte_end":12908267,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/             drop(permit);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908268,"byte_end":12908297,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/         }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908298,"byte_end":12908314,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908315,"byte_end":12908324,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908325,"byte_end":12908328,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908329,"byte_end":12908365,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908366,"byte_end":12908400,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908401,"byte_end":12908410,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908411,"byte_end":12908416,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908417,"byte_end":12908424,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908425,"byte_end":12908428,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908429,"byte_end":12908524,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ [`Semaphore::acquire_owned`]: crate::sync::Semaphore::acquire_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908525,"byte_end":12908596,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":5402},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908970,"byte_end":12908985,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908786,"byte_end":12908818,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908819,"byte_end":12908822,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908823,"byte_end":12908874,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908875,"byte_end":12908878,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908879,"byte_end":12908929,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12908930,"byte_end":12908941,"line_start":91,"line_end":91,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909246,"byte_end":12909266,"line_start":105,"line_end":105,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5410},{"krate":0,"index":5411}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909037,"byte_end":12909076,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909077,"byte_end":12909080,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909081,"byte_end":12909138,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909139,"byte_end":12909142,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909143,"byte_end":12909205,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909206,"byte_end":12909217,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909882,"byte_end":12909885,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909787,"byte_end":12909850,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909855,"byte_end":12909870,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911640,"byte_end":12911657,"line_start":183,"line_end":183,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911576,"byte_end":12911628,"line_start":182,"line_end":182,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911904,"byte_end":12911915,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911727,"byte_end":12911769,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911774,"byte_end":12911777,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911782,"byte_end":12911892,"line_start":189,"line_end":189,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913119,"byte_end":12913126,"line_start":228,"line_end":228,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12911978,"byte_end":12912019,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912024,"byte_end":12912027,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912032,"byte_end":12912103,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912108,"byte_end":12912174,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912179,"byte_end":12912199,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912204,"byte_end":12912207,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912212,"byte_end":12912231,"line_start":200,"line_end":200,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912236,"byte_end":12912239,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912244,"byte_end":12912319,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire` makes you lose your place","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912324,"byte_end":12912400,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912405,"byte_end":12912422,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912427,"byte_end":12912430,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912435,"byte_end":12912449,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912454,"byte_end":12912457,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912462,"byte_end":12912469,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912474,"byte_end":12912505,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912510,"byte_end":12912513,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912518,"byte_end":12912536,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912541,"byte_end":12912562,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912567,"byte_end":12912609,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912614,"byte_end":12912617,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/     let permit_1 = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912622,"byte_end":12912680,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912685,"byte_end":12912738,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912743,"byte_end":12912746,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/     let permit_2 = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912751,"byte_end":12912809,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912814,"byte_end":12912867,"line_start":219,"line_end":219,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912872,"byte_end":12912875,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     drop(permit_1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912880,"byte_end":12912903,"line_start":221,"line_end":221,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912908,"byte_end":12912961,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912966,"byte_end":12912971,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912976,"byte_end":12912983,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912988,"byte_end":12912991,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12912996,"byte_end":12913043,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913048,"byte_end":12913101,"line_start":227,"line_end":227,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914595,"byte_end":12914607,"line_start":275,"line_end":275,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913664,"byte_end":12913708,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913713,"byte_end":12913716,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913721,"byte_end":12913792,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913797,"byte_end":12913863,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913868,"byte_end":12913889,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913894,"byte_end":12913897,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913902,"byte_end":12913921,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913926,"byte_end":12913929,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12913934,"byte_end":12914009,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914014,"byte_end":12914089,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914094,"byte_end":12914117,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914122,"byte_end":12914125,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914130,"byte_end":12914144,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914149,"byte_end":12914152,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914157,"byte_end":12914164,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914169,"byte_end":12914200,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914205,"byte_end":12914208,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914213,"byte_end":12914231,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914236,"byte_end":12914257,"line_start":265,"line_end":265,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914262,"byte_end":12914304,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914309,"byte_end":12914312,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/     let permit = semaphore.acquire_many(3).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914317,"byte_end":12914379,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(semaphore.available_permits(), 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914384,"byte_end":12914437,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914442,"byte_end":12914447,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914452,"byte_end":12914459,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914464,"byte_end":12914467,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914472,"byte_end":12914519,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12914524,"byte_end":12914577,"line_start":274,"line_end":274,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916237,"byte_end":12916248,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915136,"byte_end":12915185,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915190,"byte_end":12915193,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915198,"byte_end":12915278,"line_start":297,"line_end":297,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915283,"byte_end":12915364,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915369,"byte_end":12915442,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915447,"byte_end":12915450,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915455,"byte_end":12915469,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915474,"byte_end":12915477,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915482,"byte_end":12915489,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915494,"byte_end":12915544,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915549,"byte_end":12915552,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915557,"byte_end":12915574,"line_start":306,"line_end":306,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915579,"byte_end":12915617,"line_start":307,"line_end":307,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915622,"byte_end":12915625,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915630,"byte_end":12915682,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915687,"byte_end":12915736,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915741,"byte_end":12915744,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915749,"byte_end":12915801,"line_start":312,"line_end":312,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915806,"byte_end":12915855,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915860,"byte_end":12915863,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915868,"byte_end":12915911,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915916,"byte_end":12915981,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915986,"byte_end":12915993,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12915998,"byte_end":12916005,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916010,"byte_end":12916013,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916018,"byte_end":12916087,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916092,"byte_end":12916167,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916172,"byte_end":12916225,"line_start":322,"line_end":322,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917518,"byte_end":12917534,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916513,"byte_end":12916565,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916570,"byte_end":12916573,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916578,"byte_end":12916658,"line_start":335,"line_end":335,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are not enough permits left.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916663,"byte_end":12916741,"line_start":336,"line_end":336,"column_start":5,"column_end":83}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916746,"byte_end":12916830,"line_start":337,"line_end":337,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916835,"byte_end":12916838,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916843,"byte_end":12916857,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916862,"byte_end":12916865,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916870,"byte_end":12916877,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916882,"byte_end":12916932,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916937,"byte_end":12916940,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916945,"byte_end":12916962,"line_start":344,"line_end":344,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(4);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12916967,"byte_end":12917005,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917010,"byte_end":12917013,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire_many(3).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917018,"byte_end":12917076,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917081,"byte_end":12917130,"line_start":348,"line_end":348,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917135,"byte_end":12917138,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917143,"byte_end":12917192,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917197,"byte_end":12917262,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917267,"byte_end":12917274,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917279,"byte_end":12917286,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917291,"byte_end":12917294,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917299,"byte_end":12917368,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917373,"byte_end":12917448,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917453,"byte_end":12917506,"line_start":357,"line_end":357,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919251,"byte_end":12919264,"line_start":410,"line_end":410,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917807,"byte_end":12917848,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917853,"byte_end":12917856,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917861,"byte_end":12917929,"line_start":370,"line_end":370,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12917934,"byte_end":12918005,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918010,"byte_end":12918081,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918086,"byte_end":12918106,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918111,"byte_end":12918114,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918119,"byte_end":12918138,"line_start":375,"line_end":375,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918143,"byte_end":12918146,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918151,"byte_end":12918226,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_owned` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918231,"byte_end":12918307,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918312,"byte_end":12918335,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918340,"byte_end":12918343,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918348,"byte_end":12918362,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918367,"byte_end":12918370,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918375,"byte_end":12918382,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918387,"byte_end":12918410,"line_start":384,"line_end":384,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918415,"byte_end":12918446,"line_start":385,"line_end":385,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918451,"byte_end":12918454,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918459,"byte_end":12918477,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918482,"byte_end":12918503,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918508,"byte_end":12918560,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918565,"byte_end":12918607,"line_start":390,"line_end":390,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918612,"byte_end":12918615,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918620,"byte_end":12918643,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918648,"byte_end":12918722,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918727,"byte_end":12918782,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918787,"byte_end":12918821,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918826,"byte_end":12918880,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918885,"byte_end":12918914,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918919,"byte_end":12918935,"line_start":398,"line_end":398,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918940,"byte_end":12918949,"line_start":399,"line_end":399,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918954,"byte_end":12918957,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12918962,"byte_end":12918998,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919003,"byte_end":12919037,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919042,"byte_end":12919051,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919056,"byte_end":12919061,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919066,"byte_end":12919073,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919078,"byte_end":12919081,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919086,"byte_end":12919113,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919118,"byte_end":12919165,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919170,"byte_end":12919233,"line_start":409,"line_end":409,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921283,"byte_end":12921301,"line_start":471,"line_end":471,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919824,"byte_end":12919868,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919873,"byte_end":12919876,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919881,"byte_end":12919949,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12919954,"byte_end":12920025,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920030,"byte_end":12920101,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920106,"byte_end":12920126,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920131,"byte_end":12920134,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920139,"byte_end":12920158,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920163,"byte_end":12920166,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920171,"byte_end":12920246,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many_owned` makes you lose","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920251,"byte_end":12920327,"line_start":439,"line_end":439,"column_start":5,"column_end":81}},{"value":"/ your place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920332,"byte_end":12920360,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920365,"byte_end":12920368,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920373,"byte_end":12920387,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920392,"byte_end":12920395,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920400,"byte_end":12920407,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920412,"byte_end":12920435,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920440,"byte_end":12920471,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920476,"byte_end":12920479,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920484,"byte_end":12920502,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920507,"byte_end":12920528,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920533,"byte_end":12920586,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920591,"byte_end":12920633,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920638,"byte_end":12920641,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920646,"byte_end":12920669,"line_start":453,"line_end":453,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_many_owned(2).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920674,"byte_end":12920754,"line_start":454,"line_end":454,"column_start":5,"column_end":85}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920759,"byte_end":12920814,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920819,"byte_end":12920853,"line_start":456,"line_end":456,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920858,"byte_end":12920912,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920917,"byte_end":12920946,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920951,"byte_end":12920967,"line_start":459,"line_end":459,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920972,"byte_end":12920981,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920986,"byte_end":12920989,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12920994,"byte_end":12921030,"line_start":462,"line_end":462,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921035,"byte_end":12921069,"line_start":463,"line_end":463,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921074,"byte_end":12921083,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921088,"byte_end":12921093,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921098,"byte_end":12921105,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921110,"byte_end":12921113,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921118,"byte_end":12921145,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921150,"byte_end":12921197,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921202,"byte_end":12921265,"line_start":470,"line_end":470,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923207,"byte_end":12923224,"line_start":525,"line_end":525,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921897,"byte_end":12921946,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921951,"byte_end":12921954,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12921959,"byte_end":12922030,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922035,"byte_end":12922112,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922117,"byte_end":12922187,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922192,"byte_end":12922263,"line_start":498,"line_end":498,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922268,"byte_end":12922288,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922293,"byte_end":12922296,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922301,"byte_end":12922315,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922320,"byte_end":12922323,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922328,"byte_end":12922335,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922340,"byte_end":12922363,"line_start":504,"line_end":504,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922368,"byte_end":12922418,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922423,"byte_end":12922426,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922431,"byte_end":12922448,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922453,"byte_end":12922501,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922506,"byte_end":12922509,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922514,"byte_end":12922585,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922590,"byte_end":12922639,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922644,"byte_end":12922647,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922652,"byte_end":12922723,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922728,"byte_end":12922777,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922782,"byte_end":12922785,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire_owned();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922790,"byte_end":12922839,"line_start":516,"line_end":516,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922844,"byte_end":12922909,"line_start":517,"line_end":517,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922914,"byte_end":12922921,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922926,"byte_end":12922933,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922938,"byte_end":12922941,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922946,"byte_end":12922973,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12922978,"byte_end":12923047,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923052,"byte_end":12923127,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923132,"byte_end":12923195,"line_start":524,"line_end":524,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924692,"byte_end":12924714,"line_start":564,"line_end":564,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923505,"byte_end":12923557,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923562,"byte_end":12923565,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923570,"byte_end":12923641,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923646,"byte_end":12923723,"line_start":538,"line_end":538,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923728,"byte_end":12923798,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923803,"byte_end":12923874,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923879,"byte_end":12923899,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923904,"byte_end":12923907,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923912,"byte_end":12923926,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923931,"byte_end":12923934,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923939,"byte_end":12923946,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923951,"byte_end":12923974,"line_start":546,"line_end":546,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12923979,"byte_end":12924029,"line_start":547,"line_end":547,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924034,"byte_end":12924037,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924042,"byte_end":12924059,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(4));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924064,"byte_end":12924112,"line_start":550,"line_end":550,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924117,"byte_end":12924120,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_many_owned(3).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924125,"byte_end":12924202,"line_start":552,"line_end":552,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924207,"byte_end":12924256,"line_start":553,"line_end":553,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924261,"byte_end":12924264,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many_owned(2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924269,"byte_end":12924324,"line_start":555,"line_end":555,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924329,"byte_end":12924394,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924399,"byte_end":12924406,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924411,"byte_end":12924418,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924423,"byte_end":12924426,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924431,"byte_end":12924458,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924463,"byte_end":12924532,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924537,"byte_end":12924612,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12924617,"byte_end":12924680,"line_start":563,"line_end":563,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925939,"byte_end":12925944,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925026,"byte_end":12925051,"line_start":577,"line_end":577,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925056,"byte_end":12925059,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925064,"byte_end":12925154,"line_start":579,"line_end":579,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925159,"byte_end":12925162,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925167,"byte_end":12925181,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925186,"byte_end":12925189,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925194,"byte_end":12925201,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925206,"byte_end":12925237,"line_start":584,"line_end":584,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925242,"byte_end":12925265,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925270,"byte_end":12925307,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925312,"byte_end":12925315,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925320,"byte_end":12925338,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925343,"byte_end":12925364,"line_start":589,"line_end":589,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925369,"byte_end":12925421,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925426,"byte_end":12925469,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925474,"byte_end":12925477,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925482,"byte_end":12925515,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925520,"byte_end":12925577,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925582,"byte_end":12925619,"line_start":595,"line_end":595,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925624,"byte_end":12925670,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925675,"byte_end":12925686,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925691,"byte_end":12925694,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925699,"byte_end":12925737,"line_start":599,"line_end":599,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925742,"byte_end":12925769,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925774,"byte_end":12925777,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925782,"byte_end":12925819,"line_start":602,"line_end":602,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925824,"byte_end":12925905,"line_start":603,"line_end":603,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925910,"byte_end":12925915,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925920,"byte_end":12925927,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926049,"byte_end":12926058,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12925994,"byte_end":12926037,"line_start":610,"line_end":610,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926327,"byte_end":12926333,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926152,"byte_end":12926222,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926227,"byte_end":12926296,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926301,"byte_end":12926315,"line_start":619,"line_end":619,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926588,"byte_end":12926594,"line_start":629,"line_end":629,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926413,"byte_end":12926483,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926488,"byte_end":12926557,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926562,"byte_end":12926576,"line_start":628,"line_end":628,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":4439},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963886,"byte_end":12963906,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963595,"byte_end":12963673,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963674,"byte_end":12963686,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963687,"byte_end":12963690,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963691,"byte_end":12963752,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963753,"byte_end":12963768,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963769,"byte_end":12963772,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963773,"byte_end":12963831,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12963832,"byte_end":12963874,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965236,"byte_end":12965239,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964306,"byte_end":12964380,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964385,"byte_end":12964455,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964460,"byte_end":12964488,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964493,"byte_end":12964496,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964501,"byte_end":12964552,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964557,"byte_end":12964632,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964637,"byte_end":12964701,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964706,"byte_end":12964709,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964714,"byte_end":12964728,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964733,"byte_end":12964736,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964741,"byte_end":12964748,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964753,"byte_end":12964776,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964781,"byte_end":12964833,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964838,"byte_end":12964841,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964846,"byte_end":12964894,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964899,"byte_end":12964919,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964924,"byte_end":12964927,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964932,"byte_end":12964952,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964957,"byte_end":12964980,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964985,"byte_end":12965030,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965035,"byte_end":12965038,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965043,"byte_end":12965083,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965088,"byte_end":12965147,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965152,"byte_end":12965155,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965160,"byte_end":12965186,"line_start":51,"line_end":51,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965191,"byte_end":12965198,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965203,"byte_end":12965210,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965215,"byte_end":12965224,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966958,"byte_end":12966965,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965890,"byte_end":12965964,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12965969,"byte_end":12966039,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966044,"byte_end":12966055,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966060,"byte_end":12966063,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966068,"byte_end":12966138,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966143,"byte_end":12966171,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966176,"byte_end":12966179,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966184,"byte_end":12966243,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966248,"byte_end":12966318,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966323,"byte_end":12966387,"line_start":84,"line_end":84,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966392,"byte_end":12966395,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966400,"byte_end":12966414,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966419,"byte_end":12966422,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966427,"byte_end":12966434,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966439,"byte_end":12966462,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966467,"byte_end":12966519,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966524,"byte_end":12966527,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966532,"byte_end":12966580,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966585,"byte_end":12966605,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966610,"byte_end":12966613,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966618,"byte_end":12966638,"line_start":95,"line_end":95,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966643,"byte_end":12966666,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966671,"byte_end":12966716,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966721,"byte_end":12966724,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966729,"byte_end":12966769,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966774,"byte_end":12966869,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966874,"byte_end":12966877,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966882,"byte_end":12966908,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966913,"byte_end":12966920,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966925,"byte_end":12966932,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12966937,"byte_end":12966946,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4500},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969362,"byte_end":12969383,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969064,"byte_end":12969146,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969147,"byte_end":12969159,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969160,"byte_end":12969163,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969164,"byte_end":12969223,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969224,"byte_end":12969242,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969243,"byte_end":12969246,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969247,"byte_end":12969307,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969308,"byte_end":12969350,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970840,"byte_end":12970843,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969791,"byte_end":12969868,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969873,"byte_end":12969882,"line_start":30,"line_end":30,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969887,"byte_end":12969890,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969895,"byte_end":12969966,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969971,"byte_end":12969999,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970004,"byte_end":12970007,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970012,"byte_end":12970071,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970076,"byte_end":12970151,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970156,"byte_end":12970212,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970217,"byte_end":12970220,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970225,"byte_end":12970239,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970244,"byte_end":12970247,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970252,"byte_end":12970259,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970264,"byte_end":12970287,"line_start":42,"line_end":42,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970292,"byte_end":12970345,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970350,"byte_end":12970353,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970358,"byte_end":12970406,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970411,"byte_end":12970431,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970436,"byte_end":12970439,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970444,"byte_end":12970464,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970469,"byte_end":12970492,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970497,"byte_end":12970542,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970547,"byte_end":12970550,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970555,"byte_end":12970560,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970565,"byte_end":12970602,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970607,"byte_end":12970699,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970704,"byte_end":12970724,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970729,"byte_end":12970734,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970739,"byte_end":12970742,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970747,"byte_end":12970790,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970795,"byte_end":12970802,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970807,"byte_end":12970814,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12970819,"byte_end":12970828,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972861,"byte_end":12972868,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971602,"byte_end":12971677,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971682,"byte_end":12971751,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971756,"byte_end":12971775,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971780,"byte_end":12971783,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971788,"byte_end":12971859,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971864,"byte_end":12971892,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971897,"byte_end":12971900,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971905,"byte_end":12971956,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12971961,"byte_end":12972036,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972041,"byte_end":12972110,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972115,"byte_end":12972118,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972123,"byte_end":12972197,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972202,"byte_end":12972205,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972210,"byte_end":12972224,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972229,"byte_end":12972232,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972237,"byte_end":12972244,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972249,"byte_end":12972272,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972277,"byte_end":12972330,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972335,"byte_end":12972338,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972343,"byte_end":12972391,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972396,"byte_end":12972416,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972421,"byte_end":12972424,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972429,"byte_end":12972449,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972454,"byte_end":12972477,"line_start":107,"line_end":107,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972482,"byte_end":12972527,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972532,"byte_end":12972535,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972540,"byte_end":12972545,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972550,"byte_end":12972608,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972613,"byte_end":12972721,"line_start":112,"line_end":112,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972726,"byte_end":12972745,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972750,"byte_end":12972755,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972760,"byte_end":12972763,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972768,"byte_end":12972811,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972816,"byte_end":12972823,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972828,"byte_end":12972835,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12972840,"byte_end":12972849,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974078,"byte_end":12974089,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12973765,"byte_end":12973814,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12973819,"byte_end":12973888,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12973893,"byte_end":12973960,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12973965,"byte_end":12973968,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12973973,"byte_end":12974052,"line_start":153,"line_end":153,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974057,"byte_end":12974066,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975322,"byte_end":12975331,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974182,"byte_end":12974254,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974259,"byte_end":12974328,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974333,"byte_end":12974336,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974341,"byte_end":12974419,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974424,"byte_end":12974500,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974505,"byte_end":12974517,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974522,"byte_end":12974525,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974530,"byte_end":12974604,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974609,"byte_end":12974626,"line_start":167,"line_end":167,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974631,"byte_end":12974634,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974639,"byte_end":12974653,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974658,"byte_end":12974661,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974666,"byte_end":12974673,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974678,"byte_end":12974708,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974713,"byte_end":12974738,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974743,"byte_end":12974748,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974753,"byte_end":12974773,"line_start":175,"line_end":175,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974778,"byte_end":12974801,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974806,"byte_end":12974846,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974851,"byte_end":12974854,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974859,"byte_end":12974904,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974909,"byte_end":12974912,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974917,"byte_end":12974952,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12974957,"byte_end":12974999,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975004,"byte_end":12975049,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975054,"byte_end":12975061,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975066,"byte_end":12975069,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975074,"byte_end":12975100,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975105,"byte_end":12975150,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975155,"byte_end":12975158,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975163,"byte_end":12975175,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975180,"byte_end":12975206,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975211,"byte_end":12975286,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975291,"byte_end":12975298,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12975303,"byte_end":12975310,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4556},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978415,"byte_end":12978442,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12977948,"byte_end":12978030,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978031,"byte_end":12978043,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978044,"byte_end":12978047,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978048,"byte_end":12978128,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978129,"byte_end":12978208,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978209,"byte_end":12978264,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978265,"byte_end":12978268,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978269,"byte_end":12978330,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978331,"byte_end":12978403,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979938,"byte_end":12979941,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978885,"byte_end":12978960,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978965,"byte_end":12978974,"line_start":29,"line_end":29,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978979,"byte_end":12978982,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978987,"byte_end":12979061,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979066,"byte_end":12979097,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979102,"byte_end":12979105,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979110,"byte_end":12979169,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979174,"byte_end":12979249,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979254,"byte_end":12979310,"line_start":36,"line_end":36,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979315,"byte_end":12979318,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979323,"byte_end":12979337,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979342,"byte_end":12979345,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979350,"byte_end":12979357,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979362,"byte_end":12979385,"line_start":41,"line_end":41,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979390,"byte_end":12979443,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979448,"byte_end":12979451,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979456,"byte_end":12979504,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979509,"byte_end":12979529,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979534,"byte_end":12979537,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979542,"byte_end":12979562,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979567,"byte_end":12979590,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979595,"byte_end":12979640,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979645,"byte_end":12979648,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979653,"byte_end":12979658,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979663,"byte_end":12979700,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979705,"byte_end":12979797,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979802,"byte_end":12979822,"line_start":54,"line_end":54,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979827,"byte_end":12979832,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979837,"byte_end":12979840,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979845,"byte_end":12979888,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979893,"byte_end":12979900,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979905,"byte_end":12979912,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12979917,"byte_end":12979926,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4569},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981881,"byte_end":12981888,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980700,"byte_end":12980772,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980777,"byte_end":12980846,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980851,"byte_end":12980870,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980875,"byte_end":12980878,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980883,"byte_end":12980957,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980962,"byte_end":12980993,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12980998,"byte_end":12981001,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981006,"byte_end":12981057,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981062,"byte_end":12981148,"line_start":91,"line_end":91,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981153,"byte_end":12981217,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981222,"byte_end":12981225,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981230,"byte_end":12981244,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981249,"byte_end":12981252,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981257,"byte_end":12981264,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981269,"byte_end":12981292,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981297,"byte_end":12981350,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981355,"byte_end":12981358,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981363,"byte_end":12981411,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981416,"byte_end":12981436,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981441,"byte_end":12981444,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981449,"byte_end":12981469,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981474,"byte_end":12981497,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981502,"byte_end":12981547,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981552,"byte_end":12981555,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981560,"byte_end":12981565,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981570,"byte_end":12981628,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981633,"byte_end":12981741,"line_start":109,"line_end":109,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981746,"byte_end":12981765,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981770,"byte_end":12981775,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981780,"byte_end":12981783,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981788,"byte_end":12981831,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981836,"byte_end":12981843,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981848,"byte_end":12981855,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12981860,"byte_end":12981869,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4609},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984421,"byte_end":12984436,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984154,"byte_end":12984226,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984227,"byte_end":12984239,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984240,"byte_end":12984243,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984244,"byte_end":12984299,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984300,"byte_end":12984315,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984316,"byte_end":12984319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984320,"byte_end":12984366,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984367,"byte_end":12984409,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985894,"byte_end":12985897,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984719,"byte_end":12984788,"line_start":24,"line_end":24,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984793,"byte_end":12984796,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984801,"byte_end":12984874,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984879,"byte_end":12984899,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984904,"byte_end":12984907,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984912,"byte_end":12984963,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984968,"byte_end":12985038,"line_start":30,"line_end":30,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985043,"byte_end":12985107,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985112,"byte_end":12985115,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985120,"byte_end":12985192,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985197,"byte_end":12985223,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985228,"byte_end":12985231,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985236,"byte_end":12985345,"line_start":36,"line_end":36,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985350,"byte_end":12985413,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985418,"byte_end":12985421,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985426,"byte_end":12985440,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985445,"byte_end":12985448,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985453,"byte_end":12985460,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985465,"byte_end":12985512,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985517,"byte_end":12985520,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985525,"byte_end":12985573,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985578,"byte_end":12985598,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985603,"byte_end":12985606,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985611,"byte_end":12985631,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985636,"byte_end":12985659,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985664,"byte_end":12985699,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985704,"byte_end":12985707,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985712,"byte_end":12985746,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985751,"byte_end":12985805,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985810,"byte_end":12985813,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985818,"byte_end":12985844,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985849,"byte_end":12985856,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985861,"byte_end":12985868,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12985873,"byte_end":12985882,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987794,"byte_end":12987801,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986477,"byte_end":12986546,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986551,"byte_end":12986621,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986626,"byte_end":12986637,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986642,"byte_end":12986645,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986650,"byte_end":12986723,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986728,"byte_end":12986748,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986753,"byte_end":12986756,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986761,"byte_end":12986820,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986825,"byte_end":12986905,"line_start":86,"line_end":86,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986910,"byte_end":12986959,"line_start":87,"line_end":87,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986964,"byte_end":12986967,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12986972,"byte_end":12987048,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987053,"byte_end":12987079,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987084,"byte_end":12987087,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987092,"byte_end":12987209,"line_start":92,"line_end":92,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987214,"byte_end":12987277,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987282,"byte_end":12987285,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987290,"byte_end":12987304,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987309,"byte_end":12987312,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987317,"byte_end":12987324,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987329,"byte_end":12987376,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987381,"byte_end":12987384,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987389,"byte_end":12987437,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987442,"byte_end":12987462,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987467,"byte_end":12987470,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987475,"byte_end":12987495,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987500,"byte_end":12987523,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987528,"byte_end":12987563,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987568,"byte_end":12987571,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987576,"byte_end":12987610,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987615,"byte_end":12987705,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987710,"byte_end":12987713,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987718,"byte_end":12987744,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987749,"byte_end":12987756,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987761,"byte_end":12987768,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12987773,"byte_end":12987782,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4662},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989930,"byte_end":12989946,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989656,"byte_end":12989732,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989733,"byte_end":12989745,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989746,"byte_end":12989749,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989750,"byte_end":12989803,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989804,"byte_end":12989822,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989823,"byte_end":12989826,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989827,"byte_end":12989875,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12989876,"byte_end":12989918,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991588,"byte_end":12991591,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990270,"byte_end":12990348,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990353,"byte_end":12990356,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990361,"byte_end":12990435,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990440,"byte_end":12990460,"line_start":30,"line_end":30,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990465,"byte_end":12990468,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990473,"byte_end":12990532,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990537,"byte_end":12990610,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990615,"byte_end":12990668,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990673,"byte_end":12990676,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990681,"byte_end":12990754,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990759,"byte_end":12990785,"line_start":37,"line_end":37,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990790,"byte_end":12990793,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990798,"byte_end":12990872,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990877,"byte_end":12990988,"line_start":40,"line_end":40,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990993,"byte_end":12991056,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991061,"byte_end":12991064,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991069,"byte_end":12991083,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991088,"byte_end":12991091,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991096,"byte_end":12991103,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991108,"byte_end":12991156,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991161,"byte_end":12991164,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991169,"byte_end":12991217,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991222,"byte_end":12991242,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991247,"byte_end":12991250,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991255,"byte_end":12991275,"line_start":51,"line_end":51,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991280,"byte_end":12991303,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991308,"byte_end":12991343,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991348,"byte_end":12991351,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991356,"byte_end":12991361,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991366,"byte_end":12991447,"line_start":56,"line_end":56,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991452,"byte_end":12991472,"line_start":57,"line_end":57,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991477,"byte_end":12991482,"line_start":58,"line_end":58,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991487,"byte_end":12991490,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991495,"byte_end":12991538,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991543,"byte_end":12991550,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991555,"byte_end":12991562,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12991567,"byte_end":12991576,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993772,"byte_end":12993779,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992282,"byte_end":12992355,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992360,"byte_end":12992434,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992439,"byte_end":12992450,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992455,"byte_end":12992458,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992463,"byte_end":12992537,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992542,"byte_end":12992562,"line_start":90,"line_end":90,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992567,"byte_end":12992570,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992575,"byte_end":12992626,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992631,"byte_end":12992706,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992711,"byte_end":12992775,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992780,"byte_end":12992783,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992788,"byte_end":12992861,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992866,"byte_end":12992896,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992901,"byte_end":12992904,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992909,"byte_end":12992983,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12992988,"byte_end":12993107,"line_start":100,"line_end":100,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993112,"byte_end":12993175,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993180,"byte_end":12993183,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993188,"byte_end":12993202,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993207,"byte_end":12993210,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993215,"byte_end":12993222,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993227,"byte_end":12993275,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993280,"byte_end":12993283,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993288,"byte_end":12993336,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993341,"byte_end":12993361,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993366,"byte_end":12993369,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993374,"byte_end":12993394,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993399,"byte_end":12993422,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993427,"byte_end":12993462,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993467,"byte_end":12993470,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993475,"byte_end":12993480,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993485,"byte_end":12993524,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993529,"byte_end":12993632,"line_start":117,"line_end":117,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993637,"byte_end":12993656,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993661,"byte_end":12993666,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993671,"byte_end":12993674,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993679,"byte_end":12993722,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993727,"byte_end":12993734,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993739,"byte_end":12993746,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12993751,"byte_end":12993760,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994905,"byte_end":12994916,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994607,"byte_end":12994682,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994687,"byte_end":12994760,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994765,"byte_end":12994792,"line_start":154,"line_end":154,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994797,"byte_end":12994800,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994805,"byte_end":12994879,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12994884,"byte_end":12994893,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996195,"byte_end":12996204,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995020,"byte_end":12995092,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995097,"byte_end":12995166,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995171,"byte_end":12995174,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995179,"byte_end":12995257,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995262,"byte_end":12995338,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995343,"byte_end":12995355,"line_start":167,"line_end":167,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995360,"byte_end":12995363,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995368,"byte_end":12995442,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995447,"byte_end":12995464,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995469,"byte_end":12995472,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995477,"byte_end":12995491,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995496,"byte_end":12995499,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995504,"byte_end":12995511,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995516,"byte_end":12995546,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995551,"byte_end":12995576,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995581,"byte_end":12995586,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995591,"byte_end":12995611,"line_start":178,"line_end":178,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995616,"byte_end":12995639,"line_start":179,"line_end":179,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995644,"byte_end":12995684,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995689,"byte_end":12995692,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995697,"byte_end":12995728,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995733,"byte_end":12995736,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995741,"byte_end":12995776,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995781,"byte_end":12995823,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995828,"byte_end":12995867,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995872,"byte_end":12995879,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995884,"byte_end":12995887,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995892,"byte_end":12995918,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995923,"byte_end":12995968,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995973,"byte_end":12995976,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995981,"byte_end":12995993,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12995998,"byte_end":12996024,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996029,"byte_end":12996104,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996109,"byte_end":12996116,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996121,"byte_end":12996128,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996133,"byte_end":12996136,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12996141,"byte_end":12996183,"line_start":198,"line_end":198,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4716},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999087,"byte_end":12999109,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998651,"byte_end":12998727,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998728,"byte_end":12998740,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998741,"byte_end":12998744,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998745,"byte_end":12998820,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998821,"byte_end":12998895,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998896,"byte_end":12998951,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998952,"byte_end":12998955,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12998956,"byte_end":12999012,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999013,"byte_end":12999075,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000688,"byte_end":13000691,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999439,"byte_end":12999515,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999520,"byte_end":12999523,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999528,"byte_end":12999608,"line_start":28,"line_end":28,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999613,"byte_end":12999633,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999638,"byte_end":12999641,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999646,"byte_end":12999705,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999710,"byte_end":12999786,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999791,"byte_end":12999847,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999852,"byte_end":12999855,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999860,"byte_end":12999933,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999938,"byte_end":12999964,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999969,"byte_end":12999972,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999977,"byte_end":13000088,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000093,"byte_end":13000156,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000161,"byte_end":13000164,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000169,"byte_end":13000183,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000188,"byte_end":13000191,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000196,"byte_end":13000203,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000208,"byte_end":13000256,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000261,"byte_end":13000264,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000269,"byte_end":13000317,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000322,"byte_end":13000342,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000347,"byte_end":13000350,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000355,"byte_end":13000375,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000380,"byte_end":13000403,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000408,"byte_end":13000443,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000448,"byte_end":13000451,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000456,"byte_end":13000461,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000466,"byte_end":13000547,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000552,"byte_end":13000572,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000577,"byte_end":13000582,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000587,"byte_end":13000590,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000595,"byte_end":13000638,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000643,"byte_end":13000650,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000655,"byte_end":13000662,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13000667,"byte_end":13000676,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002805,"byte_end":13002812,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001383,"byte_end":13001455,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001460,"byte_end":13001534,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001539,"byte_end":13001550,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001555,"byte_end":13001558,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001563,"byte_end":13001643,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001648,"byte_end":13001668,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001673,"byte_end":13001676,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001681,"byte_end":13001732,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001737,"byte_end":13001813,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001818,"byte_end":13001887,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001892,"byte_end":13001895,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001900,"byte_end":13001973,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13001978,"byte_end":13002008,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002013,"byte_end":13002016,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002021,"byte_end":13002140,"line_start":98,"line_end":98,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002145,"byte_end":13002208,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002213,"byte_end":13002216,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002221,"byte_end":13002235,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002240,"byte_end":13002243,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002248,"byte_end":13002255,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002260,"byte_end":13002308,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002313,"byte_end":13002316,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002321,"byte_end":13002369,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002374,"byte_end":13002394,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002399,"byte_end":13002402,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002407,"byte_end":13002427,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002432,"byte_end":13002455,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002460,"byte_end":13002495,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002500,"byte_end":13002503,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002508,"byte_end":13002513,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002518,"byte_end":13002557,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002562,"byte_end":13002665,"line_start":115,"line_end":115,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002670,"byte_end":13002689,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002694,"byte_end":13002699,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002704,"byte_end":13002707,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002712,"byte_end":13002755,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002760,"byte_end":13002767,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002772,"byte_end":13002779,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13002784,"byte_end":13002793,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5414},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930355,"byte_end":12930361,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12927824,"byte_end":12927863,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12927864,"byte_end":12927867,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12927868,"byte_end":12927945,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12927946,"byte_end":12928025,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928026,"byte_end":12928105,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928106,"byte_end":12928164,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928165,"byte_end":12928168,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928169,"byte_end":12928247,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928248,"byte_end":12928326,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928327,"byte_end":12928405,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928406,"byte_end":12928471,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928472,"byte_end":12928475,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928476,"byte_end":12928540,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928541,"byte_end":12928613,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928614,"byte_end":12928694,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928695,"byte_end":12928775,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928776,"byte_end":12928856,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928857,"byte_end":12928926,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928927,"byte_end":12928997,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12928998,"byte_end":12929036,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929037,"byte_end":12929040,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929041,"byte_end":12929118,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929119,"byte_end":12929204,"line_start":52,"line_end":52,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929205,"byte_end":12929285,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929286,"byte_end":12929333,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929334,"byte_end":12929406,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929407,"byte_end":12929410,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929411,"byte_end":12929425,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929426,"byte_end":12929429,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929430,"byte_end":12929437,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929438,"byte_end":12929466,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929467,"byte_end":12929470,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929471,"byte_end":12929489,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929490,"byte_end":12929511,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929512,"byte_end":12929546,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929547,"byte_end":12929550,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929551,"byte_end":12929599,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929600,"byte_end":12929609,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929610,"byte_end":12929649,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929650,"byte_end":12929689,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929690,"byte_end":12929721,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929722,"byte_end":12929753,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929754,"byte_end":12929803,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929804,"byte_end":12929807,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929808,"byte_end":12929859,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929860,"byte_end":12929869,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929870,"byte_end":12929913,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929914,"byte_end":12929934,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929935,"byte_end":12929965,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12929966,"byte_end":12930005,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930006,"byte_end":12930011,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930012,"byte_end":12930019,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930020,"byte_end":12930023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930024,"byte_end":12930058,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930059,"byte_end":12930088,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930089,"byte_end":12930136,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930137,"byte_end":12930186,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930187,"byte_end":12930224,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12930225,"byte_end":12930326,"line_start":88,"line_end":88,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934485,"byte_end":12934488,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934255,"byte_end":12934318,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934323,"byte_end":12934326,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934331,"byte_end":12934345,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934350,"byte_end":12934353,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934358,"byte_end":12934365,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934370,"byte_end":12934398,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934403,"byte_end":12934406,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934411,"byte_end":12934441,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934446,"byte_end":12934453,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934458,"byte_end":12934473,"line_start":205,"line_end":205,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936443,"byte_end":12936459,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936038,"byte_end":12936100,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936105,"byte_end":12936164,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936169,"byte_end":12936172,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936177,"byte_end":12936191,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936196,"byte_end":12936199,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936204,"byte_end":12936211,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936216,"byte_end":12936244,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936249,"byte_end":12936252,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936257,"byte_end":12936306,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936311,"byte_end":12936318,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936323,"byte_end":12936326,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936331,"byte_end":12936343,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936348,"byte_end":12936351,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936356,"byte_end":12936411,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12936416,"byte_end":12936431,"line_start":271,"line_end":271,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941416,"byte_end":12941420,"line_start":425,"line_end":425,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12939727,"byte_end":12939800,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12939805,"byte_end":12939851,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12939856,"byte_end":12939859,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12939864,"byte_end":12939937,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12939942,"byte_end":12940017,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940022,"byte_end":12940025,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940030,"byte_end":12940103,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940108,"byte_end":12940177,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940182,"byte_end":12940256,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940261,"byte_end":12940334,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940339,"byte_end":12940363,"line_start":390,"line_end":390,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940368,"byte_end":12940371,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940376,"byte_end":12940450,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940455,"byte_end":12940472,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940477,"byte_end":12940480,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940485,"byte_end":12940504,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940509,"byte_end":12940512,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940517,"byte_end":12940590,"line_start":397,"line_end":397,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read` makes you lose your place in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940595,"byte_end":12940671,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940676,"byte_end":12940690,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940695,"byte_end":12940698,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940703,"byte_end":12940717,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940722,"byte_end":12940725,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940730,"byte_end":12940737,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940742,"byte_end":12940765,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940770,"byte_end":12940798,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940803,"byte_end":12940806,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940811,"byte_end":12940829,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940834,"byte_end":12940855,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940860,"byte_end":12940904,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940909,"byte_end":12940943,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940948,"byte_end":12940951,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940956,"byte_end":12940990,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12940995,"byte_end":12941021,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941026,"byte_end":12941029,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941034,"byte_end":12941067,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941072,"byte_end":12941142,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941147,"byte_end":12941187,"line_start":417,"line_end":417,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941192,"byte_end":12941222,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941227,"byte_end":12941284,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941289,"byte_end":12941292,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941297,"byte_end":12941355,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941360,"byte_end":12941376,"line_start":422,"line_end":422,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941381,"byte_end":12941386,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12941391,"byte_end":12941398,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944395,"byte_end":12944408,"line_start":510,"line_end":510,"column_start":12,"column_end":25},"name":"blocking_read","qualname":"<RwLock<T>>::blocking_read","value":"pub fn blocking_read(&Self) -> RwLockReadGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with shared read access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942603,"byte_end":12942662,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942667,"byte_end":12942670,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942675,"byte_end":12942726,"line_start":464,"line_end":464,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942731,"byte_end":12942811,"line_start":465,"line_end":465,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942816,"byte_end":12942819,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this `RwLock` when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942824,"byte_end":12942912,"line_start":467,"line_end":467,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942917,"byte_end":12942920,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942925,"byte_end":12942937,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942942,"byte_end":12942945,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12942950,"byte_end":12943026,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943031,"byte_end":12943034,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943039,"byte_end":12943116,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943121,"byte_end":12943192,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943197,"byte_end":12943268,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943273,"byte_end":12943341,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943346,"byte_end":12943409,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943414,"byte_end":12943417,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943422,"byte_end":12943436,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943441,"byte_end":12943444,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943449,"byte_end":12943456,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943461,"byte_end":12943484,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943489,"byte_end":12943517,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943522,"byte_end":12943525,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943530,"byte_end":12943548,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943553,"byte_end":12943574,"line_start":486,"line_end":486,"column_start":5,"column_end":26}},{"value":"/     let rwlock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943579,"byte_end":12943625,"line_start":487,"line_end":487,"column_start":5,"column_end":51}},{"value":"/     let mut write_lock = rwlock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943630,"byte_end":12943680,"line_start":488,"line_end":488,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943685,"byte_end":12943688,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943693,"byte_end":12943750,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943755,"byte_end":12943800,"line_start":491,"line_end":491,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943805,"byte_end":12943826,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `write_lock` is released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943831,"byte_end":12943902,"line_start":493,"line_end":493,"column_start":5,"column_end":76}},{"value":"/             let read_lock = rwlock.blocking_read();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943907,"byte_end":12943962,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/             assert_eq!(*read_lock, 0);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12943967,"byte_end":12944009,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944014,"byte_end":12944027,"line_start":496,"line_end":496,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944032,"byte_end":12944043,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944048,"byte_end":12944051,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     *write_lock -= 1;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944056,"byte_end":12944081,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/     drop(write_lock); // release the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944086,"byte_end":12944132,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944137,"byte_end":12944140,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944145,"byte_end":12944198,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944203,"byte_end":12944240,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944245,"byte_end":12944248,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944253,"byte_end":12944283,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/     assert!(rwlock.try_write().is_ok());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944288,"byte_end":12944332,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944337,"byte_end":12944342,"line_start":507,"line_end":507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944347,"byte_end":12944354,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944359,"byte_end":12944383,"line_start":509,"line_end":509,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946577,"byte_end":12946587,"line_start":565,"line_end":565,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944500,"byte_end":12944573,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944578,"byte_end":12944624,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944629,"byte_end":12944632,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944637,"byte_end":12944710,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944715,"byte_end":12944790,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944795,"byte_end":12944798,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944803,"byte_end":12944877,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944882,"byte_end":12944956,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12944961,"byte_end":12945033,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945038,"byte_end":12945113,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945118,"byte_end":12945161,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945166,"byte_end":12945169,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945174,"byte_end":12945247,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945252,"byte_end":12945321,"line_start":527,"line_end":527,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945326,"byte_end":12945400,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945405,"byte_end":12945478,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945483,"byte_end":12945507,"line_start":530,"line_end":530,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945512,"byte_end":12945515,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945520,"byte_end":12945594,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945599,"byte_end":12945616,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945621,"byte_end":12945624,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945629,"byte_end":12945648,"line_start":535,"line_end":535,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945653,"byte_end":12945656,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945661,"byte_end":12945734,"line_start":537,"line_end":537,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read_owned` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945739,"byte_end":12945812,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945817,"byte_end":12945840,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945845,"byte_end":12945848,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945853,"byte_end":12945867,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945872,"byte_end":12945875,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945880,"byte_end":12945887,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945892,"byte_end":12945915,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945920,"byte_end":12945948,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945953,"byte_end":12945956,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945961,"byte_end":12945979,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12945984,"byte_end":12946005,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946010,"byte_end":12946054,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946059,"byte_end":12946093,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946098,"byte_end":12946101,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946106,"byte_end":12946146,"line_start":552,"line_end":552,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946151,"byte_end":12946177,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946182,"byte_end":12946185,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946190,"byte_end":12946223,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946228,"byte_end":12946298,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946303,"byte_end":12946349,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946354,"byte_end":12946384,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946389,"byte_end":12946446,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946451,"byte_end":12946454,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946459,"byte_end":12946517,"line_start":561,"line_end":561,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946522,"byte_end":12946538,"line_start":562,"line_end":562,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946543,"byte_end":12946547,"line_start":563,"line_end":563,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12946552,"byte_end":12946559,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948904,"byte_end":12948912,"line_start":637,"line_end":637,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12947885,"byte_end":12947947,"line_start":605,"line_end":605,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12947952,"byte_end":12947955,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12947960,"byte_end":12948037,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948042,"byte_end":12948113,"line_start":608,"line_end":608,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948118,"byte_end":12948135,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948140,"byte_end":12948143,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948148,"byte_end":12948182,"line_start":611,"line_end":611,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948187,"byte_end":12948190,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948195,"byte_end":12948209,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948214,"byte_end":12948217,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948222,"byte_end":12948229,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948234,"byte_end":12948257,"line_start":616,"line_end":616,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948262,"byte_end":12948290,"line_start":617,"line_end":617,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948295,"byte_end":12948298,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948303,"byte_end":12948321,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948326,"byte_end":12948347,"line_start":620,"line_end":620,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948352,"byte_end":12948396,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948401,"byte_end":12948435,"line_start":622,"line_end":622,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948440,"byte_end":12948443,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948448,"byte_end":12948489,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948494,"byte_end":12948520,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948525,"byte_end":12948528,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948533,"byte_end":12948566,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948571,"byte_end":12948641,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948646,"byte_end":12948686,"line_start":629,"line_end":629,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948691,"byte_end":12948721,"line_start":630,"line_end":630,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948726,"byte_end":12948783,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948788,"byte_end":12948791,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948796,"byte_end":12948849,"line_start":633,"line_end":633,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948854,"byte_end":12948870,"line_start":634,"line_end":634,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948875,"byte_end":12948880,"line_start":635,"line_end":635,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12948885,"byte_end":12948892,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951142,"byte_end":12951156,"line_start":700,"line_end":700,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949736,"byte_end":12949798,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949803,"byte_end":12949806,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949811,"byte_end":12949888,"line_start":664,"line_end":664,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949893,"byte_end":12949964,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949969,"byte_end":12949986,"line_start":666,"line_end":666,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949991,"byte_end":12949994,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12949999,"byte_end":12950068,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950073,"byte_end":12950146,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950151,"byte_end":12950223,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950228,"byte_end":12950301,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950306,"byte_end":12950361,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950366,"byte_end":12950369,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950374,"byte_end":12950408,"line_start":674,"line_end":674,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950413,"byte_end":12950416,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950421,"byte_end":12950435,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950440,"byte_end":12950443,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950448,"byte_end":12950455,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950460,"byte_end":12950483,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950488,"byte_end":12950516,"line_start":680,"line_end":680,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950521,"byte_end":12950524,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950529,"byte_end":12950547,"line_start":682,"line_end":682,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950552,"byte_end":12950573,"line_start":683,"line_end":683,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950578,"byte_end":12950622,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950627,"byte_end":12950661,"line_start":685,"line_end":685,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950666,"byte_end":12950669,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950674,"byte_end":12950721,"line_start":687,"line_end":687,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950726,"byte_end":12950752,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950757,"byte_end":12950760,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950765,"byte_end":12950798,"line_start":690,"line_end":690,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950803,"byte_end":12950873,"line_start":691,"line_end":691,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950878,"byte_end":12950924,"line_start":692,"line_end":692,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950929,"byte_end":12950959,"line_start":693,"line_end":693,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12950964,"byte_end":12951021,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951026,"byte_end":12951029,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951034,"byte_end":12951087,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951092,"byte_end":12951108,"line_start":697,"line_end":697,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951113,"byte_end":12951118,"line_start":698,"line_end":698,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12951123,"byte_end":12951130,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952945,"byte_end":12952950,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952089,"byte_end":12952161,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952166,"byte_end":12952217,"line_start":729,"line_end":729,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952222,"byte_end":12952225,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952230,"byte_end":12952302,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952307,"byte_end":12952335,"line_start":732,"line_end":732,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952340,"byte_end":12952343,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952348,"byte_end":12952423,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952428,"byte_end":12952445,"line_start":735,"line_end":735,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952450,"byte_end":12952453,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952458,"byte_end":12952477,"line_start":737,"line_end":737,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952482,"byte_end":12952485,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952490,"byte_end":12952563,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write` makes you lose your place","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952568,"byte_end":12952642,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952647,"byte_end":12952664,"line_start":741,"line_end":741,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952669,"byte_end":12952672,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952677,"byte_end":12952691,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952696,"byte_end":12952699,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952704,"byte_end":12952711,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952716,"byte_end":12952744,"line_start":746,"line_end":746,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952749,"byte_end":12952752,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952757,"byte_end":12952775,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952780,"byte_end":12952801,"line_start":749,"line_end":749,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952806,"byte_end":12952838,"line_start":750,"line_end":750,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952843,"byte_end":12952846,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952851,"byte_end":12952888,"line_start":752,"line_end":752,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952893,"byte_end":12952906,"line_start":753,"line_end":753,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952911,"byte_end":12952915,"line_start":754,"line_end":754,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12952920,"byte_end":12952927,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956066,"byte_end":12956080,"line_start":844,"line_end":844,"column_start":12,"column_end":26},"name":"blocking_write","qualname":"<RwLock<T>>::blocking_write","value":"pub fn blocking_write(&Self) -> RwLockWriteGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with exclusive write access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954189,"byte_end":12954252,"line_start":794,"line_end":794,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954257,"byte_end":12954260,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954265,"byte_end":12954316,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954321,"byte_end":12954401,"line_start":797,"line_end":797,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954406,"byte_end":12954409,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock` when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954414,"byte_end":12954503,"line_start":799,"line_end":799,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954508,"byte_end":12954511,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954516,"byte_end":12954528,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954533,"byte_end":12954536,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954541,"byte_end":12954617,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954622,"byte_end":12954625,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954630,"byte_end":12954707,"line_start":805,"line_end":805,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954712,"byte_end":12954783,"line_start":806,"line_end":806,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954788,"byte_end":12954859,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954864,"byte_end":12954932,"line_start":808,"line_end":808,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12954937,"byte_end":12955000,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955005,"byte_end":12955008,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955013,"byte_end":12955027,"line_start":811,"line_end":811,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955032,"byte_end":12955035,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955040,"byte_end":12955047,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955052,"byte_end":12955075,"line_start":814,"line_end":814,"column_start":5,"column_end":28}},{"value":"/ use tokio::{sync::RwLock};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955080,"byte_end":12955110,"line_start":815,"line_end":815,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955115,"byte_end":12955118,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955123,"byte_end":12955141,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955146,"byte_end":12955167,"line_start":818,"line_end":818,"column_start":5,"column_end":26}},{"value":"/     let rwlock =  Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955172,"byte_end":12955219,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/     let read_lock = rwlock.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955224,"byte_end":12955268,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955273,"byte_end":12955276,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955281,"byte_end":12955338,"line_start":822,"line_end":822,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955343,"byte_end":12955388,"line_start":823,"line_end":823,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955393,"byte_end":12955414,"line_start":824,"line_end":824,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `read_lock` is released.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955419,"byte_end":12955489,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/             let mut write_lock = rwlock.blocking_write();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955494,"byte_end":12955555,"line_start":826,"line_end":826,"column_start":5,"column_end":66}},{"value":"/             *write_lock = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955560,"byte_end":12955592,"line_start":827,"line_end":827,"column_start":5,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955597,"byte_end":12955610,"line_start":828,"line_end":828,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955615,"byte_end":12955626,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955631,"byte_end":12955634,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*read_lock, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955639,"byte_end":12955673,"line_start":831,"line_end":831,"column_start":5,"column_end":39}},{"value":"/     // Release the last outstanding read lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955678,"byte_end":12955728,"line_start":832,"line_end":832,"column_start":5,"column_end":55}},{"value":"/     drop(read_lock);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955733,"byte_end":12955757,"line_start":833,"line_end":833,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955762,"byte_end":12955765,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955770,"byte_end":12955823,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955828,"byte_end":12955865,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955870,"byte_end":12955873,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955878,"byte_end":12955908,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     let read_lock = rwlock.try_read().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955913,"byte_end":12955964,"line_start":839,"line_end":839,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*read_lock, 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12955969,"byte_end":12956003,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956008,"byte_end":12956013,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956018,"byte_end":12956025,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956030,"byte_end":12956054,"line_start":843,"line_end":843,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957452,"byte_end":12957463,"line_start":883,"line_end":883,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956174,"byte_end":12956246,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956251,"byte_end":12956302,"line_start":849,"line_end":849,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956307,"byte_end":12956310,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956315,"byte_end":12956387,"line_start":851,"line_end":851,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956392,"byte_end":12956420,"line_start":852,"line_end":852,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956425,"byte_end":12956428,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956433,"byte_end":12956508,"line_start":854,"line_end":854,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956513,"byte_end":12956587,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956592,"byte_end":12956664,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956669,"byte_end":12956744,"line_start":857,"line_end":857,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956749,"byte_end":12956792,"line_start":858,"line_end":858,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956797,"byte_end":12956800,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956805,"byte_end":12956880,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956885,"byte_end":12956902,"line_start":861,"line_end":861,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956907,"byte_end":12956910,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956915,"byte_end":12956934,"line_start":863,"line_end":863,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956939,"byte_end":12956942,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12956947,"byte_end":12957020,"line_start":865,"line_end":865,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write_owned` makes you lose your","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957025,"byte_end":12957099,"line_start":866,"line_end":866,"column_start":5,"column_end":79}},{"value":"/ place in the queue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957104,"byte_end":12957127,"line_start":867,"line_end":867,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957132,"byte_end":12957135,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957140,"byte_end":12957154,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957159,"byte_end":12957162,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957167,"byte_end":12957174,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957179,"byte_end":12957202,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957207,"byte_end":12957235,"line_start":873,"line_end":873,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957240,"byte_end":12957243,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957248,"byte_end":12957266,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957271,"byte_end":12957292,"line_start":876,"line_end":876,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957297,"byte_end":12957339,"line_start":877,"line_end":877,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957344,"byte_end":12957347,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957352,"byte_end":12957395,"line_start":879,"line_end":879,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957400,"byte_end":12957413,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957418,"byte_end":12957422,"line_start":881,"line_end":881,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12957427,"byte_end":12957434,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959457,"byte_end":12959466,"line_start":947,"line_end":947,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12958817,"byte_end":12958883,"line_start":924,"line_end":924,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12958888,"byte_end":12958891,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12958896,"byte_end":12958973,"line_start":926,"line_end":926,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12958978,"byte_end":12959050,"line_start":927,"line_end":927,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959055,"byte_end":12959072,"line_start":928,"line_end":928,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959077,"byte_end":12959080,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959085,"byte_end":12959119,"line_start":930,"line_end":930,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959124,"byte_end":12959127,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959132,"byte_end":12959146,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959151,"byte_end":12959154,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959159,"byte_end":12959166,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959171,"byte_end":12959199,"line_start":935,"line_end":935,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959204,"byte_end":12959207,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959212,"byte_end":12959230,"line_start":937,"line_end":937,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959235,"byte_end":12959256,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959261,"byte_end":12959293,"line_start":939,"line_end":939,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959298,"byte_end":12959301,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959306,"byte_end":12959338,"line_start":941,"line_end":941,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959343,"byte_end":12959369,"line_start":942,"line_end":942,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959374,"byte_end":12959377,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959382,"byte_end":12959423,"line_start":944,"line_end":944,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959428,"byte_end":12959433,"line_start":945,"line_end":945,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12959438,"byte_end":12959445,"line_start":946,"line_end":946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961418,"byte_end":12961433,"line_start":1003,"line_end":1003,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960339,"byte_end":12960405,"line_start":973,"line_end":973,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960410,"byte_end":12960413,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960418,"byte_end":12960495,"line_start":975,"line_end":975,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960500,"byte_end":12960572,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960577,"byte_end":12960594,"line_start":977,"line_end":977,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960599,"byte_end":12960602,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960607,"byte_end":12960677,"line_start":979,"line_end":979,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960682,"byte_end":12960755,"line_start":980,"line_end":980,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960760,"byte_end":12960832,"line_start":981,"line_end":981,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960837,"byte_end":12960910,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960915,"byte_end":12960970,"line_start":983,"line_end":983,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960975,"byte_end":12960978,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12960983,"byte_end":12961017,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961022,"byte_end":12961025,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961030,"byte_end":12961044,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961049,"byte_end":12961052,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961057,"byte_end":12961064,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961069,"byte_end":12961092,"line_start":990,"line_end":990,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961097,"byte_end":12961125,"line_start":991,"line_end":991,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961130,"byte_end":12961133,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961138,"byte_end":12961156,"line_start":993,"line_end":993,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961161,"byte_end":12961182,"line_start":994,"line_end":994,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961187,"byte_end":12961229,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961234,"byte_end":12961237,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961242,"byte_end":12961293,"line_start":997,"line_end":997,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961298,"byte_end":12961324,"line_start":998,"line_end":998,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961329,"byte_end":12961332,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961337,"byte_end":12961384,"line_start":1000,"line_end":1000,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961389,"byte_end":12961394,"line_start":1001,"line_end":1001,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12961399,"byte_end":12961406,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962887,"byte_end":12962894,"line_start":1049,"line_end":1049,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962415,"byte_end":12962470,"line_start":1032,"line_end":1032,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962475,"byte_end":12962478,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962483,"byte_end":12962559,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962564,"byte_end":12962638,"line_start":1035,"line_end":1035,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962643,"byte_end":12962646,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962651,"byte_end":12962665,"line_start":1037,"line_end":1037,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962670,"byte_end":12962673,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962678,"byte_end":12962685,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962690,"byte_end":12962718,"line_start":1040,"line_end":1040,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962723,"byte_end":12962726,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962731,"byte_end":12962746,"line_start":1042,"line_end":1042,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962751,"byte_end":12962789,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962794,"byte_end":12962797,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962802,"byte_end":12962833,"line_start":1045,"line_end":1045,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962838,"byte_end":12962853,"line_start":1046,"line_end":1046,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962858,"byte_end":12962863,"line_start":1047,"line_end":1047,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12962868,"byte_end":12962875,"line_start":1048,"line_end":1048,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963128,"byte_end":12963138,"line_start":1057,"line_end":1057,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963063,"byte_end":12963116,"line_start":1056,"line_end":1056,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4983},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022641,"byte_end":13022649,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987}],"decl_id":null,"docs":" A thread-safe cell that can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell that can be written to only once.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021554,"byte_end":13021610,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021611,"byte_end":13021614,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `OnceCell` is typically used for global variables that need to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021615,"byte_end":13021686,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ initialized once on first use, but need no further changes. The `OnceCell`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021687,"byte_end":13021765,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ in Tokio allows the initialization procedure to be asynchronous.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021766,"byte_end":13021834,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021835,"byte_end":13021838,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021839,"byte_end":13021853,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021854,"byte_end":13021857,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021858,"byte_end":13021865,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021866,"byte_end":13021896,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021897,"byte_end":13021900,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021901,"byte_end":13021941,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021942,"byte_end":13021955,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021956,"byte_end":13021961,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021962,"byte_end":13021965,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13021966,"byte_end":13022021,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022022,"byte_end":13022025,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022026,"byte_end":13022044,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022045,"byte_end":13022066,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     let result = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022067,"byte_end":13022129,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022130,"byte_end":13022161,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022162,"byte_end":13022167,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022168,"byte_end":13022175,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022176,"byte_end":13022179,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It is often useful to write a wrapper method for accessing the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022180,"byte_end":13022253,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022254,"byte_end":13022257,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022258,"byte_end":13022265,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022266,"byte_end":13022296,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022297,"byte_end":13022300,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022301,"byte_end":13022356,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022357,"byte_end":13022360,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ async fn get_global_integer() -> &'static u32 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022361,"byte_end":13022412,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     ONCE.get_or_init(|| async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022413,"byte_end":13022448,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/         1 + 1","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022449,"byte_end":13022466,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     }).await","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022467,"byte_end":13022483,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022484,"byte_end":13022489,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022490,"byte_end":13022493,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022494,"byte_end":13022512,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022513,"byte_end":13022534,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     let result = get_global_integer().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022535,"byte_end":13022583,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022584,"byte_end":13022615,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022616,"byte_end":13022621,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022622,"byte_end":13022629,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5011},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024023,"byte_end":13024026,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `OnceCell` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `OnceCell` instance.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023967,"byte_end":13024011,"line_start":128,"line_end":128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024453,"byte_end":13024461,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `OnceCell` that contains the provided value, if any.","sig":null,"attributes":[{"value":"/ Creates a new `OnceCell` that contains the provided value, if any.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024227,"byte_end":13024297,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024302,"byte_end":13024305,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the `Option` is `None`, this is equivalent to `OnceCell::new`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024310,"byte_end":13024379,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024384,"byte_end":13024387,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13024392,"byte_end":13024441,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13025703,"byte_end":13025714,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `OnceCell` currently contains a value, and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `OnceCell` currently contains a value, and `false`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13025596,"byte_end":13025672,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ otherwise.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13025677,"byte_end":13025691,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027127,"byte_end":13027130,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value currently stored in the `OnceCell`, or\n `None` if the `OnceCell` is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value currently stored in the `OnceCell`, or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13026997,"byte_end":13027072,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ `None` if the `OnceCell` is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027077,"byte_end":13027115,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5022},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027634,"byte_end":13027641,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value currently stored in the\n `OnceCell`, or `None` if the `OnceCell` is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value currently stored in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027291,"byte_end":13027359,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ `OnceCell`, or `None` if the `OnceCell` is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027364,"byte_end":13027417,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027422,"byte_end":13027425,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `OnceCell` mutably, it is safe to mutate the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027430,"byte_end":13027506,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ value inside the `OnceCell` — the mutable borrow statically guarantees","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027511,"byte_end":13027587,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ no other references exist.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027592,"byte_end":13027622,"line_start":239,"line_end":239,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5023},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028403,"byte_end":13028406,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `OnceCell` to the given value if the `OnceCell` is\n empty.","sig":null,"attributes":[{"value":"/ Sets the value of the `OnceCell` to the given value if the `OnceCell` is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027818,"byte_end":13027894,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027899,"byte_end":13027909,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027914,"byte_end":13027917,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` already has a value, this call will fail with an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027922,"byte_end":13027992,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ [`SetError::AlreadyInitializedError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13027997,"byte_end":13028039,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028044,"byte_end":13028047,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` is empty, but some other task is currently trying to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028052,"byte_end":13028126,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ set the value, this call will fail with [`SetError::InitializingError`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028131,"byte_end":13028207,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028212,"byte_end":13028215,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028220,"byte_end":13028309,"line_start":257,"line_end":257,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13028314,"byte_end":13028391,"line_start":258,"line_end":258,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5024},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13030147,"byte_end":13030158,"line_start":299,"line_end":299,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029464,"byte_end":13029537,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029542,"byte_end":13029575,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029580,"byte_end":13029583,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029588,"byte_end":13029663,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029668,"byte_end":13029744,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029749,"byte_end":13029782,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029787,"byte_end":13029790,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the provided operation is cancelled or panics, the initialization","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029795,"byte_end":13029867,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ attempt is cancelled. If there are other tasks waiting for the value to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029872,"byte_end":13029947,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ be initialized, one of them will start another attempt at initializing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13029952,"byte_end":13030026,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13030031,"byte_end":13030045,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13030050,"byte_end":13030053,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13030058,"byte_end":13030129,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5029},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13032139,"byte_end":13032154,"line_start":347,"line_end":347,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031438,"byte_end":13031511,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031516,"byte_end":13031549,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031554,"byte_end":13031557,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031562,"byte_end":13031637,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031642,"byte_end":13031718,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031723,"byte_end":13031756,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031761,"byte_end":13031764,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the provided operation returns an error, is cancelled or panics, the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031769,"byte_end":13031844,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ initialization attempt is cancelled. If there are other tasks waiting","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031849,"byte_end":13031922,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ for the value to be initialized, one of them will start another attempt","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13031927,"byte_end":13032002,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ at initializing the value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13032007,"byte_end":13032037,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13032042,"byte_end":13032045,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13032050,"byte_end":13032121,"line_start":346,"line_end":346,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13033718,"byte_end":13033728,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value from the cell, destroying the cell in the process.\n Returns `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes the value from the cell, destroying the cell in the process.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13033591,"byte_end":13033661,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13033666,"byte_end":13033706,"line_start":386,"line_end":386,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034182,"byte_end":13034186,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell empty.  Returns\n `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell empty.  Returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034059,"byte_end":13034133,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ `None` if the cell is empty.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034138,"byte_end":13034170,"line_start":398,"line_end":398,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5424},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035191,"byte_end":13035214,"line_start":424,"line_end":424,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":5422},"children":[],"decl_id":null,"docs":" The cell was already initialized when [`OnceCell::set`] was called.","sig":null,"attributes":[{"value":"/ The cell was already initialized when [`OnceCell::set`] was called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035053,"byte_end":13035124,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035129,"byte_end":13035132,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035137,"byte_end":13035186,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5427},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035273,"byte_end":13035290,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":5422},"children":[],"decl_id":null,"docs":" The cell is currently being initialized.\n","sig":null,"attributes":[{"value":"/ The cell is currently being initialized.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035224,"byte_end":13035268,"line_start":426,"line_end":426,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5422},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035035,"byte_end":13035043,"line_start":420,"line_end":420,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> { AlreadyInitializedError(T), InitializingError(T), }","parent":null,"children":[{"krate":0,"index":5424},{"krate":0,"index":5427}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`].","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034888,"byte_end":13034943,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034944,"byte_end":13034947,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034948,"byte_end":13034997,"line_start":418,"line_end":418,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5049},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035754,"byte_end":13035773,"line_start":443,"line_end":443,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035680,"byte_end":13035742,"line_start":442,"line_end":442,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13036011,"byte_end":13036030,"line_start":451,"line_end":451,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035944,"byte_end":13035999,"line_start":450,"line_end":450,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":5058},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5059},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5439},{"krate":0,"index":5443},{"krate":0,"index":5446},{"krate":0,"index":5449},{"krate":0,"index":5452},{"krate":0,"index":5456},{"krate":0,"index":5460},{"krate":0,"index":5467},{"krate":0,"index":5084},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5121},{"krate":0,"index":5123},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5140},{"krate":0,"index":5151},{"krate":0,"index":5154}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":25810,"byte_end":25834,"line_start":289,"line_end":289,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036271,"byte_end":13036350,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036351,"byte_end":13036361,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036362,"byte_end":13036365,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036366,"byte_end":13036442,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036443,"byte_end":13036517,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036518,"byte_end":13036521,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036522,"byte_end":13036533,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036534,"byte_end":13036537,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036538,"byte_end":13036618,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036619,"byte_end":13036695,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036696,"byte_end":13036766,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036767,"byte_end":13036843,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036844,"byte_end":13036885,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036886,"byte_end":13036889,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036890,"byte_end":13036904,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036905,"byte_end":13036908,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036909,"byte_end":13036916,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036917,"byte_end":13036944,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036945,"byte_end":13036948,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13036949,"byte_end":13037013,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037014,"byte_end":13037065,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037066,"byte_end":13037069,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037070,"byte_end":13037103,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037104,"byte_end":13037150,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037151,"byte_end":13037209,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037210,"byte_end":13037223,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037224,"byte_end":13037235,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037236,"byte_end":13037239,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037240,"byte_end":13037266,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037267,"byte_end":13037279,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037280,"byte_end":13037287,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037288,"byte_end":13037295,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037296,"byte_end":13037299,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037300,"byte_end":13037313,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037314,"byte_end":13037317,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037318,"byte_end":13037395,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037396,"byte_end":13037474,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037475,"byte_end":13037555,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037556,"byte_end":13037559,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037560,"byte_end":13037579,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037580,"byte_end":13037583,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037584,"byte_end":13037664,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037665,"byte_end":13037744,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037745,"byte_end":13037817,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037818,"byte_end":13037821,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037822,"byte_end":13037864,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037865,"byte_end":13037911,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037912,"byte_end":13037978,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13037979,"byte_end":13038043,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038044,"byte_end":13038088,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038089,"byte_end":13038153,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038154,"byte_end":13038212,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5439},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038788,"byte_end":13038796,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5441},{"krate":0,"index":5442}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038426,"byte_end":13038492,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038493,"byte_end":13038496,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038497,"byte_end":13038563,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038564,"byte_end":13038567,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038568,"byte_end":13038642,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038643,"byte_end":13038655,"line_start":69,"line_end":69,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038656,"byte_end":13038659,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038660,"byte_end":13038759,"line_start":71,"line_end":71,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":5446},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039087,"byte_end":13039093,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5448}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038922,"byte_end":13038987,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038988,"byte_end":13038991,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13038992,"byte_end":13039058,"line_start":83,"line_end":83,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5452},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040088,"byte_end":13040091,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":5455}],"decl_id":null,"docs":" Returns a reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039130,"byte_end":13039173,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039174,"byte_end":13039177,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039178,"byte_end":13039254,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039255,"byte_end":13039334,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039335,"byte_end":13039385,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039386,"byte_end":13039389,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039390,"byte_end":13039461,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039462,"byte_end":13039541,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039542,"byte_end":13039622,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039623,"byte_end":13039697,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039698,"byte_end":13039701,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039702,"byte_end":13039760,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039761,"byte_end":13039764,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039765,"byte_end":13039776,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039777,"byte_end":13039834,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039835,"byte_end":13039867,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/                            |  // will block","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039868,"byte_end":13039915,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039916,"byte_end":13039970,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/ // may deadlock            |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13039971,"byte_end":13040003,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040004,"byte_end":13040036,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040037,"byte_end":13040044,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ </details>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040045,"byte_end":13040059,"line_start":110,"line_end":110,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":5084},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040670,"byte_end":13040675,"line_start":137,"line_end":137,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5470},{"krate":0,"index":5474},{"krate":0,"index":5088},{"krate":0,"index":5091},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5093},{"krate":0,"index":5095}],"decl_id":null,"docs":" Watch error types.\n","sig":null,"attributes":[{"value":"/ Watch error types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040682,"byte_end":13040704,"line_start":138,"line_end":138,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5470},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040812,"byte_end":13040821,"line_start":144,"line_end":144,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040729,"byte_end":13040775,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5473},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040825,"byte_end":13040830,"line_start":144,"line_end":144,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::watch::error::SendError::0","value":"T","parent":{"krate":0,"index":5470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5477},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041213,"byte_end":13041222,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041120,"byte_end":13041176,"line_start":156,"line_end":156,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":5121},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044275,"byte_end":13044282,"line_start":265,"line_end":265,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043512,"byte_end":13043588,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043589,"byte_end":13043592,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043593,"byte_end":13043675,"line_start":240,"line_end":240,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043676,"byte_end":13043752,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043753,"byte_end":13043789,"line_start":242,"line_end":242,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043790,"byte_end":13043793,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043794,"byte_end":13043808,"line_start":244,"line_end":244,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043809,"byte_end":13043812,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043813,"byte_end":13043820,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043821,"byte_end":13043848,"line_start":247,"line_end":247,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043849,"byte_end":13043852,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043853,"byte_end":13043917,"line_start":249,"line_end":249,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043918,"byte_end":13043969,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043970,"byte_end":13043973,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13043974,"byte_end":13044007,"line_start":252,"line_end":252,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044008,"byte_end":13044054,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044055,"byte_end":13044113,"line_start":254,"line_end":254,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044114,"byte_end":13044127,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044128,"byte_end":13044139,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044140,"byte_end":13044143,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044144,"byte_end":13044170,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044171,"byte_end":13044183,"line_start":259,"line_end":259,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044184,"byte_end":13044191,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044192,"byte_end":13044199,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044200,"byte_end":13044203,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044204,"byte_end":13044233,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044234,"byte_end":13044267,"line_start":264,"line_end":264,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046466,"byte_end":13046472,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045009,"byte_end":13045065,"line_start":295,"line_end":295,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045070,"byte_end":13045073,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This method does not mark the returned value as seen, so future calls to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045078,"byte_end":13045154,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ [`changed`] may return immediately even if you have already seen the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045159,"byte_end":13045231,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ value with a call to `borrow`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045236,"byte_end":13045270,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045275,"byte_end":13045278,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045283,"byte_end":13045359,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045364,"byte_end":13045440,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045445,"byte_end":13045476,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045481,"byte_end":13045484,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045489,"byte_end":13045560,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045565,"byte_end":13045644,"line_start":306,"line_end":306,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045649,"byte_end":13045729,"line_start":307,"line_end":307,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045734,"byte_end":13045808,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045813,"byte_end":13045816,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045821,"byte_end":13045879,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045884,"byte_end":13045887,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045892,"byte_end":13045903,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045908,"byte_end":13045965,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13045970,"byte_end":13046002,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/                            |  // will block","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046007,"byte_end":13046054,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046059,"byte_end":13046113,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ // may deadlock            |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046118,"byte_end":13046150,"line_start":317,"line_end":317,"column_start":5,"column_end":37}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046155,"byte_end":13046187,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046192,"byte_end":13046199,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046204,"byte_end":13046218,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046223,"byte_end":13046226,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046231,"byte_end":13046265,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046270,"byte_end":13046273,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046278,"byte_end":13046292,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046297,"byte_end":13046300,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046305,"byte_end":13046312,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046317,"byte_end":13046344,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046349,"byte_end":13046352,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046357,"byte_end":13046399,"line_start":329,"line_end":329,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046404,"byte_end":13046442,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046447,"byte_end":13046454,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047938,"byte_end":13047955,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"borrow_and_update","qualname":"<Receiver<T>>::borrow_and_update","value":"pub fn borrow_and_update(&mut Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value and mark that value\n as seen.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value and mark that value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046584,"byte_end":13046659,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ as seen.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046664,"byte_end":13046676,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046681,"byte_end":13046684,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method marks the value as seen, so [`changed`] will not return","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046689,"byte_end":13046760,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ immediately if the newest value is one previously returned by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046765,"byte_end":13046830,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/ `borrow_and_update`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046835,"byte_end":13046859,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046864,"byte_end":13046867,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046872,"byte_end":13046948,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13046953,"byte_end":13047029,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047034,"byte_end":13047065,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047070,"byte_end":13047073,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047078,"byte_end":13047149,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047154,"byte_end":13047233,"line_start":349,"line_end":349,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047238,"byte_end":13047318,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047323,"byte_end":13047397,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047402,"byte_end":13047405,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047410,"byte_end":13047468,"line_start":353,"line_end":353,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047473,"byte_end":13047476,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047481,"byte_end":13047492,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)                |  // Task 2 (on thread B)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047497,"byte_end":13047566,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ let _ref1 = rx1.borrow_and_update();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047571,"byte_end":13047615,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/                                        |  // will block","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047620,"byte_end":13047679,"line_start":358,"line_end":358,"column_start":5,"column_end":64}},{"value":"/                                        |  let _ = tx.send(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047684,"byte_end":13047750,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ // may deadlock                        |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047755,"byte_end":13047799,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/ let _ref2 = rx2.borrow_and_update();   |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047804,"byte_end":13047848,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047853,"byte_end":13047860,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047865,"byte_end":13047879,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047884,"byte_end":13047887,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13047892,"byte_end":13047926,"line_start":365,"line_end":365,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049143,"byte_end":13049154,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"has_changed","qualname":"<Receiver<T>>::has_changed","value":"pub fn has_changed(&Self) -> Result<bool, error::RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Checks if this channel contains a message that this receiver has not yet\n seen. The new value is not marked as seen.","sig":null,"attributes":[{"value":"/ Checks if this channel contains a message that this receiver has not yet","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048130,"byte_end":13048206,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/ seen. The new value is not marked as seen.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048211,"byte_end":13048257,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048262,"byte_end":13048265,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Although this method is called `has_changed`, it does not check new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048270,"byte_end":13048341,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/ messages for equality, so this call will return true even if the new","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048346,"byte_end":13048418,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ message is equal to the old message.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048423,"byte_end":13048463,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048468,"byte_end":13048471,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the channel has been closed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048476,"byte_end":13048528,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048533,"byte_end":13048547,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048552,"byte_end":13048555,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048560,"byte_end":13048567,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048572,"byte_end":13048599,"line_start":383,"line_end":383,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048604,"byte_end":13048607,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048612,"byte_end":13048630,"line_start":385,"line_end":385,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048635,"byte_end":13048656,"line_start":386,"line_end":386,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048661,"byte_end":13048712,"line_start":387,"line_end":387,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048717,"byte_end":13048720,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048725,"byte_end":13048761,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048766,"byte_end":13048769,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.has_changed().unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048774,"byte_end":13048817,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*rx.borrow_and_update(), \"goodbye\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048822,"byte_end":13048877,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048882,"byte_end":13048885,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/     // The value has been marked as seen","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048890,"byte_end":13048934,"line_start":394,"line_end":394,"column_start":5,"column_end":49}},{"value":"/     assert!(!rx.has_changed().unwrap());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048939,"byte_end":13048983,"line_start":395,"line_end":395,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048988,"byte_end":13048991,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13048996,"byte_end":13049013,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049018,"byte_end":13049061,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.has_changed().is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049066,"byte_end":13049109,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049114,"byte_end":13049119,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049124,"byte_end":13049131,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050945,"byte_end":13050952,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a change notification, then marks the newest value as seen.","sig":null,"attributes":[{"value":"/ Waits for a change notification, then marks the newest value as seen.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049508,"byte_end":13049581,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049586,"byte_end":13049589,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the newest value in the channel has not yet been marked seen when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049594,"byte_end":13049666,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/ this method is called, the method marks that value seen and returns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049671,"byte_end":13049742,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/ immediately. If the newest value has already been marked seen, then the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049747,"byte_end":13049822,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ method sleeps until a new message is sent by the [`Sender`] connected to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049827,"byte_end":13049903,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ this `Receiver`, or until the [`Sender`] is dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049908,"byte_end":13049964,"line_start":420,"line_end":420,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049969,"byte_end":13049972,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if and only if the [`Sender`] is dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13049977,"byte_end":13050051,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050056,"byte_end":13050059,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050064,"byte_end":13050083,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050088,"byte_end":13050091,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If you use it as the event in a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050096,"byte_end":13050159,"line_start":426,"line_end":426,"column_start":5,"column_end":68}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050164,"byte_end":13050233,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ completes first, then it is guaranteed that no values have been marked","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050238,"byte_end":13050312,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ seen by this call to `changed`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050317,"byte_end":13050352,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050357,"byte_end":13050360,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050365,"byte_end":13050394,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050399,"byte_end":13050402,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050407,"byte_end":13050421,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050426,"byte_end":13050429,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050434,"byte_end":13050441,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050446,"byte_end":13050473,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050478,"byte_end":13050481,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050486,"byte_end":13050504,"line_start":438,"line_end":438,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050509,"byte_end":13050530,"line_start":439,"line_end":439,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050535,"byte_end":13050586,"line_start":440,"line_end":440,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050591,"byte_end":13050594,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050599,"byte_end":13050632,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050637,"byte_end":13050677,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050682,"byte_end":13050693,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050698,"byte_end":13050701,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050706,"byte_end":13050750,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050755,"byte_end":13050799,"line_start":447,"line_end":447,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050804,"byte_end":13050807,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050812,"byte_end":13050855,"line_start":449,"line_end":449,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050860,"byte_end":13050905,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050910,"byte_end":13050915,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13050920,"byte_end":13050927,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5142},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053041,"byte_end":13053045,"line_start":523,"line_end":523,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052840,"byte_end":13052903,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052908,"byte_end":13052911,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method fails if the channel has been closed, which happens when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052916,"byte_end":13052988,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/ every receiver has been dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052993,"byte_end":13053029,"line_start":522,"line_end":522,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053897,"byte_end":13053909,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"send_replace","qualname":"<Sender<T>>::send_replace","value":"pub fn send_replace(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers and returning\n the previous value in the channel.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers and returning","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053356,"byte_end":13053432,"line_start":533,"line_end":533,"column_start":5,"column_end":81}},{"value":"/ the previous value in the channel.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053437,"byte_end":13053475,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053480,"byte_end":13053483,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This can be useful for reusing the buffers inside a watched value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053488,"byte_end":13053558,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/ Additionally, this method permits sending values even when there are no","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053563,"byte_end":13053638,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ receivers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053643,"byte_end":13053657,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053662,"byte_end":13053665,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053670,"byte_end":13053684,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053689,"byte_end":13053692,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053697,"byte_end":13053704,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053709,"byte_end":13053736,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053741,"byte_end":13053744,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let (tx, _rx) = watch::channel(1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053749,"byte_end":13053787,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(2), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053792,"byte_end":13053830,"line_start":546,"line_end":546,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(3), 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053835,"byte_end":13053873,"line_start":547,"line_end":547,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13053878,"byte_end":13053885,"line_start":548,"line_end":548,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5144},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055067,"byte_end":13055073,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054605,"byte_end":13054660,"line_start":573,"line_end":573,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054665,"byte_end":13054668,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054673,"byte_end":13054749,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054754,"byte_end":13054830,"line_start":576,"line_end":576,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054835,"byte_end":13054866,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054871,"byte_end":13054874,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054879,"byte_end":13054893,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054898,"byte_end":13054901,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054906,"byte_end":13054913,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054918,"byte_end":13054945,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054950,"byte_end":13054953,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13054958,"byte_end":13055000,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055005,"byte_end":13055043,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055048,"byte_end":13055055,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5145},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055501,"byte_end":13055510,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055185,"byte_end":13055259,"line_start":592,"line_end":592,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055264,"byte_end":13055281,"line_start":593,"line_end":593,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055286,"byte_end":13055289,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055294,"byte_end":13055308,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055313,"byte_end":13055316,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055321,"byte_end":13055328,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055333,"byte_end":13055384,"line_start":598,"line_end":598,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055389,"byte_end":13055418,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055423,"byte_end":13055426,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055431,"byte_end":13055444,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055449,"byte_end":13055477,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055482,"byte_end":13055489,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5146},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056431,"byte_end":13056437,"line_start":637,"line_end":637,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055574,"byte_end":13055620,"line_start":608,"line_end":608,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055625,"byte_end":13055628,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055633,"byte_end":13055707,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055712,"byte_end":13055767,"line_start":611,"line_end":611,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055772,"byte_end":13055775,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055780,"byte_end":13055799,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055804,"byte_end":13055807,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055812,"byte_end":13055887,"line_start":615,"line_end":615,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055892,"byte_end":13055961,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055966,"byte_end":13055969,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055974,"byte_end":13055988,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13055993,"byte_end":13055996,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056001,"byte_end":13056008,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056013,"byte_end":13056040,"line_start":621,"line_end":621,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056045,"byte_end":13056048,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056053,"byte_end":13056071,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056076,"byte_end":13056097,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056102,"byte_end":13056149,"line_start":625,"line_end":625,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056154,"byte_end":13056157,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056162,"byte_end":13056195,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056200,"byte_end":13056223,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056228,"byte_end":13056249,"line_start":629,"line_end":629,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056254,"byte_end":13056265,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056270,"byte_end":13056273,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056278,"byte_end":13056311,"line_start":632,"line_end":632,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056316,"byte_end":13056342,"line_start":633,"line_end":633,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056347,"byte_end":13056391,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056396,"byte_end":13056401,"line_start":635,"line_end":635,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056406,"byte_end":13056413,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5149},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058472,"byte_end":13058481,"line_start":706,"line_end":706,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] connected to this `Sender`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] connected to this `Sender`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056808,"byte_end":13056866,"line_start":651,"line_end":651,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056871,"byte_end":13056874,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ All messages sent before this call to `subscribe` are initially marked","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056879,"byte_end":13056953,"line_start":653,"line_end":653,"column_start":5,"column_end":79}},{"value":"/ as seen by the new `Receiver`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056958,"byte_end":13056992,"line_start":654,"line_end":654,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13056997,"byte_end":13057000,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ This method can be called even if there are no other receivers. In this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057005,"byte_end":13057080,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ case, the channel is reopened.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057085,"byte_end":13057119,"line_start":657,"line_end":657,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057124,"byte_end":13057127,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057132,"byte_end":13057146,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057151,"byte_end":13057154,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ The new channel will receive messages sent on this `Sender`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057159,"byte_end":13057223,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057228,"byte_end":13057231,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057236,"byte_end":13057243,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057248,"byte_end":13057275,"line_start":664,"line_end":664,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057280,"byte_end":13057283,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057288,"byte_end":13057306,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057311,"byte_end":13057332,"line_start":667,"line_end":667,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057337,"byte_end":13057382,"line_start":668,"line_end":668,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057387,"byte_end":13057390,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057395,"byte_end":13057423,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057428,"byte_end":13057431,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/     let rx = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057436,"byte_end":13057468,"line_start":672,"line_end":672,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(5, *rx.borrow());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057473,"byte_end":13057509,"line_start":673,"line_end":673,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057514,"byte_end":13057517,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057522,"byte_end":13057551,"line_start":675,"line_end":675,"column_start":5,"column_end":34}},{"value":"/     assert_eq!(10, *rx.borrow());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057556,"byte_end":13057593,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057598,"byte_end":13057603,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057608,"byte_end":13057615,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057620,"byte_end":13057623,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The most recent message is considered seen by the channel, so this test","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057628,"byte_end":13057703,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ is guaranteed to pass.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057708,"byte_end":13057734,"line_start":681,"line_end":681,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057739,"byte_end":13057742,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057747,"byte_end":13057754,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057759,"byte_end":13057786,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/ use tokio::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057791,"byte_end":13057821,"line_start":685,"line_end":685,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057826,"byte_end":13057829,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057834,"byte_end":13057852,"line_start":687,"line_end":687,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057857,"byte_end":13057878,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057883,"byte_end":13057928,"line_start":689,"line_end":689,"column_start":5,"column_end":50}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057933,"byte_end":13057961,"line_start":690,"line_end":690,"column_start":5,"column_end":33}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13057966,"byte_end":13058002,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058007,"byte_end":13058010,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058015,"byte_end":13058048,"line_start":693,"line_end":693,"column_start":5,"column_end":38}},{"value":"/         // by spawning and sleeping, the message is sent after `main`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058053,"byte_end":13058126,"line_start":694,"line_end":694,"column_start":5,"column_end":78}},{"value":"/         // hits the call to `changed`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058131,"byte_end":13058173,"line_start":695,"line_end":695,"column_start":5,"column_end":47}},{"value":"/         # if false {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058178,"byte_end":13058202,"line_start":696,"line_end":696,"column_start":5,"column_end":29}},{"value":"/         tokio::time::sleep(Duration::from_millis(10)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058207,"byte_end":13058271,"line_start":697,"line_end":697,"column_start":5,"column_end":69}},{"value":"/         # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058276,"byte_end":13058291,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/         tx.send(100).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058296,"byte_end":13058330,"line_start":699,"line_end":699,"column_start":5,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058335,"byte_end":13058346,"line_start":700,"line_end":700,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058351,"byte_end":13058354,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/     rx.changed().await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058359,"byte_end":13058395,"line_start":702,"line_end":702,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(100, *rx.borrow());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058400,"byte_end":13058438,"line_start":703,"line_end":703,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058443,"byte_end":13058448,"line_start":704,"line_end":704,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058453,"byte_end":13058460,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5150},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059252,"byte_end":13059266,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers that currently exist.","sig":null,"attributes":[{"value":"/ Returns the number of receivers that currently exist.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058812,"byte_end":13058869,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058874,"byte_end":13058877,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058882,"byte_end":13058896,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058901,"byte_end":13058904,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058909,"byte_end":13058916,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058921,"byte_end":13058948,"line_start":720,"line_end":720,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058953,"byte_end":13058956,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058961,"byte_end":13058979,"line_start":722,"line_end":722,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13058984,"byte_end":13059005,"line_start":723,"line_end":723,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx1) = watch::channel(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059010,"byte_end":13059058,"line_start":724,"line_end":724,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059063,"byte_end":13059066,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059071,"byte_end":13059114,"line_start":726,"line_end":726,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059119,"byte_end":13059122,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = rx1.clone();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059127,"byte_end":13059162,"line_start":728,"line_end":728,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059167,"byte_end":13059170,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059175,"byte_end":13059218,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059223,"byte_end":13059228,"line_start":731,"line_end":731,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059233,"byte_end":13059240,"line_start":732,"line_end":732,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5517},{"krate":0,"index":5521},{"krate":0,"index":5524},{"krate":0,"index":5535},{"krate":0,"index":5538},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5765},{"krate":0,"index":5768},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5794},{"krate":0,"index":5797}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129192,"byte_end":129223,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129224,"byte_end":129227,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129228,"byte_end":129250,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129251,"byte_end":129254,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129255,"byte_end":129336,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129337,"byte_end":129417,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129418,"byte_end":129498,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129499,"byte_end":129573,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129574,"byte_end":129649,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129650,"byte_end":129672,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129673,"byte_end":129676,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129677,"byte_end":129712,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129713,"byte_end":129716,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129717,"byte_end":129791,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129792,"byte_end":129871,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129872,"byte_end":129944,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":129945,"byte_end":130020,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130021,"byte_end":130074,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130075,"byte_end":130078,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130079,"byte_end":130156,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130157,"byte_end":130230,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130231,"byte_end":130310,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130311,"byte_end":130389,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130390,"byte_end":130462,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130463,"byte_end":130538,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130539,"byte_end":130613,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130614,"byte_end":130689,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130690,"byte_end":130720,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130721,"byte_end":130724,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130725,"byte_end":130803,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130804,"byte_end":130879,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130880,"byte_end":130957,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":130958,"byte_end":131037,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131038,"byte_end":131116,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131117,"byte_end":131192,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131193,"byte_end":131268,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131269,"byte_end":131330,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131331,"byte_end":131334,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131335,"byte_end":131359,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131360,"byte_end":131424,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131425,"byte_end":131485,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131486,"byte_end":131575,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131576,"byte_end":131664,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131665,"byte_end":131668,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131669,"byte_end":131694,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131695,"byte_end":131698,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131699,"byte_end":131766,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131767,"byte_end":131770,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131771,"byte_end":131787,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131788,"byte_end":131791,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131792,"byte_end":131871,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131872,"byte_end":131951,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":131952,"byte_end":132031,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132032,"byte_end":132099,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132100,"byte_end":132103,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132104,"byte_end":132111,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132112,"byte_end":132132,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132133,"byte_end":132136,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132137,"byte_end":132159,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132160,"byte_end":132183,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132184,"byte_end":132220,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132221,"byte_end":132228,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132229,"byte_end":132236,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132237,"byte_end":132244,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132245,"byte_end":132248,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132249,"byte_end":132328,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132329,"byte_end":132407,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132408,"byte_end":132442,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132443,"byte_end":132446,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132447,"byte_end":132454,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132455,"byte_end":132475,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132476,"byte_end":132479,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132480,"byte_end":132560,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132561,"byte_end":132595,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132596,"byte_end":132610,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132611,"byte_end":132633,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132634,"byte_end":132641,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132642,"byte_end":132645,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132646,"byte_end":132656,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132657,"byte_end":132660,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132661,"byte_end":132705,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132706,"byte_end":132735,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132736,"byte_end":132775,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132776,"byte_end":132788,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132789,"byte_end":132796,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132797,"byte_end":132804,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132805,"byte_end":132808,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132809,"byte_end":132889,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132890,"byte_end":132965,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132966,"byte_end":132978,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132979,"byte_end":132982,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132983,"byte_end":132990,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":132991,"byte_end":133011,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133012,"byte_end":133015,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133016,"byte_end":133054,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133055,"byte_end":133089,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133090,"byte_end":133131,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133132,"byte_end":133139,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133140,"byte_end":133143,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133144,"byte_end":133202,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133203,"byte_end":133236,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133237,"byte_end":133244,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133245,"byte_end":133252,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133253,"byte_end":133256,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133257,"byte_end":133325,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133326,"byte_end":133354,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133355,"byte_end":133358,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133359,"byte_end":133400,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133401,"byte_end":133434,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133435,"byte_end":133481,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133482,"byte_end":133525,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133526,"byte_end":133568,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133569,"byte_end":133610,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133611,"byte_end":133614,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133615,"byte_end":133644,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133645,"byte_end":133648,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133649,"byte_end":133729,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133730,"byte_end":133809,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133810,"byte_end":133889,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133890,"byte_end":133930,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133931,"byte_end":133934,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":133935,"byte_end":134009,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134010,"byte_end":134090,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134091,"byte_end":134094,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134095,"byte_end":134175,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134176,"byte_end":134253,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134254,"byte_end":134334,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134335,"byte_end":134350,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134351,"byte_end":134354,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134355,"byte_end":134378,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134379,"byte_end":134382,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134383,"byte_end":134463,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134464,"byte_end":134530,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134531,"byte_end":134598,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134599,"byte_end":134673,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134674,"byte_end":134686,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134687,"byte_end":134690,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134691,"byte_end":134698,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134699,"byte_end":134719,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134720,"byte_end":134723,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134724,"byte_end":134747,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134748,"byte_end":134777,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134778,"byte_end":134840,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134841,"byte_end":134848,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134849,"byte_end":134856,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134857,"byte_end":134864,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134865,"byte_end":134868,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134869,"byte_end":134943,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":134944,"byte_end":135011,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135012,"byte_end":135015,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135016,"byte_end":135027,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135028,"byte_end":135050,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135051,"byte_end":135115,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135116,"byte_end":135156,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135157,"byte_end":135219,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135220,"byte_end":135248,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135249,"byte_end":135256,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135257,"byte_end":135260,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135261,"byte_end":135290,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135291,"byte_end":135336,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135337,"byte_end":135349,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135350,"byte_end":135357,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135358,"byte_end":135365,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135366,"byte_end":135369,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135370,"byte_end":135393,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135394,"byte_end":135397,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135398,"byte_end":135488,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135489,"byte_end":135563,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135564,"byte_end":135640,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135641,"byte_end":135715,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135716,"byte_end":135795,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135796,"byte_end":135878,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135879,"byte_end":135900,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135901,"byte_end":135904,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135905,"byte_end":135921,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135922,"byte_end":135925,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135926,"byte_end":135933,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135934,"byte_end":135954,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135955,"byte_end":135958,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135959,"byte_end":135982,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":135983,"byte_end":136025,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136026,"byte_end":136088,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136089,"byte_end":136117,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136118,"byte_end":136125,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136126,"byte_end":136129,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136130,"byte_end":136175,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136176,"byte_end":136183,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136184,"byte_end":136191,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136192,"byte_end":136195,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136196,"byte_end":136214,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136215,"byte_end":136218,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136219,"byte_end":136293,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136294,"byte_end":136372,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136373,"byte_end":136449,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136450,"byte_end":136507,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136508,"byte_end":136586,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136587,"byte_end":136615,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136616,"byte_end":136619,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136620,"byte_end":136631,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136632,"byte_end":136652,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136653,"byte_end":136656,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136657,"byte_end":136695,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136696,"byte_end":136707,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136708,"byte_end":136735,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136736,"byte_end":136754,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136755,"byte_end":136797,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136798,"byte_end":136809,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136810,"byte_end":136813,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136814,"byte_end":136881,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136882,"byte_end":136914,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136915,"byte_end":136951,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136952,"byte_end":136957,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136958,"byte_end":136971,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136972,"byte_end":136979,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136980,"byte_end":136987,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136988,"byte_end":136991,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":136992,"byte_end":137022,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137023,"byte_end":137026,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137027,"byte_end":137104,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137105,"byte_end":137184,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137185,"byte_end":137258,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137259,"byte_end":137335,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137336,"byte_end":137413,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137414,"byte_end":137490,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137491,"byte_end":137556,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137557,"byte_end":137560,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137561,"byte_end":137597,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137598,"byte_end":137601,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137602,"byte_end":137609,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137610,"byte_end":137654,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137655,"byte_end":137711,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137712,"byte_end":137761,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137762,"byte_end":137767,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137768,"byte_end":137775,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137776,"byte_end":137779,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137780,"byte_end":137855,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137856,"byte_end":137935,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":137936,"byte_end":138010,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138011,"byte_end":138014,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138015,"byte_end":138094,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138095,"byte_end":138167,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138168,"byte_end":138171,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138172,"byte_end":138175,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138176,"byte_end":138198,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138199,"byte_end":138202,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138203,"byte_end":138293,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138294,"byte_end":138392,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138393,"byte_end":138416,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138417,"byte_end":138420,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138421,"byte_end":138428,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138429,"byte_end":138449,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138450,"byte_end":138473,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138474,"byte_end":138508,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138509,"byte_end":138512,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138513,"byte_end":138534,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138535,"byte_end":138588,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138589,"byte_end":138592,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138593,"byte_end":138619,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138620,"byte_end":138652,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138653,"byte_end":138752,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138753,"byte_end":138846,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138847,"byte_end":138875,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138876,"byte_end":138885,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138886,"byte_end":138892,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138893,"byte_end":138896,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138897,"byte_end":138932,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138933,"byte_end":138940,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138941,"byte_end":138948,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138949,"byte_end":138952,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":138953,"byte_end":139010,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139011,"byte_end":139068,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139069,"byte_end":139132,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139133,"byte_end":139182,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139183,"byte_end":139232,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139233,"byte_end":139290,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":139291,"byte_end":139337,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":5801},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/blocking.rs","byte_start":13069958,"byte_end":13069972,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/blocking.rs","byte_start":13069931,"byte_end":13069946,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5804},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/spawn.rs","byte_start":13073800,"byte_end":13073805,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/spawn.rs","byte_start":13073773,"byte_end":13073788,"line_start":124,"line_end":124,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5552},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076421,"byte_end":13076430,"line_start":37,"line_end":37,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"/ Yields execution back to the Tokio runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074708,"byte_end":13074755,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074756,"byte_end":13074759,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A task yields by awaiting on `yield_now()`, and may resume when that future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074760,"byte_end":13074839,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ completes (with no output.) The current task will be re-added as a pending","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074840,"byte_end":13074918,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ task at the _back_ of the pending queue. Any other pending tasks will be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074919,"byte_end":13074995,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ scheduled. No other waking is required for the task to continue.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13074996,"byte_end":13075064,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075065,"byte_end":13075068,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#yield_now).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075069,"byte_end":13075143,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075144,"byte_end":13075147,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Non-guarantees","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075148,"byte_end":13075169,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075170,"byte_end":13075173,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function may not yield all the way up to the executor if there are any","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075174,"byte_end":13075253,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ special combinators above it in the call stack. For example, if a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075254,"byte_end":13075323,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ [`tokio::select!`] has another branch complete during the same poll as the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075324,"byte_end":13075402,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ `yield_now()`, then the yield is not propagated all the way up to the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075403,"byte_end":13075476,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075477,"byte_end":13075489,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075490,"byte_end":13075493,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It is generally not guaranteed that the runtime behaves like you expect it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075494,"byte_end":13075572,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to when deciding which task to schedule next after a call to `yield_now()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075573,"byte_end":13075652,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ In particular, the runtime may choose to poll the task that just ran","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075653,"byte_end":13075725,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ `yield_now()` again immediately without polling any other tasks first. For","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075726,"byte_end":13075804,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ example, the runtime will not drive the IO driver between every poll of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075805,"byte_end":13075882,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ task, and this could result in the runtime polling the current task again","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075883,"byte_end":13075960,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ immediately even if there is another task that could make progress if that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13075961,"byte_end":13076039,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ other task is waiting for a notification from the IO driver.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076040,"byte_end":13076104,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076105,"byte_end":13076108,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In general, changes to the order in which the runtime polls tasks is not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076109,"byte_end":13076185,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ considered a breaking change, and your program should be correct no matter","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076186,"byte_end":13076264,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ which order the runtime polls your tasks in.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076265,"byte_end":13076313,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076314,"byte_end":13076317,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`tokio::select!`]: macro@crate::select","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076318,"byte_end":13076361,"line_start":35,"line_end":35,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5808},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13084461,"byte_end":13084469,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":5817},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13086424,"byte_end":13086435,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13086397,"byte_end":13086412,"line_start":289,"line_end":289,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13087520,"byte_end":13087523,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13087475,"byte_end":13087508,"line_start":330,"line_end":330,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089191,"byte_end":13089202,"line_start":383,"line_end":383,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088008,"byte_end":13088058,"line_start":346,"line_end":346,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088063,"byte_end":13088066,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088071,"byte_end":13088131,"line_start":348,"line_end":348,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088136,"byte_end":13088139,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088144,"byte_end":13088216,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088221,"byte_end":13088291,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088296,"byte_end":13088307,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088312,"byte_end":13088332,"line_start":353,"line_end":353,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088337,"byte_end":13088340,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088345,"byte_end":13088363,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088368,"byte_end":13088389,"line_start":356,"line_end":356,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088394,"byte_end":13088436,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088441,"byte_end":13088444,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088449,"byte_end":13088521,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088526,"byte_end":13088579,"line_start":360,"line_end":360,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088584,"byte_end":13088617,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088622,"byte_end":13088639,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088644,"byte_end":13088655,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088660,"byte_end":13088663,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088668,"byte_end":13088702,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088707,"byte_end":13088743,"line_start":366,"line_end":366,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088748,"byte_end":13088766,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088771,"byte_end":13088788,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088793,"byte_end":13088796,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088801,"byte_end":13088872,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088877,"byte_end":13088927,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088932,"byte_end":13088965,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088970,"byte_end":13088987,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13088992,"byte_end":13089003,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089008,"byte_end":13089011,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089016,"byte_end":13089052,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089057,"byte_end":13089075,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089080,"byte_end":13089097,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089102,"byte_end":13089107,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089112,"byte_end":13089119,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089124,"byte_end":13089159,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089164,"byte_end":13089179,"line_start":382,"line_end":382,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092118,"byte_end":13092126,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089663,"byte_end":13089737,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089742,"byte_end":13089801,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089806,"byte_end":13089809,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089814,"byte_end":13089881,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089886,"byte_end":13089959,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13089964,"byte_end":13090040,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090045,"byte_end":13090125,"line_start":406,"line_end":406,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090130,"byte_end":13090149,"line_start":407,"line_end":407,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090154,"byte_end":13090157,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090162,"byte_end":13090228,"line_start":409,"line_end":409,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090233,"byte_end":13090236,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090241,"byte_end":13090253,"line_start":411,"line_end":411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090258,"byte_end":13090261,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090266,"byte_end":13090338,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090343,"byte_end":13090416,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090421,"byte_end":13090424,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090429,"byte_end":13090440,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090445,"byte_end":13090448,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090453,"byte_end":13090527,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090532,"byte_end":13090607,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090612,"byte_end":13090687,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090692,"byte_end":13090769,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090774,"byte_end":13090777,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090782,"byte_end":13090815,"line_start":423,"line_end":423,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090820,"byte_end":13090839,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090844,"byte_end":13090876,"line_start":425,"line_end":425,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090881,"byte_end":13090901,"line_start":426,"line_end":426,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090906,"byte_end":13090909,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090914,"byte_end":13090952,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13090957,"byte_end":13090995,"line_start":429,"line_end":429,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091000,"byte_end":13091031,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091036,"byte_end":13091080,"line_start":431,"line_end":431,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091085,"byte_end":13091144,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091149,"byte_end":13091171,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091176,"byte_end":13091191,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091196,"byte_end":13091214,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091219,"byte_end":13091230,"line_start":436,"line_end":436,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091235,"byte_end":13091263,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091268,"byte_end":13091274,"line_start":438,"line_end":438,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091279,"byte_end":13091286,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091291,"byte_end":13091325,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091330,"byte_end":13091337,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091342,"byte_end":13091374,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091379,"byte_end":13091399,"line_start":443,"line_end":443,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091404,"byte_end":13091407,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091412,"byte_end":13091450,"line_start":445,"line_end":445,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091455,"byte_end":13091493,"line_start":446,"line_end":446,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091498,"byte_end":13091529,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091534,"byte_end":13091578,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091583,"byte_end":13091642,"line_start":449,"line_end":449,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091647,"byte_end":13091669,"line_start":450,"line_end":450,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091674,"byte_end":13091695,"line_start":451,"line_end":451,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091700,"byte_end":13091718,"line_start":452,"line_end":452,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091723,"byte_end":13091734,"line_start":453,"line_end":453,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091739,"byte_end":13091767,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091772,"byte_end":13091778,"line_start":455,"line_end":455,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091783,"byte_end":13091790,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091795,"byte_end":13091798,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091803,"byte_end":13091838,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091843,"byte_end":13091910,"line_start":459,"line_end":459,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091915,"byte_end":13091970,"line_start":460,"line_end":460,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13091975,"byte_end":13092029,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092034,"byte_end":13092056,"line_start":462,"line_end":462,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093374,"byte_end":13093383,"line_start":499,"line_end":499,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the local set, returning its output.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092281,"byte_end":13092352,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092357,"byte_end":13092360,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092365,"byte_end":13092435,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092440,"byte_end":13092516,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092521,"byte_end":13092589,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092594,"byte_end":13092674,"line_start":476,"line_end":476,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092679,"byte_end":13092751,"line_start":477,"line_end":477,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092756,"byte_end":13092831,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092836,"byte_end":13092892,"line_start":479,"line_end":479,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092897,"byte_end":13092900,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092905,"byte_end":13092919,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092924,"byte_end":13092927,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092932,"byte_end":13092943,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092948,"byte_end":13092968,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092973,"byte_end":13092976,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13092981,"byte_end":13092999,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093004,"byte_end":13093025,"line_start":487,"line_end":487,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093030,"byte_end":13093077,"line_start":488,"line_end":488,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093082,"byte_end":13093124,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093129,"byte_end":13093151,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093156,"byte_end":13093186,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093191,"byte_end":13093209,"line_start":492,"line_end":492,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093214,"byte_end":13093231,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093236,"byte_end":13093241,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093246,"byte_end":13093253,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093258,"byte_end":13093261,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093266,"byte_end":13093301,"line_start":497,"line_end":497,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13093306,"byte_end":13093356,"line_start":498,"line_end":498,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5712},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102350,"byte_end":13102358,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":5714}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101471,"byte_end":13101501,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101502,"byte_end":13101505,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101506,"byte_end":13101560,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101561,"byte_end":13101564,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101565,"byte_end":13101631,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101632,"byte_end":13101699,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101700,"byte_end":13101757,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101758,"byte_end":13101827,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101828,"byte_end":13101831,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101832,"byte_end":13101846,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101847,"byte_end":13101850,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101851,"byte_end":13101858,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101859,"byte_end":13101881,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101882,"byte_end":13101906,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101907,"byte_end":13101934,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101935,"byte_end":13101940,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101941,"byte_end":13101944,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101945,"byte_end":13101977,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13101978,"byte_end":13102014,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102015,"byte_end":13102028,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102029,"byte_end":13102032,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102033,"byte_end":13102065,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102066,"byte_end":13102102,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102103,"byte_end":13102106,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102107,"byte_end":13102143,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102144,"byte_end":13102184,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102185,"byte_end":13102202,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102203,"byte_end":13102216,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102217,"byte_end":13102224,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102225,"byte_end":13102232,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102233,"byte_end":13102292,"line_start":94,"line_end":94,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5714},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102400,"byte_end":13102405,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":5712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102927,"byte_end":13102932,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub fn scope<F>(&'static Self, T, F) -> TaskLocalFuture<T, F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102483,"byte_end":13102547,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102552,"byte_end":13102555,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102560,"byte_end":13102621,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102626,"byte_end":13102629,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102634,"byte_end":13102650,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102655,"byte_end":13102658,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102663,"byte_end":13102670,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102675,"byte_end":13102697,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102702,"byte_end":13102726,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102731,"byte_end":13102758,"line_start":111,"line_end":111,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102763,"byte_end":13102768,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102773,"byte_end":13102776,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102781,"byte_end":13102813,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102818,"byte_end":13102873,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102878,"byte_end":13102891,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102896,"byte_end":13102903,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102908,"byte_end":13102915,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103625,"byte_end":13103635,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103189,"byte_end":13103254,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103259,"byte_end":13103262,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103267,"byte_end":13103328,"line_start":133,"line_end":133,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103333,"byte_end":13103336,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103341,"byte_end":13103357,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103362,"byte_end":13103365,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103370,"byte_end":13103377,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103382,"byte_end":13103404,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103409,"byte_end":13103433,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103438,"byte_end":13103465,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103470,"byte_end":13103475,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103480,"byte_end":13103483,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103488,"byte_end":13103517,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103522,"byte_end":13103577,"line_start":144,"line_end":144,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103582,"byte_end":13103589,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103594,"byte_end":13103601,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103606,"byte_end":13103613,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104206,"byte_end":13104210,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13103957,"byte_end":13104023,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104028,"byte_end":13104031,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104036,"byte_end":13104048,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104053,"byte_end":13104056,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104061,"byte_end":13104122,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104127,"byte_end":13104194,"line_start":167,"line_end":167,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104698,"byte_end":13104706,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104451,"byte_end":13104517,"line_start":178,"line_end":178,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104522,"byte_end":13104525,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104530,"byte_end":13104596,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104601,"byte_end":13104666,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13104671,"byte_end":13104686,"line_start":182,"line_end":182,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105166,"byte_end":13105169,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105061,"byte_end":13105103,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105108,"byte_end":13105154,"line_start":199,"line_end":199,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6839},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13106013,"byte_end":13106028,"line_start":233,"line_end":233,"column_start":16,"column_end":31},"name":"TaskLocalFuture","qualname":"::task::task_local::TaskLocalFuture","value":"TaskLocalFuture {  }","parent":null,"children":[{"krate":0,"index":6842},{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6845}],"decl_id":null,"docs":" A future that sets a value `T` of a task local for the future `F` during\n its execution.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5822},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107378,"byte_end":13107389,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":5823}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107253,"byte_end":13107328,"line_start":284,"line_end":284,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6806},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108079,"byte_end":13108092,"line_start":10,"line_end":10,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":6808}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13259813,"byte_end":13259822,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5788},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13109006,"byte_end":13109019,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108663,"byte_end":13108756,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108757,"byte_end":13108854,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108855,"byte_end":13108869,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108870,"byte_end":13108873,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108874,"byte_end":13108952,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":5797},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","byte_start":140041,"byte_end":140048,"line_start":314,"line_end":314,"column_start":13,"column_end":20},"name":"futures","qualname":"::task::futures","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5798}],"decl_id":null,"docs":" Task-related futures.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":26117,"byte_end":26139,"line_start":305,"line_end":305,"column_start":13,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":5839},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5844},{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6246},{"krate":0,"index":6274},{"krate":0,"index":6319},{"krate":0,"index":6322},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6383},{"krate":0,"index":6386},{"krate":0,"index":6389},{"krate":0,"index":6392},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6451},{"krate":0,"index":6454},{"krate":0,"index":6457}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/cfg.rs","byte_start":27116,"byte_end":27140,"line_start":353,"line_end":353,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109086,"byte_end":13109118,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109119,"byte_end":13109122,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109123,"byte_end":13109203,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109204,"byte_end":13109216,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109217,"byte_end":13109220,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * [`Sleep`] is a future that does no work and completes at a specific [`Instant`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109221,"byte_end":13109306,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/   in time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109307,"byte_end":13109321,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109322,"byte_end":13109325,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`Interval`] is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109326,"byte_end":13109398,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/   initialized with a [`Duration`] and repeatedly yields each time the duration","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109399,"byte_end":13109481,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/   elapses.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109482,"byte_end":13109496,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109497,"byte_end":13109500,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Timeout`]: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109501,"byte_end":13109582,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109583,"byte_end":13109655,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109656,"byte_end":13109725,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109726,"byte_end":13109729,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109730,"byte_end":13109801,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109802,"byte_end":13109821,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109822,"byte_end":13109825,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the [`Runtime`](crate::runtime::Runtime).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109826,"byte_end":13109923,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109924,"byte_end":13109927,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109928,"byte_end":13109942,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109943,"byte_end":13109946,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109947,"byte_end":13109993,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109994,"byte_end":13109997,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13109998,"byte_end":13110005,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110006,"byte_end":13110034,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110035,"byte_end":13110062,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110063,"byte_end":13110066,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110067,"byte_end":13110085,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110086,"byte_end":13110107,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110108,"byte_end":13110156,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110157,"byte_end":13110197,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110198,"byte_end":13110203,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110204,"byte_end":13110211,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110212,"byte_end":13110215,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 1s.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110216,"byte_end":13110268,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110269,"byte_end":13110272,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110273,"byte_end":13110280,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110281,"byte_end":13110322,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110323,"byte_end":13110326,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110327,"byte_end":13110355,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110356,"byte_end":13110379,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110380,"byte_end":13110385,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110386,"byte_end":13110389,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110390,"byte_end":13110412,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110413,"byte_end":13110480,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110481,"byte_end":13110484,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110485,"byte_end":13110506,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110507,"byte_end":13110547,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110548,"byte_end":13110553,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110554,"byte_end":13110561,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110562,"byte_end":13110569,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110570,"byte_end":13110573,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110574,"byte_end":13110650,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110651,"byte_end":13110654,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an [`interval`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110655,"byte_end":13110732,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await` may","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110733,"byte_end":13110812,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110813,"byte_end":13110885,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110886,"byte_end":13110947,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110948,"byte_end":13110951,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13110952,"byte_end":13111026,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111027,"byte_end":13111097,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111098,"byte_end":13111110,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111111,"byte_end":13111114,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111115,"byte_end":13111122,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111123,"byte_end":13111143,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111144,"byte_end":13111147,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111148,"byte_end":13111189,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111190,"byte_end":13111216,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111217,"byte_end":13111272,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111273,"byte_end":13111278,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111279,"byte_end":13111282,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111283,"byte_end":13111301,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111302,"byte_end":13111323,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111324,"byte_end":13111396,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111397,"byte_end":13111421,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111422,"byte_end":13111456,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111457,"byte_end":13111502,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111503,"byte_end":13111512,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111513,"byte_end":13111518,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111519,"byte_end":13111526,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111527,"byte_end":13111530,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111531,"byte_end":13111572,"line_start":84,"line_end":84,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":6114},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185487,"byte_end":13185498,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183720,"byte_end":13183758,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183759,"byte_end":13183762,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183763,"byte_end":13183843,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183844,"byte_end":13183921,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183922,"byte_end":13183957,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183958,"byte_end":13183961,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13183962,"byte_end":13184025,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184026,"byte_end":13184029,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184030,"byte_end":13184048,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184049,"byte_end":13184052,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184053,"byte_end":13184138,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184139,"byte_end":13184168,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184169,"byte_end":13184172,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184173,"byte_end":13184187,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184188,"byte_end":13184191,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184192,"byte_end":13184239,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184240,"byte_end":13184243,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184244,"byte_end":13184251,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep_until, Instant, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184252,"byte_end":13184306,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184307,"byte_end":13184310,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184311,"byte_end":13184329,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184330,"byte_end":13184351,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/     sleep_until(Instant::now() + Duration::from_millis(100)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184352,"byte_end":13184423,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184424,"byte_end":13184464,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184465,"byte_end":13184470,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184471,"byte_end":13184478,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184479,"byte_end":13184482,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ See the documentation for the [`Sleep`] type for more examples.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184483,"byte_end":13184550,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184551,"byte_end":13184554,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184555,"byte_end":13184567,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184568,"byte_end":13184571,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function panics if there is no current timer set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184572,"byte_end":13184630,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184631,"byte_end":13184634,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It can be triggered when [`Builder::enable_time`] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184635,"byte_end":13184691,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ [`Builder::enable_all`] are not included in the builder.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184692,"byte_end":13184752,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184753,"byte_end":13184756,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ It can also panic whenever a timer is created outside of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184757,"byte_end":13184819,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ Tokio runtime. That is why `rt.block_on(sleep(...))` will panic,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184820,"byte_end":13184888,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/ since the function is executed outside of the runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184889,"byte_end":13184947,"line_start":51,"line_end":51,"column_start":1,"column_end":59}},{"value":"/ Whereas `rt.block_on(async {sleep(...).await})` doesn't panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13184948,"byte_end":13185014,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ And this is because wrapping the function on an async makes it lazy,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185015,"byte_end":13185087,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ and so gets executed inside the runtime successfully without","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185088,"byte_end":13185152,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"/ panicking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185153,"byte_end":13185167,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185168,"byte_end":13185171,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185172,"byte_end":13185212,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185213,"byte_end":13185254,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185255,"byte_end":13185321,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185322,"byte_end":13185386,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185464,"byte_end":13185479,"line_start":63,"line_end":63,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":6115},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187580,"byte_end":13187585,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185599,"byte_end":13185638,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185639,"byte_end":13185642,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185643,"byte_end":13185718,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185719,"byte_end":13185754,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185755,"byte_end":13185758,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185759,"byte_end":13185839,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185840,"byte_end":13185917,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185918,"byte_end":13185953,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185954,"byte_end":13185957,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13185958,"byte_end":13186021,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186022,"byte_end":13186025,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186026,"byte_end":13186117,"line_start":79,"line_end":79,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186118,"byte_end":13186121,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186122,"byte_end":13186140,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186141,"byte_end":13186144,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186145,"byte_end":13186230,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186231,"byte_end":13186260,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186261,"byte_end":13186264,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186265,"byte_end":13186279,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186280,"byte_end":13186283,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186284,"byte_end":13186331,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186332,"byte_end":13186335,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186336,"byte_end":13186343,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186344,"byte_end":13186383,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186384,"byte_end":13186387,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186388,"byte_end":13186406,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186407,"byte_end":13186428,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186429,"byte_end":13186477,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186478,"byte_end":13186518,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186519,"byte_end":13186524,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186525,"byte_end":13186532,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186533,"byte_end":13186536,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ See the documentation for the [`Sleep`] type for more examples.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186537,"byte_end":13186604,"line_start":100,"line_end":100,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186605,"byte_end":13186608,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186609,"byte_end":13186621,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186622,"byte_end":13186625,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This function panics if there is no current timer set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186626,"byte_end":13186684,"line_start":104,"line_end":104,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186685,"byte_end":13186688,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ It can be triggered when [`Builder::enable_time`] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186689,"byte_end":13186745,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ [`Builder::enable_all`] are not included in the builder.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186746,"byte_end":13186806,"line_start":107,"line_end":107,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186807,"byte_end":13186810,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ It can also panic whenever a timer is created outside of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186811,"byte_end":13186873,"line_start":109,"line_end":109,"column_start":1,"column_end":63}},{"value":"/ Tokio runtime. That is why `rt.block_on(sleep(...))` will panic,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186874,"byte_end":13186942,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/ since the function is executed outside of the runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13186943,"byte_end":13187001,"line_start":111,"line_end":111,"column_start":1,"column_end":59}},{"value":"/ Whereas `rt.block_on(async {sleep(...).await})` doesn't panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187002,"byte_end":13187068,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ And this is because wrapping the function on an async makes it lazy,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187069,"byte_end":13187141,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ and so gets executed inside the runtime successfully without","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187142,"byte_end":13187206,"line_start":114,"line_end":114,"column_start":1,"column_end":65}},{"value":"/ panicking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187207,"byte_end":13187221,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187222,"byte_end":13187225,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187226,"byte_end":13187266,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187267,"byte_end":13187308,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187309,"byte_end":13187375,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187376,"byte_end":13187440,"line_start":120,"line_end":120,"column_start":1,"column_end":65}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13187557,"byte_end":13187572,"line_start":124,"line_end":124,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13190813,"byte_end":13190818,"line_start":226,"line_end":226,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":6776},{"krate":0,"index":6777}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13259813,"byte_end":13259822,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193451,"byte_end":13193459,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193381,"byte_end":13193439,"line_start":313,"line_end":313,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6120},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193660,"byte_end":13193670,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193519,"byte_end":13193561,"line_start":318,"line_end":318,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193566,"byte_end":13193569,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193574,"byte_end":13193648,"line_start":320,"line_end":320,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194718,"byte_end":13194723,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193731,"byte_end":13193781,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193786,"byte_end":13193789,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193794,"byte_end":13193868,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193873,"byte_end":13193940,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193945,"byte_end":13193948,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13193953,"byte_end":13194021,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194026,"byte_end":13194040,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194045,"byte_end":13194048,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194053,"byte_end":13194116,"line_start":333,"line_end":333,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method without consuming the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194121,"byte_end":13194194,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ `Sleep` itself.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194199,"byte_end":13194218,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194223,"byte_end":13194226,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194231,"byte_end":13194244,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194249,"byte_end":13194252,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194257,"byte_end":13194264,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194269,"byte_end":13194310,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194315,"byte_end":13194318,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194323,"byte_end":13194370,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194375,"byte_end":13194398,"line_start":343,"line_end":343,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194403,"byte_end":13194465,"line_start":344,"line_end":344,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194470,"byte_end":13194493,"line_start":345,"line_end":345,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194498,"byte_end":13194501,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194506,"byte_end":13194575,"line_start":347,"line_end":347,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194580,"byte_end":13194587,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194592,"byte_end":13194599,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194604,"byte_end":13194607,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ See also the top-level examples.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194612,"byte_end":13194648,"line_start":351,"line_end":351,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194653,"byte_end":13194656,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13194661,"byte_end":13194706,"line_start":353,"line_end":353,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":6246},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","parent":null,"children":[{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6251},{"krate":0,"index":6540},{"krate":0,"index":6543},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6558},{"krate":0,"index":6560},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6566},{"krate":0,"index":6567},{"krate":0,"index":6254},{"krate":0,"index":6569},{"krate":0,"index":6572},{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6578},{"krate":0,"index":6581},{"krate":0,"index":6256},{"krate":0,"index":6263},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6269},{"krate":0,"index":6271},{"krate":0,"index":6272}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13197886,"byte_end":13197907,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6540},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199094,"byte_end":13199099,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13197959,"byte_end":13198010,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198011,"byte_end":13198014,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198015,"byte_end":13198076,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198077,"byte_end":13198080,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198081,"byte_end":13198155,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198156,"byte_end":13198235,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198236,"byte_end":13198311,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198312,"byte_end":13198387,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198388,"byte_end":13198416,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198417,"byte_end":13198420,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198421,"byte_end":13198498,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198499,"byte_end":13198586,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198587,"byte_end":13198663,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198664,"byte_end":13198744,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198745,"byte_end":13198822,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198823,"byte_end":13198904,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198905,"byte_end":13198987,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198988,"byte_end":13198991,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13198992,"byte_end":13199052,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6569},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199404,"byte_end":13199411,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Errors returned by `Timeout`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199331,"byte_end":13199364,"line_start":43,"line_end":43,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6257},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199588,"byte_end":13199596,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199525,"byte_end":13199576,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6258},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199728,"byte_end":13199739,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199645,"byte_end":13199716,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6259},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199875,"byte_end":13199886,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199809,"byte_end":13199863,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6260},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200023,"byte_end":13200037,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199937,"byte_end":13200011,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6261},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200177,"byte_end":13200184,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a misconfigured timer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200109,"byte_end":13200165,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6262},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200320,"byte_end":13200330,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200232,"byte_end":13200308,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202708,"byte_end":13202715,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6584}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201417,"byte_end":13201474,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201475,"byte_end":13201518,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201519,"byte_end":13201522,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201523,"byte_end":13201600,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201601,"byte_end":13201675,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201676,"byte_end":13201729,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201730,"byte_end":13201733,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201734,"byte_end":13201812,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201813,"byte_end":13201890,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201891,"byte_end":13201967,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13201968,"byte_end":13202042,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202043,"byte_end":13202057,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202058,"byte_end":13202061,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202062,"byte_end":13202142,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202143,"byte_end":13202221,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202222,"byte_end":13202294,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202295,"byte_end":13202309,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202310,"byte_end":13202313,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202314,"byte_end":13202392,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202393,"byte_end":13202404,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202405,"byte_end":13202408,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202409,"byte_end":13202419,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202420,"byte_end":13202423,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202424,"byte_end":13202498,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202499,"byte_end":13202574,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202575,"byte_end":13202635,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202962,"byte_end":13202965,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202769,"byte_end":13202815,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202820,"byte_end":13202823,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202828,"byte_end":13202842,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202847,"byte_end":13202850,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202855,"byte_end":13202862,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202867,"byte_end":13202896,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202901,"byte_end":13202904,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202909,"byte_end":13202938,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202943,"byte_end":13202950,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6286},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203091,"byte_end":13203099,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203015,"byte_end":13203079,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203582,"byte_end":13203590,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203520,"byte_end":13203570,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6289},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203798,"byte_end":13203812,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is later than this one.\n","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203649,"byte_end":13203724,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is later than this one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203729,"byte_end":13203786,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204506,"byte_end":13204528,"line_start":93,"line_end":93,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203919,"byte_end":13203994,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13203999,"byte_end":13204047,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204052,"byte_end":13204055,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204060,"byte_end":13204074,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204079,"byte_end":13204082,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204087,"byte_end":13204094,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204099,"byte_end":13204147,"line_start":82,"line_end":82,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204152,"byte_end":13204155,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204160,"byte_end":13204178,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204183,"byte_end":13204204,"line_start":85,"line_end":85,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204209,"byte_end":13204242,"line_start":86,"line_end":86,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204247,"byte_end":13204288,"line_start":87,"line_end":87,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204293,"byte_end":13204330,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204335,"byte_end":13204397,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204402,"byte_end":13204472,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204477,"byte_end":13204482,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204487,"byte_end":13204494,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6291},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205241,"byte_end":13205266,"line_start":114,"line_end":114,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204640,"byte_end":13204715,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is later than this one.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204720,"byte_end":13204777,"line_start":98,"line_end":98,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204782,"byte_end":13204785,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204790,"byte_end":13204804,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204809,"byte_end":13204812,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204817,"byte_end":13204824,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204829,"byte_end":13204877,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204882,"byte_end":13204885,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204890,"byte_end":13204908,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204913,"byte_end":13204934,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204939,"byte_end":13204972,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13204977,"byte_end":13205018,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205023,"byte_end":13205060,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205065,"byte_end":13205130,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205135,"byte_end":13205207,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205212,"byte_end":13205217,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205222,"byte_end":13205229,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205884,"byte_end":13205891,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created,\n or zero duration if that this instant is in the future.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205373,"byte_end":13205443,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ or zero duration if that this instant is in the future.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205448,"byte_end":13205507,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205512,"byte_end":13205515,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205520,"byte_end":13205534,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205539,"byte_end":13205542,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205547,"byte_end":13205554,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205559,"byte_end":13205607,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205612,"byte_end":13205615,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205620,"byte_end":13205638,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205643,"byte_end":13205664,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205669,"byte_end":13205706,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205711,"byte_end":13205759,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205764,"byte_end":13205796,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205801,"byte_end":13205850,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205855,"byte_end":13205860,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205865,"byte_end":13205872,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6293},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206197,"byte_end":13206208,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13205980,"byte_end":13206055,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206060,"byte_end":13206131,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206136,"byte_end":13206185,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6294},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206547,"byte_end":13206558,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206330,"byte_end":13206405,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206410,"byte_end":13206481,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206486,"byte_end":13206535,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6362},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210427,"byte_end":13210435,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new [`Interval`] that yields with interval of `period`. The first\n tick completes immediately. The default [`MissedTickBehavior`] is\n [`Burst`](MissedTickBehavior::Burst), but this can be configured\n by calling [`set_missed_tick_behavior`](Interval::set_missed_tick_behavior).","sig":null,"attributes":[{"value":"/ Creates new [`Interval`] that yields with interval of `period`. The first","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208375,"byte_end":13208452,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately. The default [`MissedTickBehavior`] is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208453,"byte_end":13208522,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ [`Burst`](MissedTickBehavior::Burst), but this can be configured","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208523,"byte_end":13208591,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ by calling [`set_missed_tick_behavior`](Interval::set_missed_tick_behavior).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208592,"byte_end":13208672,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208673,"byte_end":13208676,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the [`Interval`] value can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208677,"byte_end":13208756,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ be dropped. This cancels the interval.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208757,"byte_end":13208799,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208800,"byte_end":13208803,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208804,"byte_end":13208838,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ [`interval_at(Instant::now(), period)`](interval_at).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208839,"byte_end":13208896,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208897,"byte_end":13208900,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208901,"byte_end":13208913,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208914,"byte_end":13208917,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208918,"byte_end":13208963,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208964,"byte_end":13208967,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208968,"byte_end":13208982,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208983,"byte_end":13208986,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208987,"byte_end":13208994,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13208995,"byte_end":13209033,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209034,"byte_end":13209037,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209038,"byte_end":13209056,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209057,"byte_end":13209078,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209079,"byte_end":13209148,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209149,"byte_end":13209152,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await; // ticks immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209153,"byte_end":13209204,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/     interval.tick().await; // ticks after 10ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209205,"byte_end":13209255,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/     interval.tick().await; // ticks after 10ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209256,"byte_end":13209306,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209307,"byte_end":13209310,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209311,"byte_end":13209354,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209355,"byte_end":13209360,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209361,"byte_end":13209368,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209369,"byte_end":13209372,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209373,"byte_end":13209447,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209448,"byte_end":13209451,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an [`Interval`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209452,"byte_end":13209527,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ measures the time since the last tick, which means that [`.tick().await`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209528,"byte_end":13209605,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209606,"byte_end":13209682,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to [`.tick().await`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209683,"byte_end":13209746,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209747,"byte_end":13209750,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209751,"byte_end":13209825,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209826,"byte_end":13209896,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209897,"byte_end":13209909,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209910,"byte_end":13209913,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209914,"byte_end":13209921,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209922,"byte_end":13209942,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209943,"byte_end":13209946,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209947,"byte_end":13209988,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13209989,"byte_end":13210015,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210016,"byte_end":13210071,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210072,"byte_end":13210077,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210078,"byte_end":13210081,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210082,"byte_end":13210100,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210101,"byte_end":13210122,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210123,"byte_end":13210195,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210196,"byte_end":13210220,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210221,"byte_end":13210255,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210256,"byte_end":13210301,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210302,"byte_end":13210311,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210312,"byte_end":13210317,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210318,"byte_end":13210325,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210326,"byte_end":13210329,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210330,"byte_end":13210365,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/ [`.tick().await`]: Interval::tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210366,"byte_end":13210403,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210404,"byte_end":13210419,"line_start":73,"line_end":73,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":6363},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211626,"byte_end":13211637,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new [`Interval`] that yields with interval of `period` with the\n first tick completing at `start`. The default [`MissedTickBehavior`] is\n [`Burst`](MissedTickBehavior::Burst), but this can be configured\n by calling [`set_missed_tick_behavior`](Interval::set_missed_tick_behavior).","sig":null,"attributes":[{"value":"/ Creates new [`Interval`] that yields with interval of `period` with the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210619,"byte_end":13210694,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ first tick completing at `start`. The default [`MissedTickBehavior`] is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210695,"byte_end":13210770,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/ [`Burst`](MissedTickBehavior::Burst), but this can be configured","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210771,"byte_end":13210839,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ by calling [`set_missed_tick_behavior`](Interval::set_missed_tick_behavior).","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210840,"byte_end":13210920,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210921,"byte_end":13210924,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the [`Interval`] value can","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13210925,"byte_end":13211004,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ be dropped. This cancels the interval.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211005,"byte_end":13211047,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211048,"byte_end":13211051,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211052,"byte_end":13211064,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211065,"byte_end":13211068,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211069,"byte_end":13211114,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211115,"byte_end":13211118,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211119,"byte_end":13211133,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211134,"byte_end":13211137,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211138,"byte_end":13211145,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211146,"byte_end":13211200,"line_start":94,"line_end":94,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211201,"byte_end":13211204,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211205,"byte_end":13211223,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211224,"byte_end":13211245,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211246,"byte_end":13211309,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211310,"byte_end":13211383,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211384,"byte_end":13211387,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await; // ticks after 50ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211388,"byte_end":13211438,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/     interval.tick().await; // ticks after 10ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211439,"byte_end":13211489,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/     interval.tick().await; // ticks after 10ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211490,"byte_end":13211540,"line_start":103,"line_end":103,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211541,"byte_end":13211544,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211545,"byte_end":13211588,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211589,"byte_end":13211594,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211595,"byte_end":13211602,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13211603,"byte_end":13211618,"line_start":108,"line_end":108,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6603},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216361,"byte_end":13216366,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Burst","qualname":"::time::interval::MissedTickBehavior::Burst","value":"MissedTickBehavior::Burst","parent":{"krate":0,"index":6602},"children":[],"decl_id":null,"docs":" Ticks as fast as possible until caught up.","sig":null,"attributes":[{"value":"/ Ticks as fast as possible until caught up.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214176,"byte_end":13214222,"line_start":183,"line_end":183,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214227,"byte_end":13214230,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ When this strategy is used, [`Interval`] schedules ticks \"normally\" (the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214235,"byte_end":13214311,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ same as it would have if the ticks hadn't been delayed), which results","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214316,"byte_end":13214390,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ in it firing ticks as fast as possible until it is caught up in time to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214395,"byte_end":13214470,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ where it should be. Unlike [`Delay`] and [`Skip`], the ticks yielded","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214475,"byte_end":13214547,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ when `Burst` is used (the [`Instant`]s that [`tick`](Interval::tick)","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214552,"byte_end":13214624,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ yields) aren't different than they would have been if a tick had not","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214629,"byte_end":13214701,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ been missed. Like [`Skip`], and unlike [`Delay`], the ticks may be","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214706,"byte_end":13214776,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ shortened.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214781,"byte_end":13214795,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214800,"byte_end":13214803,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This looks something like this:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214808,"byte_end":13214843,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214848,"byte_end":13214859,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/ Expected ticks: |     1     |     2     |     3     |     4     |     5     |     6     |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214864,"byte_end":13214957,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ Actual ticks:   | work -----|          delay          | work | work | work -| work -----|","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214962,"byte_end":13215055,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215060,"byte_end":13215067,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215072,"byte_end":13215075,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ In code:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215080,"byte_end":13215092,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215097,"byte_end":13215100,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215105,"byte_end":13215112,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{interval, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215117,"byte_end":13215159,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/ # async fn task_that_takes_200_millis() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215164,"byte_end":13215210,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215215,"byte_end":13215218,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215223,"byte_end":13215270,"line_start":206,"line_end":206,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215275,"byte_end":13215298,"line_start":207,"line_end":207,"column_start":5,"column_end":28}},{"value":"/ let mut interval = interval(Duration::from_millis(50));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215303,"byte_end":13215362,"line_start":208,"line_end":208,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215367,"byte_end":13215370,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ task_that_takes_200_millis().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215375,"byte_end":13215414,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ // The `Interval` has missed a tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215419,"byte_end":13215458,"line_start":211,"line_end":211,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215463,"byte_end":13215466,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // Since we have exceeded our timeout, this will resolve immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215471,"byte_end":13215543,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215548,"byte_end":13215574,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215579,"byte_end":13215582,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ // Since we are more than 100ms after the start of `interval`, this will","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215587,"byte_end":13215663,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ // also resolve immediately.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215668,"byte_end":13215700,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215705,"byte_end":13215731,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215736,"byte_end":13215739,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ // Also resolves immediately, because it was supposed to resolve at","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215744,"byte_end":13215815,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ // 150ms after the start of `interval`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215820,"byte_end":13215862,"line_start":221,"line_end":221,"column_start":5,"column_end":47}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215867,"byte_end":13215893,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215898,"byte_end":13215901,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ // Resolves immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215906,"byte_end":13215933,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215938,"byte_end":13215964,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215969,"byte_end":13215972,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ // Since we have gotten to 200ms after the start of `interval`, this","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13215977,"byte_end":13216049,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ // will resolve after 50ms","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216054,"byte_end":13216084,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216089,"byte_end":13216115,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216120,"byte_end":13216127,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216132,"byte_end":13216139,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216144,"byte_end":13216147,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This is the default behavior when [`Interval`] is created with","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216152,"byte_end":13216218,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/ [`interval`] and [`interval_at`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216223,"byte_end":13216260,"line_start":234,"line_end":234,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216265,"byte_end":13216268,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: MissedTickBehavior::Delay","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216273,"byte_end":13216313,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ [`Skip`]: MissedTickBehavior::Skip","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216318,"byte_end":13216356,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6605},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218468,"byte_end":13218473,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Delay","qualname":"::time::interval::MissedTickBehavior::Delay","value":"MissedTickBehavior::Delay","parent":{"krate":0,"index":6602},"children":[],"decl_id":null,"docs":" Tick at multiples of `period` from when [`tick`] was called, rather than\n from `start`.","sig":null,"attributes":[{"value":"/ Tick at multiples of `period` from when [`tick`] was called, rather than","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216373,"byte_end":13216449,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ from `start`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216454,"byte_end":13216471,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216476,"byte_end":13216479,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ When this strategy is used and [`Interval`] has missed a tick, instead","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216484,"byte_end":13216558,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ of scheduling ticks to fire at multiples of `period` from `start` (the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216563,"byte_end":13216637,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ time when the first tick was fired), it schedules all future ticks to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216642,"byte_end":13216715,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ happen at a regular `period` from the point when [`tick`] was called.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216720,"byte_end":13216793,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ Unlike [`Burst`] and [`Skip`], ticks are not shortened, and they aren't","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216798,"byte_end":13216873,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ guaranteed to happen at a multiple of `period` from `start` any longer.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216878,"byte_end":13216953,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216958,"byte_end":13216961,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This looks something like this:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13216966,"byte_end":13217001,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217006,"byte_end":13217017,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ Expected ticks: |     1     |     2     |     3     |     4     |     5     |     6     |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217022,"byte_end":13217115,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ Actual ticks:   | work -----|          delay          | work -----| work -----| work -----|","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217120,"byte_end":13217215,"line_start":253,"line_end":253,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217220,"byte_end":13217227,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217232,"byte_end":13217235,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ In code:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217240,"byte_end":13217252,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217257,"byte_end":13217260,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217265,"byte_end":13217272,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{interval, Duration, MissedTickBehavior};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217277,"byte_end":13217339,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/ # async fn task_that_takes_more_than_50_millis() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217344,"byte_end":13217399,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217404,"byte_end":13217407,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217412,"byte_end":13217459,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217464,"byte_end":13217487,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/ let mut interval = interval(Duration::from_millis(50));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217492,"byte_end":13217551,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/ interval.set_missed_tick_behavior(MissedTickBehavior::Delay);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217556,"byte_end":13217621,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217626,"byte_end":13217629,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ task_that_takes_more_than_50_millis().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217634,"byte_end":13217682,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ // The `Interval` has missed a tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217687,"byte_end":13217726,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217731,"byte_end":13217734,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ // Since we have exceeded our timeout, this will resolve immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217739,"byte_end":13217811,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217816,"byte_end":13217842,"line_start":271,"line_end":271,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217847,"byte_end":13217850,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // But this one, rather than also resolving immediately, as might happen","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217855,"byte_end":13217931,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ // with the `Burst` or `Skip` behaviors, will not resolve until","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13217936,"byte_end":13218003,"line_start":274,"line_end":274,"column_start":5,"column_end":72}},{"value":"/ // 50ms after the call to `tick` up above. That is, in `tick`, when we","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218008,"byte_end":13218082,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ // recognize that we missed a tick, we schedule the next tick to happen","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218087,"byte_end":13218162,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ // 50ms (or whatever the `period` is) from right then, not from when","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218167,"byte_end":13218239,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ // were were *supposed* to tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218244,"byte_end":13218279,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218284,"byte_end":13218310,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218315,"byte_end":13218322,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218327,"byte_end":13218334,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218339,"byte_end":13218342,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ [`Burst`]: MissedTickBehavior::Burst","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218347,"byte_end":13218387,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/ [`Skip`]: MissedTickBehavior::Skip","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218392,"byte_end":13218430,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/ [`tick`]: Interval::tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218435,"byte_end":13218463,"line_start":285,"line_end":285,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6607},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220472,"byte_end":13220476,"line_start":333,"line_end":333,"column_start":5,"column_end":9},"name":"Skip","qualname":"::time::interval::MissedTickBehavior::Skip","value":"MissedTickBehavior::Skip","parent":{"krate":0,"index":6602},"children":[],"decl_id":null,"docs":" Skips missed ticks and tick on the next multiple of `period` from\n `start`.","sig":null,"attributes":[{"value":"/ Skips missed ticks and tick on the next multiple of `period` from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218480,"byte_end":13218549,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ `start`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218554,"byte_end":13218566,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218571,"byte_end":13218574,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ When this strategy is used, [`Interval`] schedules the next tick to fire","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218579,"byte_end":13218655,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ at the next-closest tick that is a multiple of `period` away from","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218660,"byte_end":13218729,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ `start` (the point where [`Interval`] first ticked). Like [`Burst`], all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218734,"byte_end":13218810,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ ticks remain multiples of `period` away from `start`, but unlike","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218815,"byte_end":13218883,"line_start":294,"line_end":294,"column_start":5,"column_end":73}},{"value":"/ [`Burst`], the ticks may not be *one* multiple of `period` away from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218888,"byte_end":13218964,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ last tick. Like [`Delay`], the ticks are no longer the same as they","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13218969,"byte_end":13219040,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ would have been if ticks had not been missed, but unlike [`Delay`], and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219045,"byte_end":13219120,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ like [`Burst`], the ticks may be shortened to be less than one `period`","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219125,"byte_end":13219200,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ away from each other.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219205,"byte_end":13219230,"line_start":299,"line_end":299,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219235,"byte_end":13219238,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This looks something like this:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219243,"byte_end":13219278,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/ ```text","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219283,"byte_end":13219294,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/ Expected ticks: |     1     |     2     |     3     |     4     |     5     |     6     |","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219299,"byte_end":13219392,"line_start":303,"line_end":303,"column_start":5,"column_end":98}},{"value":"/ Actual ticks:   | work -----|          delay          | work ---| work -----| work -----|","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219397,"byte_end":13219490,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219495,"byte_end":13219502,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219507,"byte_end":13219510,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ In code:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219515,"byte_end":13219527,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219532,"byte_end":13219535,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219540,"byte_end":13219547,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{interval, Duration, MissedTickBehavior};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219552,"byte_end":13219614,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ # async fn task_that_takes_75_millis() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219619,"byte_end":13219664,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219669,"byte_end":13219672,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219677,"byte_end":13219724,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219729,"byte_end":13219752,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/ let mut interval = interval(Duration::from_millis(50));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219757,"byte_end":13219816,"line_start":315,"line_end":315,"column_start":5,"column_end":64}},{"value":"/ interval.set_missed_tick_behavior(MissedTickBehavior::Skip);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219821,"byte_end":13219885,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219890,"byte_end":13219893,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ task_that_takes_75_millis().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219898,"byte_end":13219936,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/ // The `Interval` has missed a tick","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219941,"byte_end":13219980,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219985,"byte_end":13219988,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ // Since we have exceeded our timeout, this will resolve immediately","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13219993,"byte_end":13220065,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220070,"byte_end":13220096,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220101,"byte_end":13220104,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ // This one will resolve after 25ms, 100ms after the start of","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220109,"byte_end":13220174,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/ // `interval`, which is the closest multiple of `period` from the start","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220179,"byte_end":13220254,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ // of `interval` after the call to `tick` up above.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220259,"byte_end":13220314,"line_start":326,"line_end":326,"column_start":5,"column_end":60}},{"value":"/ interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220319,"byte_end":13220345,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220350,"byte_end":13220357,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220362,"byte_end":13220369,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220374,"byte_end":13220377,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`Burst`]: MissedTickBehavior::Burst","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220382,"byte_end":13220422,"line_start":331,"line_end":331,"column_start":5,"column_end":45}},{"value":"/ [`Delay`]: MissedTickBehavior::Delay","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220427,"byte_end":13220467,"line_start":332,"line_end":332,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":6602},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214151,"byte_end":13214169,"line_start":182,"line_end":182,"column_start":10,"column_end":28},"name":"MissedTickBehavior","qualname":"::time::interval::MissedTickBehavior","value":"pub enum MissedTickBehavior { Burst, Delay, Skip, }","parent":null,"children":[{"krate":0,"index":6603},{"krate":0,"index":6605},{"krate":0,"index":6607}],"decl_id":null,"docs":" Defines the behavior of an [`Interval`] when it misses a tick.","sig":null,"attributes":[{"value":"/ Defines the behavior of an [`Interval`] when it misses a tick.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13212886,"byte_end":13212952,"line_start":149,"line_end":149,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13212953,"byte_end":13212956,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Sometimes, an [`Interval`]'s tick is missed. For example, consider the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13212957,"byte_end":13213031,"line_start":151,"line_end":151,"column_start":1,"column_end":75}},{"value":"/ following:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213032,"byte_end":13213046,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213047,"byte_end":13213050,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213051,"byte_end":13213058,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213059,"byte_end":13213097,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/ # async fn task_that_takes_one_to_three_millis() {}","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213098,"byte_end":13213153,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213154,"byte_end":13213157,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213158,"byte_end":13213176,"line_start":158,"line_end":158,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213177,"byte_end":13213198,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     // ticks every 2 milliseconds","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213199,"byte_end":13213236,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/     let mut interval = time::interval(Duration::from_millis(2));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213237,"byte_end":13213305,"line_start":161,"line_end":161,"column_start":1,"column_end":69}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213306,"byte_end":13213329,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213330,"byte_end":13213364,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/         // if this takes more than 2 milliseconds, a tick will be delayed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213365,"byte_end":13213442,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/         task_that_takes_one_to_three_millis().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213443,"byte_end":13213499,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213500,"byte_end":13213509,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213510,"byte_end":13213515,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213516,"byte_end":13213523,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213524,"byte_end":13213527,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Generally, a tick is missed if too much time is spent without calling","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213528,"byte_end":13213601,"line_start":170,"line_end":170,"column_start":1,"column_end":74}},{"value":"/ [`Interval::tick()`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213602,"byte_end":13213627,"line_start":171,"line_end":171,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213628,"byte_end":13213631,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ By default, when a tick is missed, [`Interval`] fires ticks as quickly as it","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213632,"byte_end":13213712,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/ can until it is \"caught up\" in time to where it should be.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213713,"byte_end":13213775,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/ `MissedTickBehavior` can be used to specify a different behavior for","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213776,"byte_end":13213848,"line_start":175,"line_end":175,"column_start":1,"column_end":73}},{"value":"/ [`Interval`] to exhibit. Each variant represents a different strategy.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213849,"byte_end":13213923,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213924,"byte_end":13213927,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Note that because the executor cannot guarantee exact precision with timers,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13213928,"byte_end":13214008,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/ these strategies will only apply when the delay is greater than 5","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214009,"byte_end":13214078,"line_start":179,"line_end":179,"column_start":1,"column_end":70}},{"value":"/ milliseconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13214079,"byte_end":13214096,"line_start":180,"line_end":180,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6620},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222799,"byte_end":13222807,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623}],"decl_id":null,"docs":" Interval returned by [`interval`] and [`interval_at`].","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`] and [`interval_at`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222260,"byte_end":13222318,"line_start":378,"line_end":378,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222319,"byte_end":13222322,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222323,"byte_end":13222396,"line_start":380,"line_end":380,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`] in a loop, this lets","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222397,"byte_end":13222477,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/ you count the time spent between the calls to [`sleep`] as well.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222478,"byte_end":13222546,"line_start":382,"line_end":382,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222547,"byte_end":13222550,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222551,"byte_end":13222623,"line_start":384,"line_end":384,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222624,"byte_end":13222627,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/latest/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222628,"byte_end":13222736,"line_start":386,"line_end":386,"column_start":1,"column_end":109}},{"value":"/ [`sleep`]: crate::time::sleep","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13222737,"byte_end":13222770,"line_start":387,"line_end":387,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6370},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223953,"byte_end":13223957,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223219,"byte_end":13223288,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223293,"byte_end":13223296,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223301,"byte_end":13223320,"line_start":406,"line_end":406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223325,"byte_end":13223328,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method is cancellation safe. If `tick` is used as the branch in a `tokio::select!` and","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223333,"byte_end":13223428,"line_start":408,"line_end":408,"column_start":5,"column_end":100}},{"value":"/ another branch completes first, then no tick has been consumed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223433,"byte_end":13223500,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223505,"byte_end":13223508,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223513,"byte_end":13223527,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223532,"byte_end":13223535,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223540,"byte_end":13223547,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223552,"byte_end":13223572,"line_start":414,"line_end":414,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223577,"byte_end":13223580,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223585,"byte_end":13223613,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223618,"byte_end":13223621,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223626,"byte_end":13223644,"line_start":418,"line_end":418,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223649,"byte_end":13223670,"line_start":419,"line_end":419,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223675,"byte_end":13223744,"line_start":420,"line_end":420,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223749,"byte_end":13223752,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223757,"byte_end":13223787,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223792,"byte_end":13223822,"line_start":423,"line_end":423,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223827,"byte_end":13223857,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223862,"byte_end":13223865,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223870,"byte_end":13223913,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223918,"byte_end":13223923,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223928,"byte_end":13223935,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6374},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13225128,"byte_end":13225137,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Polls for the next instant in the interval to be reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224504,"byte_end":13224565,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224570,"byte_end":13224573,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224578,"byte_end":13224626,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224631,"byte_end":13224634,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224639,"byte_end":13224707,"line_start":450,"line_end":450,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224712,"byte_end":13224779,"line_start":451,"line_end":451,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224784,"byte_end":13224787,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224792,"byte_end":13224867,"line_start":453,"line_end":453,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224872,"byte_end":13224947,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the [`Waker`](std::task::Waker) from the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13224952,"byte_end":13225023,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ [`Context`] passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13225028,"byte_end":13225100,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/ wakeup.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13225105,"byte_end":13225116,"line_start":457,"line_end":457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6375},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226852,"byte_end":13226857,"line_start":513,"line_end":513,"column_start":12,"column_end":17},"name":"reset","qualname":"<Interval>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the interval to complete one period after the current time.","sig":null,"attributes":[{"value":"/ Resets the interval to complete one period after the current time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226160,"byte_end":13226230,"line_start":487,"line_end":487,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226235,"byte_end":13226238,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This method ignores [`MissedTickBehavior`] strategy.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226243,"byte_end":13226299,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226304,"byte_end":13226307,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226312,"byte_end":13226326,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226331,"byte_end":13226334,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226339,"byte_end":13226346,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226351,"byte_end":13226371,"line_start":494,"line_end":494,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226376,"byte_end":13226379,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226384,"byte_end":13226412,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226417,"byte_end":13226420,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226425,"byte_end":13226443,"line_start":498,"line_end":498,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226448,"byte_end":13226469,"line_start":499,"line_end":499,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(100));","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226474,"byte_end":13226544,"line_start":500,"line_end":500,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226549,"byte_end":13226552,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226557,"byte_end":13226587,"line_start":502,"line_end":502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226592,"byte_end":13226595,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/     time::sleep(Duration::from_millis(50)).await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226600,"byte_end":13226653,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/     interval.reset();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226658,"byte_end":13226683,"line_start":505,"line_end":505,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226688,"byte_end":13226691,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226696,"byte_end":13226726,"line_start":507,"line_end":507,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226731,"byte_end":13226761,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226766,"byte_end":13226769,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/     // approximately 250ms have elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226774,"byte_end":13226818,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226823,"byte_end":13226828,"line_start":511,"line_end":511,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226833,"byte_end":13226840,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6376},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13227028,"byte_end":13227048,"line_start":518,"line_end":518,"column_start":12,"column_end":32},"name":"missed_tick_behavior","qualname":"<Interval>::missed_tick_behavior","value":"pub fn missed_tick_behavior(&Self) -> MissedTickBehavior","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`MissedTickBehavior`] strategy currently being used.\n","sig":null,"attributes":[{"value":"/ Returns the [`MissedTickBehavior`] strategy currently being used.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13226947,"byte_end":13227016,"line_start":517,"line_end":517,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13227202,"byte_end":13227226,"line_start":523,"line_end":523,"column_start":12,"column_end":36},"name":"set_missed_tick_behavior","qualname":"<Interval>::set_missed_tick_behavior","value":"pub fn set_missed_tick_behavior(&mut Self, MissedTickBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`MissedTickBehavior`] strategy that should be used.\n","sig":null,"attributes":[{"value":"/ Sets the [`MissedTickBehavior`] strategy that should be used.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13227125,"byte_end":13227190,"line_start":522,"line_end":522,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13227378,"byte_end":13227384,"line_start":528,"line_end":528,"column_start":12,"column_end":18},"name":"period","qualname":"<Interval>::period","value":"pub fn period(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the period of the interval.\n","sig":null,"attributes":[{"value":"/ Returns the period of the interval.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13227327,"byte_end":13227366,"line_start":527,"line_end":527,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6432},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229594,"byte_end":13229601,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Requires a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Requires a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13227809,"byte_end":13227887,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13227888,"byte_end":13227891,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13227892,"byte_end":13227971,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13227972,"byte_end":13228044,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228045,"byte_end":13228058,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228059,"byte_end":13228062,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228063,"byte_end":13228080,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228081,"byte_end":13228084,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228085,"byte_end":13228163,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228164,"byte_end":13228194,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228195,"byte_end":13228198,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228199,"byte_end":13228279,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228280,"byte_end":13228307,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228308,"byte_end":13228311,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228312,"byte_end":13228326,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228327,"byte_end":13228330,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228331,"byte_end":13228391,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228392,"byte_end":13228395,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228396,"byte_end":13228407,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228408,"byte_end":13228437,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228438,"byte_end":13228467,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228468,"byte_end":13228471,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228472,"byte_end":13228500,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228501,"byte_end":13228504,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228505,"byte_end":13228527,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228528,"byte_end":13228566,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228567,"byte_end":13228594,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228595,"byte_end":13228598,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228599,"byte_end":13228672,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228673,"byte_end":13228739,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228740,"byte_end":13228795,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228796,"byte_end":13228801,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228802,"byte_end":13228809,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228810,"byte_end":13228817,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228818,"byte_end":13228821,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228822,"byte_end":13228834,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228835,"byte_end":13228838,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This function panics if there is no current timer set.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228839,"byte_end":13228897,"line_start":55,"line_end":55,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228898,"byte_end":13228901,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ It can be triggered when [`Builder::enable_time`] or","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228902,"byte_end":13228958,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ [`Builder::enable_all`] are not included in the builder.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13228959,"byte_end":13229019,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229020,"byte_end":13229023,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It can also panic whenever a timer is created outside of a","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229024,"byte_end":13229086,"line_start":60,"line_end":60,"column_start":1,"column_end":63}},{"value":"/ Tokio runtime. That is why `rt.block_on(sleep(...))` will panic,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229087,"byte_end":13229155,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/ since the function is executed outside of the runtime.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229156,"byte_end":13229214,"line_start":62,"line_end":62,"column_start":1,"column_end":59}},{"value":"/ Whereas `rt.block_on(async {sleep(...).await})` doesn't panic.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229215,"byte_end":13229281,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/ And this is because wrapping the function on an async makes it lazy,","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229282,"byte_end":13229354,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ and so gets executed inside the runtime successfully without","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229355,"byte_end":13229419,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/ panicking.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229420,"byte_end":13229434,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229435,"byte_end":13229438,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229439,"byte_end":13229505,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229506,"byte_end":13229570,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"track_caller","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229571,"byte_end":13229586,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":6434},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231005,"byte_end":13231015,"line_start":119,"line_end":119,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Requires a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Requires a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13229973,"byte_end":13230046,"line_start":85,"line_end":85,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230047,"byte_end":13230050,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230051,"byte_end":13230128,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230129,"byte_end":13230184,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230185,"byte_end":13230188,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230189,"byte_end":13230206,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230207,"byte_end":13230210,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230211,"byte_end":13230289,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230290,"byte_end":13230320,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230321,"byte_end":13230324,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230325,"byte_end":13230405,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230406,"byte_end":13230433,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230434,"byte_end":13230437,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230438,"byte_end":13230452,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230453,"byte_end":13230456,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230457,"byte_end":13230517,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230518,"byte_end":13230521,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230522,"byte_end":13230533,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230534,"byte_end":13230577,"line_start":103,"line_end":103,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230578,"byte_end":13230607,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230608,"byte_end":13230611,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230612,"byte_end":13230640,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230641,"byte_end":13230644,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230645,"byte_end":13230667,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230668,"byte_end":13230706,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230707,"byte_end":13230734,"line_start":110,"line_end":110,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230735,"byte_end":13230738,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230739,"byte_end":13230817,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230818,"byte_end":13230832,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230833,"byte_end":13230919,"line_start":114,"line_end":114,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230920,"byte_end":13230975,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230976,"byte_end":13230981,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230982,"byte_end":13230989,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13230990,"byte_end":13230997,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6735},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231390,"byte_end":13231397,"line_start":135,"line_end":135,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":6737},{"krate":0,"index":6738}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13259813,"byte_end":13259822,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6439},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231693,"byte_end":13231700,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231620,"byte_end":13231681,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6440},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231828,"byte_end":13231835,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231747,"byte_end":13231816,"line_start":153,"line_end":153,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6441},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231964,"byte_end":13231974,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231894,"byte_end":13231952,"line_start":158,"line_end":158,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1006},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":146002,"byte_end":146008,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":1005},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145911,"byte_end":145940,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145945,"byte_end":145948,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145953,"byte_end":145992,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1007},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":146039,"byte_end":146045,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":1005},"children":[],"decl_id":null,"docs":" Node type.\n","sig":null,"attributes":[{"value":"/ Node type.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":146015,"byte_end":146029,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":1057},"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17277,"byte_end":17283,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15781,"byte_end":15862,"line_start":427,"line_end":427,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15863,"byte_end":15952,"line_start":428,"line_end":428,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15953,"byte_end":15963,"line_start":429,"line_end":429,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15964,"byte_end":15967,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15968,"byte_end":16017,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16018,"byte_end":16021,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16022,"byte_end":16098,"line_start":433,"line_end":433,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16099,"byte_end":16174,"line_start":434,"line_end":434,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16175,"byte_end":16253,"line_start":435,"line_end":435,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16254,"byte_end":16331,"line_start":436,"line_end":436,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16332,"byte_end":16411,"line_start":437,"line_end":437,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16412,"byte_end":16494,"line_start":438,"line_end":438,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16495,"byte_end":16530,"line_start":439,"line_end":439,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16531,"byte_end":16534,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16535,"byte_end":16614,"line_start":441,"line_end":441,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16615,"byte_end":16697,"line_start":442,"line_end":442,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16698,"byte_end":16777,"line_start":443,"line_end":443,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16778,"byte_end":16781,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16782,"byte_end":16832,"line_start":445,"line_end":445,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16833,"byte_end":16883,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16884,"byte_end":16938,"line_start":447,"line_end":447,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16939,"byte_end":16942,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16943,"byte_end":16956,"line_start":449,"line_end":449,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16957,"byte_end":16960,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":16961,"byte_end":17020,"line_start":451,"line_end":451,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17021,"byte_end":17024,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17025,"byte_end":17043,"line_start":453,"line_end":453,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17044,"byte_end":17070,"line_start":454,"line_end":454,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17071,"byte_end":17074,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17075,"byte_end":17125,"line_start":456,"line_end":456,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17126,"byte_end":17129,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17130,"byte_end":17170,"line_start":458,"line_end":458,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17171,"byte_end":17219,"line_start":459,"line_end":459,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17220,"byte_end":17243,"line_start":460,"line_end":460,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17244,"byte_end":17253,"line_start":461,"line_end":461,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17254,"byte_end":17260,"line_start":462,"line_end":462,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":17261,"byte_end":17268,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34441,"byte_end":34450,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34466,"byte_end":34475,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34825,"byte_end":34830,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36556,"byte_end":36562,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36776,"byte_end":36782,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36924,"byte_end":36930,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49934,"byte_end":49937,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":50097,"byte_end":50100,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":50729,"byte_end":50735,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53802,"byte_end":53805,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53948,"byte_end":53951,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":54620,"byte_end":54626,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57620,"byte_end":57623,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57766,"byte_end":57769,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":58160,"byte_end":58166,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":67924,"byte_end":67927,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":68075,"byte_end":68078,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":68955,"byte_end":68958,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":69756,"byte_end":69762,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":70565,"byte_end":70571,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":71377,"byte_end":71383,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":72184,"byte_end":72190,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74064,"byte_end":74071,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":82554,"byte_end":82561,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86225,"byte_end":86235,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86275,"byte_end":86285,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86594,"byte_end":86606,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86646,"byte_end":86658,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86955,"byte_end":86967,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":87007,"byte_end":87019,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97568,"byte_end":97577,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97751,"byte_end":97760,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97907,"byte_end":97916,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":98029,"byte_end":98038,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98382,"byte_end":98391,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98416,"byte_end":98425,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98435,"byte_end":98444,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98936,"byte_end":98945,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":99230,"byte_end":99239,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99580,"byte_end":99589,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99614,"byte_end":99623,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99633,"byte_end":99642,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99827,"byte_end":99836,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":100121,"byte_end":100130,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102645,"byte_end":102653,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102678,"byte_end":102686,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102696,"byte_end":102704,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102885,"byte_end":102893,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":103177,"byte_end":103185,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103525,"byte_end":103536,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103561,"byte_end":103572,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103582,"byte_end":103593,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104282,"byte_end":104293,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104583,"byte_end":104594,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104758,"byte_end":104769,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/mutex.rs","byte_start":105102,"byte_end":105107,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs","byte_start":105785,"byte_end":105795,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12424164,"byte_end":12424170,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12425127,"byte_end":12425133,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12425347,"byte_end":12425353,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":110994,"byte_end":111004,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":111269,"byte_end":111279,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":111805,"byte_end":111810,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":116576,"byte_end":116586,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":116695,"byte_end":116707,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":117062,"byte_end":117078,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":118343,"byte_end":118359,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":118954,"byte_end":118966,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":119146,"byte_end":119151,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":110041,"byte_end":110044,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":110133,"byte_end":110136,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12447834,"byte_end":12447846,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12450794,"byte_end":12450815,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12451531,"byte_end":12451536,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12453176,"byte_end":12453181,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12453311,"byte_end":12453316,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470108,"byte_end":12470114,"line_start":86,"line_end":86,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470139,"byte_end":12470145,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470504,"byte_end":12470508,"line_start":102,"line_end":102,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12471489,"byte_end":12471498,"line_start":131,"line_end":131,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12474365,"byte_end":12474371,"line_start":226,"line_end":226,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12474914,"byte_end":12474921,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12475867,"byte_end":12475876,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478572,"byte_end":12478581,"line_start":116,"line_end":116,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478824,"byte_end":12478833,"line_start":125,"line_end":125,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12479110,"byte_end":12479119,"line_start":134,"line_end":134,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12479153,"byte_end":12479158,"line_start":136,"line_end":136,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12479931,"byte_end":12479938,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12480493,"byte_end":12480500,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1442},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12496030,"byte_end":12496035,"line_start":459,"line_end":459,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501328,"byte_end":12501338,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501375,"byte_end":12501385,"line_start":152,"line_end":152,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501416,"byte_end":12501426,"line_start":154,"line_end":154,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501459,"byte_end":12501469,"line_start":155,"line_end":155,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501485,"byte_end":12501495,"line_start":157,"line_end":157,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12503165,"byte_end":12503175,"line_start":215,"line_end":215,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12503202,"byte_end":12503212,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12504438,"byte_end":12504448,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12504714,"byte_end":12504724,"line_start":268,"line_end":268,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/list.rs","byte_start":12507089,"byte_end":12507099,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/list.rs","byte_start":12510127,"byte_end":12510142,"line_start":174,"line_end":174,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1616},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12515324,"byte_end":12515331,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12517290,"byte_end":12517297,"line_start":118,"line_end":118,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12517387,"byte_end":12517394,"line_start":124,"line_end":124,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12521216,"byte_end":12521221,"line_start":98,"line_end":98,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12535262,"byte_end":12535270,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12537043,"byte_end":12537048,"line_start":576,"line_end":576,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12537207,"byte_end":12537215,"line_start":583,"line_end":583,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/waker.rs","byte_start":12539045,"byte_end":12539053,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460383,"byte_end":12460387,"line_start":187,"line_end":187,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460418,"byte_end":12460422,"line_start":188,"line_end":188,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460706,"byte_end":12460714,"line_start":196,"line_end":196,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460755,"byte_end":12460763,"line_start":197,"line_end":197,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461291,"byte_end":12461302,"line_start":215,"line_end":215,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461333,"byte_end":12461344,"line_start":216,"line_end":216,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12463765,"byte_end":12463769,"line_start":292,"line_end":292,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464021,"byte_end":12464029,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464621,"byte_end":12464625,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464844,"byte_end":12464857,"line_start":342,"line_end":342,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12465023,"byte_end":12465034,"line_start":351,"line_end":351,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466036,"byte_end":12466040,"line_start":394,"line_end":394,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466283,"byte_end":12466294,"line_start":404,"line_end":404,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466544,"byte_end":12466548,"line_start":414,"line_end":414,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466700,"byte_end":12466708,"line_start":420,"line_end":420,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466925,"byte_end":12466929,"line_start":429,"line_end":429,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542107,"byte_end":12542123,"line_start":9,"line_end":9,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542304,"byte_end":12542317,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542442,"byte_end":12542454,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12546328,"byte_end":12546342,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12549115,"byte_end":12549129,"line_start":212,"line_end":212,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12550665,"byte_end":12550679,"line_start":256,"line_end":256,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12550839,"byte_end":12550843,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12551402,"byte_end":12551409,"line_start":286,"line_end":286,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2269},{"krate":0,"index":2273},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12554219,"byte_end":12554226,"line_start":366,"line_end":366,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12555947,"byte_end":12555954,"line_start":424,"line_end":424,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12556122,"byte_end":12556125,"line_start":432,"line_end":432,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12557329,"byte_end":12557335,"line_start":465,"line_end":465,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12557817,"byte_end":12557826,"line_start":486,"line_end":486,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12560416,"byte_end":12560425,"line_start":563,"line_end":563,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12564361,"byte_end":12564365,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12565932,"byte_end":12565944,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568500,"byte_end":12568512,"line_start":207,"line_end":207,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568598,"byte_end":12568610,"line_start":213,"line_end":213,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568771,"byte_end":12568778,"line_start":221,"line_end":221,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12571218,"byte_end":12571223,"line_start":295,"line_end":295,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12574483,"byte_end":12574490,"line_start":392,"line_end":392,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/schedule.rs","byte_start":12574993,"byte_end":12575005,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/shutdown.rs","byte_start":12575769,"byte_end":12575777,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577527,"byte_end":12577539,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577766,"byte_end":12577778,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577808,"byte_end":12577820,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581207,"byte_end":12581214,"line_start":91,"line_end":91,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12597313,"byte_end":12597320,"line_start":614,"line_end":614,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12600061,"byte_end":12600068,"line_start":702,"line_end":702,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/context.rs","byte_start":12604093,"byte_end":12604103,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/driver.rs","byte_start":12608616,"byte_end":12608622,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/driver.rs","byte_start":12609206,"byte_end":12609212,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611579,"byte_end":12611585,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622299,"byte_end":12622314,"line_start":383,"line_end":383,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623230,"byte_end":12623249,"line_start":415,"line_end":415,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623537,"byte_end":12623552,"line_start":425,"line_end":425,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623861,"byte_end":12623876,"line_start":435,"line_end":435,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/spawner.rs","byte_start":12624211,"byte_end":12624218,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12435868,"byte_end":12435875,"line_start":310,"line_end":310,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12446279,"byte_end":12446286,"line_start":590,"line_end":590,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":121622,"byte_end":121628,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":123216,"byte_end":123226,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":124184,"byte_end":124200,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":124332,"byte_end":124348,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":126088,"byte_end":126094,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644772,"byte_end":12644779,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650101,"byte_end":12650118,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657549,"byte_end":12657558,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657734,"byte_end":12657743,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658391,"byte_end":12658400,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658705,"byte_end":12658714,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659637,"byte_end":12659649,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12660027,"byte_end":12660039,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662018,"byte_end":12662022,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662067,"byte_end":12662071,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664845,"byte_end":12664851,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664888,"byte_end":12664894,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664932,"byte_end":12664940,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664977,"byte_end":12664985,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665001,"byte_end":12665007,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12670617,"byte_end":12670621,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671013,"byte_end":12671019,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671199,"byte_end":12671205,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671359,"byte_end":12671367,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676230,"byte_end":12676238,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680698,"byte_end":12680706,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12681332,"byte_end":12681336,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12682115,"byte_end":12682119,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12682780,"byte_end":12682784,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12683532,"byte_end":12683538,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12683953,"byte_end":12683959,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684103,"byte_end":12684111,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684246,"byte_end":12684255,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684428,"byte_end":12684437,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12692203,"byte_end":12692208,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12702247,"byte_end":12702253,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12702735,"byte_end":12702741,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3254},{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706823,"byte_end":12706831,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715389,"byte_end":12715397,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715593,"byte_end":12715601,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715617,"byte_end":12715623,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737543,"byte_end":12737549,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737681,"byte_end":12737687,"line_start":1001,"line_end":1001,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737899,"byte_end":12737905,"line_start":1011,"line_end":1011,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739155,"byte_end":12739161,"line_start":1054,"line_end":1054,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739628,"byte_end":12739634,"line_start":1071,"line_end":1071,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739850,"byte_end":12739861,"line_start":1081,"line_end":1081,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742644,"byte_end":12742655,"line_start":1168,"line_end":1168,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12743318,"byte_end":12743329,"line_start":1191,"line_end":1191,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12744102,"byte_end":12744104,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12744398,"byte_end":12744400,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12745338,"byte_end":12745342,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12745975,"byte_end":12745983,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746249,"byte_end":12746253,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746302,"byte_end":12746306,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746813,"byte_end":12746815,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12747425,"byte_end":12747427,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3522}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12747977,"byte_end":12747979,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3528}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12748318,"byte_end":12748320,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12748643,"byte_end":12748645,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753038,"byte_end":12753040,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753452,"byte_end":12753456,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753641,"byte_end":12753645,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12754646,"byte_end":12754657,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12756699,"byte_end":12756701,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12762415,"byte_end":12762417,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12762694,"byte_end":12762696,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12767019,"byte_end":12767021,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767695,"byte_end":12767710,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767851,"byte_end":12767866,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768539,"byte_end":12768556,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3706}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769555,"byte_end":12769572,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775103,"byte_end":12775118,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3739},{"krate":0,"index":3742},{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779492,"byte_end":12779501,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779661,"byte_end":12779670,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780171,"byte_end":12780183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780216,"byte_end":12780228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780568,"byte_end":12780580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781131,"byte_end":12781143,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781428,"byte_end":12781440,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781683,"byte_end":12781692,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781843,"byte_end":12781852,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782371,"byte_end":12782387,"line_start":111,"line_end":111,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782424,"byte_end":12782440,"line_start":113,"line_end":113,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790130,"byte_end":12790135,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790189,"byte_end":12790194,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790248,"byte_end":12790258,"line_start":189,"line_end":189,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790323,"byte_end":12790338,"line_start":190,"line_end":190,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790403,"byte_end":12790419,"line_start":191,"line_end":191,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790486,"byte_end":12790502,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791183,"byte_end":12791195,"line_start":211,"line_end":211,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3843}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791332,"byte_end":12791344,"line_start":217,"line_end":217,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792152,"byte_end":12792157,"line_start":243,"line_end":243,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3855},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803774,"byte_end":12803779,"line_start":623,"line_end":623,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803863,"byte_end":12803868,"line_start":629,"line_end":629,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3868}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804000,"byte_end":12804005,"line_start":638,"line_end":638,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804396,"byte_end":12804406,"line_start":654,"line_end":654,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808120,"byte_end":12808130,"line_start":777,"line_end":777,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808477,"byte_end":12808487,"line_start":790,"line_end":790,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808634,"byte_end":12808644,"line_start":797,"line_end":797,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808801,"byte_end":12808811,"line_start":803,"line_end":803,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808977,"byte_end":12808987,"line_start":809,"line_end":809,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809156,"byte_end":12809171,"line_start":817,"line_end":817,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810074,"byte_end":12810089,"line_start":846,"line_end":846,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810431,"byte_end":12810446,"line_start":859,"line_end":859,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3906},{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810589,"byte_end":12810604,"line_start":866,"line_end":866,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810757,"byte_end":12810772,"line_start":872,"line_end":872,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810934,"byte_end":12810949,"line_start":878,"line_end":878,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811119,"byte_end":12811135,"line_start":886,"line_end":886,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812973,"byte_end":12812989,"line_start":938,"line_end":938,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813089,"byte_end":12813105,"line_start":944,"line_end":944,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813248,"byte_end":12813264,"line_start":951,"line_end":951,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813417,"byte_end":12813433,"line_start":957,"line_end":957,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813603,"byte_end":12813619,"line_start":963,"line_end":963,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3946}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818676,"byte_end":12818684,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818717,"byte_end":12818725,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819676,"byte_end":12819682,"line_start":204,"line_end":204,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12828070,"byte_end":12828076,"line_start":460,"line_end":460,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12829986,"byte_end":12829994,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12830506,"byte_end":12830514,"line_start":531,"line_end":531,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4035},{"krate":0,"index":4036}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12836376,"byte_end":12836384,"line_start":677,"line_end":677,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12838247,"byte_end":12838253,"line_start":723,"line_end":723,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847710,"byte_end":12847719,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847881,"byte_end":12847890,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847959,"byte_end":12847971,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12848270,"byte_end":12848282,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12849147,"byte_end":12849151,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4124},{"krate":0,"index":4128},{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853286,"byte_end":12853292,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4136},{"krate":0,"index":4138},{"krate":0,"index":4145},{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12862593,"byte_end":12862599,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863049,"byte_end":12863057,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869433,"byte_end":12869441,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869899,"byte_end":12869907,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12870978,"byte_end":12870983,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12874871,"byte_end":12874876,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12874913,"byte_end":12874918,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12875019,"byte_end":12875024,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12875401,"byte_end":12875406,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12876458,"byte_end":12876463,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12879420,"byte_end":12879425,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12883761,"byte_end":12883770,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12897143,"byte_end":12897152,"line_start":468,"line_end":468,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12897351,"byte_end":12897357,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4297},{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12898806,"byte_end":12898813,"line_start":518,"line_end":518,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4300},{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12900359,"byte_end":12900366,"line_start":562,"line_end":562,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12902454,"byte_end":12902461,"line_start":627,"line_end":627,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903711,"byte_end":12903718,"line_start":657,"line_end":657,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903765,"byte_end":12903777,"line_start":661,"line_end":661,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903870,"byte_end":12903882,"line_start":667,"line_end":667,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904026,"byte_end":12904038,"line_start":673,"line_end":673,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904085,"byte_end":12904100,"line_start":677,"line_end":677,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4317},{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904618,"byte_end":12904633,"line_start":692,"line_end":692,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904919,"byte_end":12904934,"line_start":701,"line_end":701,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12905027,"byte_end":12905033,"line_start":706,"line_end":706,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909771,"byte_end":12909780,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926126,"byte_end":12926141,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926386,"byte_end":12926406,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926660,"byte_end":12926675,"line_start":634,"line_end":634,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926783,"byte_end":12926803,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4380}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964273,"byte_end":12964293,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12967770,"byte_end":12967790,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12967931,"byte_end":12967951,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12968137,"byte_end":12968157,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12968339,"byte_end":12968359,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969760,"byte_end":12969781,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4508},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":4516}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976664,"byte_end":12976685,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4519},{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976815,"byte_end":12976836,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976957,"byte_end":12976978,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12977150,"byte_end":12977171,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12977339,"byte_end":12977360,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978845,"byte_end":12978872,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4566},{"krate":0,"index":4569}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12982824,"byte_end":12982851,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12982995,"byte_end":12983022,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983157,"byte_end":12983184,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4584}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983370,"byte_end":12983397,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983579,"byte_end":12983606,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984690,"byte_end":12984705,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4618},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988524,"byte_end":12988539,"line_start":138,"line_end":138,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4626},{"krate":0,"index":4627}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988674,"byte_end":12988689,"line_start":146,"line_end":146,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4631}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988869,"byte_end":12988884,"line_start":155,"line_end":155,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12989060,"byte_end":12989075,"line_start":164,"line_end":164,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990240,"byte_end":12990256,"line_start":26,"line_end":26,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997462,"byte_end":12997478,"line_start":237,"line_end":237,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997612,"byte_end":12997628,"line_start":245,"line_end":245,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997757,"byte_end":12997773,"line_start":251,"line_end":251,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997953,"byte_end":12997969,"line_start":260,"line_end":260,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12998145,"byte_end":12998161,"line_start":269,"line_end":269,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4699}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999403,"byte_end":12999425,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4726},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003670,"byte_end":13003692,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4734},{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003826,"byte_end":13003848,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003977,"byte_end":13003999,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13004179,"byte_end":13004201,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13004377,"byte_end":13004399,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4750}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932411,"byte_end":12932417,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932471,"byte_end":12932477,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932711,"byte_end":12932726,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932784,"byte_end":12932799,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933006,"byte_end":12933026,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933121,"byte_end":12933141,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933240,"byte_end":12933256,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933321,"byte_end":12933342,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933403,"byte_end":12933425,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933493,"byte_end":12933520,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933867,"byte_end":12933883,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933948,"byte_end":12933969,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934030,"byte_end":12934052,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934120,"byte_end":12934147,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934239,"byte_end":12934245,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963241,"byte_end":12963247,"line_start":1065,"line_end":1065,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4832}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963339,"byte_end":12963345,"line_start":1071,"line_end":1071,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13006151,"byte_end":13006162,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13006186,"byte_end":13006197,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13011136,"byte_end":13011147,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4920},{"krate":0,"index":4921}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13019896,"byte_end":13019907,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13019993,"byte_end":13020004,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020137,"byte_end":13020148,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020173,"byte_end":13020184,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020280,"byte_end":13020285,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4934}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022770,"byte_end":13022778,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022886,"byte_end":13022894,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4993}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023099,"byte_end":13023107,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023240,"byte_end":13023248,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023364,"byte_end":13023372,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023397,"byte_end":13023405,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023657,"byte_end":13023665,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5008}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023949,"byte_end":13023957,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5017},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5029},{"krate":0,"index":5035},{"krate":0,"index":5037}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034647,"byte_end":13034655,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034872,"byte_end":13034880,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035323,"byte_end":13035331,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035638,"byte_end":13035646,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035662,"byte_end":13035670,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5049},{"krate":0,"index":5050}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040910,"byte_end":13040919,"line_start":148,"line_end":148,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041099,"byte_end":13041108,"line_start":154,"line_end":154,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041301,"byte_end":13041310,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041472,"byte_end":13041481,"line_start":168,"line_end":168,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042283,"byte_end":13042290,"line_start":194,"line_end":194,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042447,"byte_end":13042460,"line_start":201,"line_end":201,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042758,"byte_end":13042769,"line_start":213,"line_end":213,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044720,"byte_end":13044728,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052254,"byte_end":13052262,"line_start":498,"line_end":498,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052446,"byte_end":13052454,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5139}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052824,"byte_end":13052830,"line_start":518,"line_end":518,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5149},{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059358,"byte_end":13059364,"line_start":738,"line_end":738,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059540,"byte_end":13059543,"line_start":747,"line_end":747,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5156},{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076536,"byte_end":13076544,"line_start":43,"line_end":43,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5558},{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13087460,"byte_end":13087468,"line_start":329,"line_end":329,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5625},{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5642}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13095595,"byte_end":13095603,"line_start":565,"line_end":565,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5646}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13095742,"byte_end":13095750,"line_start":571,"line_end":571,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13096700,"byte_end":13096708,"line_start":595,"line_end":595,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5652}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13096789,"byte_end":13096797,"line_start":601,"line_end":601,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13097646,"byte_end":13097654,"line_start":628,"line_end":628,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5658},{"krate":0,"index":5659}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13098539,"byte_end":13098545,"line_start":659,"line_end":659,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5665}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13099402,"byte_end":13099405,"line_start":686,"line_end":686,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5667},{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102465,"byte_end":13102473,"line_start":101,"line_end":101,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5717},{"krate":0,"index":5719},{"krate":0,"index":5723},{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105043,"byte_end":13105051,"line_start":197,"line_end":197,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105259,"byte_end":13105267,"line_start":205,"line_end":205,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5736}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13106242,"byte_end":13106257,"line_start":246,"line_end":246,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13106534,"byte_end":13106539,"line_start":254,"line_end":254,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107071,"byte_end":13107086,"line_start":276,"line_end":276,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107433,"byte_end":13107444,"line_start":290,"line_end":290,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107588,"byte_end":13107599,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107746,"byte_end":13107757,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108159,"byte_end":13108172,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5787},{"krate":0,"index":5834}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/clock.rs","byte_start":13112608,"byte_end":13112613,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141239,"byte_end":13141248,"line_start":101,"line_end":101,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141332,"byte_end":13141341,"line_start":107,"line_end":107,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5901}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141487,"byte_end":13141496,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13148498,"byte_end":13148508,"line_start":304,"line_end":304,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13148533,"byte_end":13148543,"line_start":305,"line_end":305,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13150033,"byte_end":13150044,"line_start":342,"line_end":342,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13153602,"byte_end":13153619,"line_start":441,"line_end":441,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13153920,"byte_end":13153937,"line_start":450,"line_end":450,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154156,"byte_end":13154167,"line_start":460,"line_end":460,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154192,"byte_end":13154203,"line_start":461,"line_end":461,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154242,"byte_end":13154253,"line_start":463,"line_end":463,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154705,"byte_end":13154715,"line_start":485,"line_end":485,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13157716,"byte_end":13157727,"line_start":564,"line_end":564,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13160110,"byte_end":13160120,"line_start":624,"line_end":624,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5959}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13160609,"byte_end":13160615,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5984},{"krate":0,"index":5985},{"krate":0,"index":5986},{"krate":0,"index":5987}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13161288,"byte_end":13161294,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6506}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13163639,"byte_end":13163645,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/level.rs","byte_start":13176242,"byte_end":13176247,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/level.rs","byte_start":13182373,"byte_end":13182378,"line_start":234,"line_end":234,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6036}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/mod.rs","byte_start":13165267,"byte_end":13165272,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6062},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13191232,"byte_end":13191237,"line_start":251,"line_end":251,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13196751,"byte_end":13196756,"line_start":414,"line_end":414,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6126},{"krate":0,"index":6127}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13123871,"byte_end":13123880,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6183},{"krate":0,"index":6184}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13125498,"byte_end":13125504,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13129123,"byte_end":13129129,"line_start":283,"line_end":283,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6207},{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13134295,"byte_end":13134301,"line_start":424,"line_end":424,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135023,"byte_end":13135029,"line_start":458,"line_end":458,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135289,"byte_end":13135300,"line_start":474,"line_end":474,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6226}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135564,"byte_end":13135575,"line_start":485,"line_end":485,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6229}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135766,"byte_end":13135771,"line_start":496,"line_end":496,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13136484,"byte_end":13136489,"line_start":521,"line_end":521,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6235}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199266,"byte_end":13199271,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6255}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199513,"byte_end":13199518,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":6259},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6262}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200419,"byte_end":13200424,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200451,"byte_end":13200456,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6265}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200918,"byte_end":13200925,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201013,"byte_end":13201020,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201164,"byte_end":13201171,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201208,"byte_end":13201213,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6273}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202755,"byte_end":13202762,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206712,"byte_end":13206719,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6296}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206848,"byte_end":13206855,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206970,"byte_end":13206977,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207142,"byte_end":13207149,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6303}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207254,"byte_end":13207261,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6306}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207427,"byte_end":13207434,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6308},{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207595,"byte_end":13207602,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207709,"byte_end":13207716,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6313}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220486,"byte_end":13220504,"line_start":336,"line_end":336,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13221754,"byte_end":13221772,"line_start":363,"line_end":363,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6368}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223204,"byte_end":13223212,"line_start":403,"line_end":403,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6370},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231490,"byte_end":13231497,"line_start":143,"line_end":143,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6440},{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13232035,"byte_end":13232042,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6444},{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142087,"byte_end":142097,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142134,"byte_end":142144,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142160,"byte_end":142170,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142924,"byte_end":142934,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake_list.rs","byte_start":143247,"byte_end":143255,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake_list.rs","byte_start":144275,"byte_end":144283,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145338,"byte_end":145348,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145418,"byte_end":145428,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148332,"byte_end":148340,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148377,"byte_end":148385,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148436,"byte_end":148446,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148681,"byte_end":148691,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":151697,"byte_end":151707,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":152084,"byte_end":152094,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":152281,"byte_end":152291,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":153673,"byte_end":153681,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":155286,"byte_end":155294,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake.rs","byte_start":13233859,"byte_end":13233867,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13235858,"byte_end":13235869,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13236029,"byte_end":13236040,"line_start":16,"line_end":16,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13236056,"byte_end":13236067,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6689},{"krate":0,"index":6690}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/vec_deque_cell.rs","byte_start":13236643,"byte_end":13236655,"line_start":14,"line_end":14,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/vec_deque_cell.rs","byte_start":13236671,"byte_end":13236683,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6713},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15167,"byte_end":15173,"line_start":371,"line_end":371,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/mod.rs","byte_start":19708,"byte_end":19715,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15226,"byte_end":15228,"line_start":379,"line_end":379,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":136}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15238,"byte_end":15241,"line_start":380,"line_end":380,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":384}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15406,"byte_end":15413,"line_start":393,"line_end":393,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1174}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15644,"byte_end":15648,"line_start":410,"line_end":410,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2928}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641746,"byte_end":12641755,"line_start":439,"line_end":439,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":2957}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641770,"byte_end":12641774,"line_start":441,"line_end":441,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3158}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/mod.rs","byte_start":12689627,"byte_end":12689632,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3754}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12641950,"byte_end":12641957,"line_start":449,"line_end":449,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4052}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mod.rs","byte_start":12642696,"byte_end":12642701,"line_start":472,"line_end":472,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5058}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15693,"byte_end":15697,"line_start":416,"line_end":416,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/lib.rs","byte_start":15761,"byte_end":15765,"line_start":422,"line_end":422,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5839}},{"kind":"Mod","span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/mod.rs","byte_start":13111792,"byte_end":13111797,"line_start":96,"line_end":96,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6246}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34441,"byte_end":34450,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34466,"byte_end":34475,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs","byte_start":34825,"byte_end":34830,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36556,"byte_end":36562,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36776,"byte_end":36782,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/future/poll_fn.rs","byte_start":36924,"byte_end":36930,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":47475,"byte_end":47484,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":199},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":49934,"byte_end":49937,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":50097,"byte_end":50100,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":43300},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_buf_read.rs","byte_start":50729,"byte_end":50735,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53802,"byte_end":53805,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":199}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":53948,"byte_end":53951,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":43300},"to":{"krate":0,"index":199}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_read.rs","byte_start":54620,"byte_end":54626,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":199}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57620,"byte_end":57623,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":57766,"byte_end":57769,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":43300},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_seek.rs","byte_start":58160,"byte_end":58166,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":67924,"byte_end":67927,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":68075,"byte_end":68078,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":43300},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":68955,"byte_end":68958,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":69756,"byte_end":69762,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":70565,"byte_end":70571,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":71377,"byte_end":71383,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/async_write.rs","byte_start":72184,"byte_end":72190,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":10527},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":74064,"byte_end":74071,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/io/read_buf.rs","byte_start":82554,"byte_end":82561,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":85555,"byte_end":85572,"line_start":19,"line_end":19,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":466},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86225,"byte_end":86235,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10744},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86275,"byte_end":86285,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10744},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86594,"byte_end":86606,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10768},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86646,"byte_end":86658,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10768},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":86955,"byte_end":86967,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":10771},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/net/addr.rs","byte_start":87007,"byte_end":87019,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":10771},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97568,"byte_end":97577,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97751,"byte_end":97760,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":97907,"byte_end":97916,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_ptr.rs","byte_start":98029,"byte_end":98038,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98382,"byte_end":98391,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98416,"byte_end":98425,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98435,"byte_end":98444,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":98936,"byte_end":98945,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u16.rs","byte_start":99230,"byte_end":99239,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99580,"byte_end":99589,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99614,"byte_end":99623,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99633,"byte_end":99642,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":99827,"byte_end":99836,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u32.rs","byte_start":100121,"byte_end":100130,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102645,"byte_end":102653,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102678,"byte_end":102686,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102696,"byte_end":102704,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":102885,"byte_end":102893,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_u8.rs","byte_start":103177,"byte_end":103185,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103525,"byte_end":103536,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103561,"byte_end":103572,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":103582,"byte_end":103593,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104282,"byte_end":104293,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104583,"byte_end":104594,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/atomic_usize.rs","byte_start":104758,"byte_end":104769,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/mutex.rs","byte_start":105102,"byte_end":105107,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs","byte_start":105785,"byte_end":105795,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12424164,"byte_end":12424170,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":873}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12425127,"byte_end":12425133,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/either.rs","byte_start":12425347,"byte_end":12425353,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":110994,"byte_end":111004,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":111269,"byte_end":111279,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1150},"to":{"krate":0,"index":873}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":111805,"byte_end":111810,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":116576,"byte_end":116586,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":116695,"byte_end":116707,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":117062,"byte_end":117078,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":118343,"byte_end":118359,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1170},"to":{"krate":0,"index":873}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":118954,"byte_end":118966,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/thread.rs","byte_start":119146,"byte_end":119151,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":109560,"byte_end":109564,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":109567,"byte_end":109571,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":110041,"byte_end":110044,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/park/mod.rs","byte_start":110133,"byte_end":110136,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12447834,"byte_end":12447846,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12450794,"byte_end":12450815,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2025},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12451531,"byte_end":12451536,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12453176,"byte_end":12453181,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/enter.rs","byte_start":12453311,"byte_end":12453316,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470108,"byte_end":12470114,"line_start":86,"line_end":86,"column_start":22,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470139,"byte_end":12470145,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12470504,"byte_end":12470508,"line_start":102,"line_end":102,"column_start":30,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12471489,"byte_end":12471498,"line_start":131,"line_end":131,"column_start":17,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12474365,"byte_end":12474371,"line_start":226,"line_end":226,"column_start":6,"column_end":12},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs","byte_start":12474914,"byte_end":12474921,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12475867,"byte_end":12475876,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478572,"byte_end":12478581,"line_start":116,"line_end":116,"column_start":23,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12478824,"byte_end":12478833,"line_start":125,"line_end":125,"column_start":21,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12479110,"byte_end":12479119,"line_start":134,"line_end":134,"column_start":28,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2055},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/error.rs","byte_start":12479153,"byte_end":12479158,"line_start":136,"line_end":136,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12479931,"byte_end":12479938,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12480493,"byte_end":12480500,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs","byte_start":12496030,"byte_end":12496035,"line_start":459,"line_end":459,"column_start":38,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501328,"byte_end":12501338,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501375,"byte_end":12501385,"line_start":152,"line_end":152,"column_start":31,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501416,"byte_end":12501426,"line_start":154,"line_end":154,"column_start":24,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":8274}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501459,"byte_end":12501469,"line_start":155,"line_end":155,"column_start":27,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12501485,"byte_end":12501495,"line_start":157,"line_end":157,"column_start":9,"column_end":19},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12503165,"byte_end":12503175,"line_start":215,"line_end":215,"column_start":19,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12503202,"byte_end":12503212,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12504438,"byte_end":12504448,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/join.rs","byte_start":12504714,"byte_end":12504724,"line_start":268,"line_end":268,"column_start":24,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/list.rs","byte_start":12507089,"byte_end":12507099,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/list.rs","byte_start":12510127,"byte_end":12510142,"line_start":174,"line_end":174,"column_start":18,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12515324,"byte_end":12515331,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12517290,"byte_end":12517297,"line_start":118,"line_end":118,"column_start":16,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs","byte_start":12517387,"byte_end":12517394,"line_start":124,"line_end":124,"column_start":15,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12521216,"byte_end":12521221,"line_start":98,"line_end":98,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12535262,"byte_end":12535270,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12537043,"byte_end":12537048,"line_start":576,"line_end":576,"column_start":21,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/state.rs","byte_start":12537207,"byte_end":12537215,"line_start":583,"line_end":583,"column_start":21,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/waker.rs","byte_start":12539045,"byte_end":12539053,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1882},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460383,"byte_end":12460387,"line_start":187,"line_end":187,"column_start":25,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460418,"byte_end":12460422,"line_start":188,"line_end":188,"column_start":25,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460706,"byte_end":12460714,"line_start":196,"line_end":196,"column_start":35,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12460755,"byte_end":12460763,"line_start":197,"line_end":197,"column_start":35,"column_end":43},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461291,"byte_end":12461302,"line_start":215,"line_end":215,"column_start":25,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461333,"byte_end":12461344,"line_start":216,"line_end":216,"column_start":25,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461470,"byte_end":12461474,"line_start":221,"line_end":221,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":1958}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12461477,"byte_end":12461482,"line_start":221,"line_end":221,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":1958}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12463765,"byte_end":12463769,"line_start":292,"line_end":292,"column_start":18,"column_end":22},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464021,"byte_end":12464029,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464621,"byte_end":12464625,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12464844,"byte_end":12464857,"line_start":342,"line_end":342,"column_start":19,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12465023,"byte_end":12465034,"line_start":351,"line_end":351,"column_start":19,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466036,"byte_end":12466040,"line_start":394,"line_end":394,"column_start":27,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466283,"byte_end":12466294,"line_start":404,"line_end":404,"column_start":27,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466544,"byte_end":12466548,"line_start":414,"line_end":414,"column_start":24,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466700,"byte_end":12466708,"line_start":420,"line_end":420,"column_start":24,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs","byte_start":12466925,"byte_end":12466929,"line_start":429,"line_end":429,"column_start":38,"column_end":42},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1928},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542107,"byte_end":12542123,"line_start":9,"line_end":9,"column_start":6,"column_end":22},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542304,"byte_end":12542317,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/metrics/mock.rs","byte_start":12542442,"byte_end":12542454,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12546328,"byte_end":12546342,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12549115,"byte_end":12549129,"line_start":212,"line_end":212,"column_start":15,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2222},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12550665,"byte_end":12550679,"line_start":256,"line_end":256,"column_start":21,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2222},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12550839,"byte_end":12550843,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12551402,"byte_end":12551409,"line_start":286,"line_end":286,"column_start":6,"column_end":13},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12554219,"byte_end":12554226,"line_start":366,"line_end":366,"column_start":6,"column_end":13},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12555947,"byte_end":12555954,"line_start":424,"line_end":424,"column_start":21,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2762},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12556122,"byte_end":12556125,"line_start":432,"line_end":432,"column_start":19,"column_end":22},"kind":{"Impl":{"id":135}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":1958}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12557329,"byte_end":12557335,"line_start":465,"line_end":465,"column_start":15,"column_end":21},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2233},"to":{"krate":0,"index":6649}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12557817,"byte_end":12557826,"line_start":486,"line_end":486,"column_start":6,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/basic_scheduler.rs","byte_start":12560416,"byte_end":12560425,"line_start":563,"line_end":563,"column_start":15,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2293},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12564361,"byte_end":12564365,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12565932,"byte_end":12565944,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568500,"byte_end":12568512,"line_start":207,"line_end":207,"column_start":15,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2372},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568598,"byte_end":12568610,"line_start":213,"line_end":213,"column_start":21,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2372},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12568771,"byte_end":12568778,"line_start":221,"line_end":221,"column_start":6,"column_end":13},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12571218,"byte_end":12571223,"line_start":295,"line_end":295,"column_start":6,"column_end":11},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs","byte_start":12574483,"byte_end":12574490,"line_start":392,"line_end":392,"column_start":21,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/schedule.rs","byte_start":12574993,"byte_end":12575005,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2447},"to":{"krate":0,"index":1958}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/shutdown.rs","byte_start":12575769,"byte_end":12575777,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577527,"byte_end":12577539,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577766,"byte_end":12577778,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2482},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs","byte_start":12577808,"byte_end":12577820,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2482},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12581207,"byte_end":12581214,"line_start":91,"line_end":91,"column_start":6,"column_end":13},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12597313,"byte_end":12597320,"line_start":614,"line_end":614,"column_start":10,"column_end":17},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/builder.rs","byte_start":12600061,"byte_end":12600068,"line_start":702,"line_end":702,"column_start":21,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/context.rs","byte_start":12604093,"byte_end":12604103,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/driver.rs","byte_start":12608616,"byte_end":12608622,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/driver.rs","byte_start":12609206,"byte_end":12609212,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2824},"to":{"krate":0,"index":873}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12611579,"byte_end":12611585,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12622299,"byte_end":12622314,"line_start":383,"line_end":383,"column_start":6,"column_end":21},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623230,"byte_end":12623249,"line_start":415,"line_end":415,"column_start":21,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2723},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623537,"byte_end":12623552,"line_start":425,"line_end":425,"column_start":23,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2846},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/handle.rs","byte_start":12623861,"byte_end":12623876,"line_start":435,"line_end":435,"column_start":23,"column_end":38},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2846},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/spawner.rs","byte_start":12624211,"byte_end":12624218,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12435868,"byte_end":12435875,"line_start":310,"line_end":310,"column_start":10,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/mod.rs","byte_start":12446279,"byte_end":12446286,"line_start":590,"line_end":590,"column_start":19,"column_end":26},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2882},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":121622,"byte_end":121628,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":123216,"byte_end":123226,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":124184,"byte_end":124200,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":124332,"byte_end":124348,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2915},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs","byte_start":126088,"byte_end":126094,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12644772,"byte_end":12644779,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/barrier.rs","byte_start":12650101,"byte_end":12650118,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657549,"byte_end":12657558,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12657734,"byte_end":12657743,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5177},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658391,"byte_end":12658400,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5184},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12658705,"byte_end":12658714,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5184},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12659637,"byte_end":12659649,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5196},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12660027,"byte_end":12660039,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5196},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662018,"byte_end":12662022,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3064},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12662067,"byte_end":12662071,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3064},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664845,"byte_end":12664851,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664888,"byte_end":12664894,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664932,"byte_end":12664940,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12664977,"byte_end":12664985,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12665001,"byte_end":12665007,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12670617,"byte_end":12670621,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671013,"byte_end":12671019,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671199,"byte_end":12671205,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12671359,"byte_end":12671367,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12676230,"byte_end":12676238,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12680698,"byte_end":12680706,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12681332,"byte_end":12681336,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12682115,"byte_end":12682119,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3064},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12682780,"byte_end":12682784,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3064},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12683532,"byte_end":12683538,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3055},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12683953,"byte_end":12683959,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684103,"byte_end":12684111,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684246,"byte_end":12684255,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/broadcast.rs","byte_start":12684428,"byte_end":12684437,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12692203,"byte_end":12692208,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12702247,"byte_end":12702253,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/block.rs","byte_start":12702735,"byte_end":12702741,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12706823,"byte_end":12706831,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715389,"byte_end":12715397,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715593,"byte_end":12715601,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12715617,"byte_end":12715623,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737543,"byte_end":12737549,"line_start":993,"line_end":993,"column_start":19,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737681,"byte_end":12737687,"line_start":1001,"line_end":1001,"column_start":24,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12737899,"byte_end":12737905,"line_start":1011,"line_end":1011,"column_start":9,"column_end":15},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739155,"byte_end":12739161,"line_start":1054,"line_end":1054,"column_start":18,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739628,"byte_end":12739634,"line_start":1071,"line_end":1071,"column_start":24,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12739850,"byte_end":12739861,"line_start":1081,"line_end":1081,"column_start":9,"column_end":20},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12742644,"byte_end":12742655,"line_start":1168,"line_end":1168,"column_start":18,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3294},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/bounded.rs","byte_start":12743318,"byte_end":12743329,"line_start":1191,"line_end":1191,"column_start":24,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3294},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12744102,"byte_end":12744104,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3460},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12744398,"byte_end":12744400,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12745338,"byte_end":12745342,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3481},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12745975,"byte_end":12745983,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746249,"byte_end":12746253,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3481},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746302,"byte_end":12746306,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3481},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12746813,"byte_end":12746815,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12747425,"byte_end":12747427,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12747977,"byte_end":12747979,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3460},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12748318,"byte_end":12748320,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3460},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12748643,"byte_end":12748645,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753038,"byte_end":12753040,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753452,"byte_end":12753456,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12753641,"byte_end":12753645,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3481},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/chan.rs","byte_start":12754646,"byte_end":12754657,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":3476}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12756699,"byte_end":12756701,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12762415,"byte_end":12762417,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12762694,"byte_end":12762696,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/list.rs","byte_start":12767019,"byte_end":12767021,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3630},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767695,"byte_end":12767710,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12767851,"byte_end":12767866,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12768539,"byte_end":12768556,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12769555,"byte_end":12769572,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/unbounded.rs","byte_start":12775103,"byte_end":12775118,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779492,"byte_end":12779501,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12779661,"byte_end":12779670,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5218},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780171,"byte_end":12780183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5225},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780216,"byte_end":12780228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5225},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12780568,"byte_end":12780580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5225},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781131,"byte_end":12781143,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5247},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781428,"byte_end":12781440,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5247},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781683,"byte_end":12781692,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5263},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12781843,"byte_end":12781852,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5263},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782371,"byte_end":12782387,"line_start":111,"line_end":111,"column_start":35,"column_end":51},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5273},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mpsc/error.rs","byte_start":12782424,"byte_end":12782440,"line_start":113,"line_end":113,"column_start":30,"column_end":46},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5273},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790130,"byte_end":12790135,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790189,"byte_end":12790194,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790248,"byte_end":12790258,"line_start":189,"line_end":189,"column_start":25,"column_end":35},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790323,"byte_end":12790338,"line_start":190,"line_end":190,"column_start":25,"column_end":40},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790403,"byte_end":12790419,"line_start":191,"line_end":191,"column_start":29,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12790486,"byte_end":12790502,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791183,"byte_end":12791195,"line_start":211,"line_end":211,"column_start":23,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12791332,"byte_end":12791344,"line_start":217,"line_end":217,"column_start":16,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5295},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12792152,"byte_end":12792157,"line_start":243,"line_end":243,"column_start":17,"column_end":22},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803774,"byte_end":12803779,"line_start":623,"line_end":623,"column_start":21,"column_end":26},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12803863,"byte_end":12803868,"line_start":629,"line_end":629,"column_start":21,"column_end":26},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804000,"byte_end":12804005,"line_start":638,"line_end":638,"column_start":37,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12804396,"byte_end":12804406,"line_start":654,"line_end":654,"column_start":21,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808120,"byte_end":12808130,"line_start":777,"line_end":777,"column_start":26,"column_end":36},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808477,"byte_end":12808487,"line_start":790,"line_end":790,"column_start":27,"column_end":37},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808634,"byte_end":12808644,"line_start":797,"line_end":797,"column_start":30,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808801,"byte_end":12808811,"line_start":803,"line_end":803,"column_start":45,"column_end":55},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12808977,"byte_end":12808987,"line_start":809,"line_end":809,"column_start":49,"column_end":59},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12809156,"byte_end":12809171,"line_start":817,"line_end":817,"column_start":17,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810074,"byte_end":12810089,"line_start":846,"line_end":846,"column_start":26,"column_end":41},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810431,"byte_end":12810446,"line_start":859,"line_end":859,"column_start":27,"column_end":42},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810589,"byte_end":12810604,"line_start":866,"line_end":866,"column_start":30,"column_end":45},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810757,"byte_end":12810772,"line_start":872,"line_end":872,"column_start":45,"column_end":60},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12810934,"byte_end":12810949,"line_start":878,"line_end":878,"column_start":49,"column_end":64},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12811119,"byte_end":12811135,"line_start":886,"line_end":886,"column_start":21,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12812973,"byte_end":12812989,"line_start":938,"line_end":938,"column_start":30,"column_end":46},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813089,"byte_end":12813105,"line_start":944,"line_end":944,"column_start":31,"column_end":47},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813248,"byte_end":12813264,"line_start":951,"line_end":951,"column_start":34,"column_end":50},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813417,"byte_end":12813433,"line_start":957,"line_end":957,"column_start":49,"column_end":65},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/mutex.rs","byte_start":12813603,"byte_end":12813619,"line_start":963,"line_end":963,"column_start":53,"column_end":69},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3822},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818676,"byte_end":12818684,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12818717,"byte_end":12818725,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12819676,"byte_end":12819682,"line_start":204,"line_end":204,"column_start":6,"column_end":12},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12828070,"byte_end":12828076,"line_start":460,"line_end":460,"column_start":18,"column_end":24},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5300},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12829986,"byte_end":12829994,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12830506,"byte_end":12830514,"line_start":531,"line_end":531,"column_start":17,"column_end":25},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12836376,"byte_end":12836384,"line_start":677,"line_end":677,"column_start":15,"column_end":23},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/notify.rs","byte_start":12838247,"byte_end":12838253,"line_start":723,"line_end":723,"column_start":35,"column_end":41},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5315},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847710,"byte_end":12847719,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5352},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847881,"byte_end":12847890,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5352},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12847959,"byte_end":12847971,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5364},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12848270,"byte_end":12848282,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5364},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12849147,"byte_end":12849151,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12853286,"byte_end":12853292,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12862593,"byte_end":12862599,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5340},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12863049,"byte_end":12863057,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869433,"byte_end":12869441,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5346},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12869899,"byte_end":12869907,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5346},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12870978,"byte_end":12870983,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12874871,"byte_end":12874876,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12874913,"byte_end":12874918,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12875019,"byte_end":12875024,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12875401,"byte_end":12875406,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12876458,"byte_end":12876463,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/oneshot.rs","byte_start":12879420,"byte_end":12879425,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5377},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12883761,"byte_end":12883770,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12897143,"byte_end":12897152,"line_start":468,"line_end":468,"column_start":21,"column_end":30},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12897351,"byte_end":12897357,"line_start":476,"line_end":476,"column_start":6,"column_end":12},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12898806,"byte_end":12898813,"line_start":518,"line_end":518,"column_start":17,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4265},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12900359,"byte_end":12900366,"line_start":562,"line_end":562,"column_start":10,"column_end":17},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12902454,"byte_end":12902461,"line_start":627,"line_end":627,"column_start":15,"column_end":22},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4265},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903711,"byte_end":12903718,"line_start":657,"line_end":657,"column_start":22,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4265},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903765,"byte_end":12903777,"line_start":661,"line_end":661,"column_start":6,"column_end":18},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12903870,"byte_end":12903882,"line_start":667,"line_end":667,"column_start":23,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5393},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904026,"byte_end":12904038,"line_start":673,"line_end":673,"column_start":28,"column_end":40},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5393},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904085,"byte_end":12904100,"line_start":677,"line_end":677,"column_start":6,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904618,"byte_end":12904633,"line_start":692,"line_end":692,"column_start":23,"column_end":38},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5383},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12904919,"byte_end":12904934,"line_start":701,"line_end":701,"column_start":28,"column_end":43},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5383},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/batch_semaphore.rs","byte_start":12905027,"byte_end":12905033,"line_start":706,"line_end":706,"column_start":35,"column_end":41},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4271},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12909771,"byte_end":12909780,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926126,"byte_end":12926141,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926386,"byte_end":12926406,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926660,"byte_end":12926675,"line_start":634,"line_end":634,"column_start":19,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/semaphore.rs","byte_start":12926783,"byte_end":12926803,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5409},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12964273,"byte_end":12964293,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12967770,"byte_end":12967790,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12967931,"byte_end":12967951,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12968137,"byte_end":12968157,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_read_guard.rs","byte_start":12968339,"byte_end":12968359,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12969760,"byte_end":12969781,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976664,"byte_end":12976685,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976815,"byte_end":12976836,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12976957,"byte_end":12976978,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12977150,"byte_end":12977171,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard.rs","byte_start":12977339,"byte_end":12977360,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12978845,"byte_end":12978872,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12982824,"byte_end":12982851,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12982995,"byte_end":12983022,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983157,"byte_end":12983184,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983370,"byte_end":12983397,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":12983579,"byte_end":12983606,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12984690,"byte_end":12984705,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988524,"byte_end":12988539,"line_start":138,"line_end":138,"column_start":32,"column_end":47},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988674,"byte_end":12988689,"line_start":146,"line_end":146,"column_start":36,"column_end":51},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12988869,"byte_end":12988884,"line_start":155,"line_end":155,"column_start":38,"column_end":53},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/read_guard.rs","byte_start":12989060,"byte_end":12989075,"line_start":164,"line_end":164,"column_start":30,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12990240,"byte_end":12990256,"line_start":26,"line_end":26,"column_start":21,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997462,"byte_end":12997478,"line_start":237,"line_end":237,"column_start":32,"column_end":48},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997612,"byte_end":12997628,"line_start":245,"line_end":245,"column_start":35,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997757,"byte_end":12997773,"line_start":251,"line_end":251,"column_start":36,"column_end":52},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12997953,"byte_end":12997969,"line_start":260,"line_end":260,"column_start":38,"column_end":54},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard.rs","byte_start":12998145,"byte_end":12998161,"line_start":269,"line_end":269,"column_start":30,"column_end":46},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":12999403,"byte_end":12999425,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003670,"byte_end":13003692,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003826,"byte_end":13003848,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13003977,"byte_end":13003999,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13004179,"byte_end":13004201,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13004377,"byte_end":13004399,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932411,"byte_end":12932417,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932471,"byte_end":12932477,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932711,"byte_end":12932726,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12932784,"byte_end":12932799,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933006,"byte_end":12933026,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933121,"byte_end":12933141,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4439},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933240,"byte_end":12933256,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933321,"byte_end":12933342,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933403,"byte_end":12933425,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933493,"byte_end":12933520,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933867,"byte_end":12933883,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12933948,"byte_end":12933969,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934030,"byte_end":12934052,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4716},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934120,"byte_end":12934147,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12934239,"byte_end":12934245,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963241,"byte_end":12963247,"line_start":1065,"line_end":1065,"column_start":21,"column_end":27},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/rwlock.rs","byte_start":12963339,"byte_end":12963345,"line_start":1071,"line_end":1071,"column_start":29,"column_end":35},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13006151,"byte_end":13006162,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13006186,"byte_end":13006197,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":8274}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13011136,"byte_end":13011147,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13019896,"byte_end":13019907,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13019993,"byte_end":13020004,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020137,"byte_end":13020148,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020173,"byte_end":13020184,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/task/atomic_waker.rs","byte_start":13020280,"byte_end":13020285,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"kind":{"Impl":{"id":381}},"from":{"krate":2,"index":12822},"to":{"krate":0,"index":4929}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022770,"byte_end":13022778,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13022886,"byte_end":13022894,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023099,"byte_end":13023107,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023240,"byte_end":13023248,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023364,"byte_end":13023372,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023397,"byte_end":13023405,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023657,"byte_end":13023665,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13023949,"byte_end":13023957,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034647,"byte_end":13034655,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13034872,"byte_end":13034880,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035323,"byte_end":13035331,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5422},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035638,"byte_end":13035646,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5422},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/once_cell.rs","byte_start":13035662,"byte_end":13035670,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13040910,"byte_end":13040919,"line_start":148,"line_end":148,"column_start":42,"column_end":51},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5470},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041099,"byte_end":13041108,"line_start":154,"line_end":154,"column_start":47,"column_end":56},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5470},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041301,"byte_end":13041310,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13041472,"byte_end":13041481,"line_start":168,"line_end":168,"column_start":32,"column_end":41},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5477},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042283,"byte_end":13042290,"line_start":194,"line_end":194,"column_start":10,"column_end":17},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042447,"byte_end":13042460,"line_start":201,"line_end":201,"column_start":10,"column_end":23},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13042758,"byte_end":13042769,"line_start":213,"line_end":213,"column_start":10,"column_end":21},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13044720,"byte_end":13044728,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052254,"byte_end":13052262,"line_start":498,"line_end":498,"column_start":19,"column_end":27},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5439},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052446,"byte_end":13052454,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5439},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13052824,"byte_end":13052830,"line_start":518,"line_end":518,"column_start":9,"column_end":15},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059358,"byte_end":13059364,"line_start":738,"line_end":738,"column_start":18,"column_end":24},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5446},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/sync/watch.rs","byte_start":13059540,"byte_end":13059543,"line_start":747,"line_end":747,"column_start":24,"column_end":27},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5452},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/yield_now.rs","byte_start":13076536,"byte_end":13076544,"line_start":43,"line_end":43,"column_start":21,"column_end":29},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13087460,"byte_end":13087468,"line_start":329,"line_end":329,"column_start":6,"column_end":14},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13095595,"byte_end":13095603,"line_start":565,"line_end":565,"column_start":21,"column_end":29},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5808},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13095742,"byte_end":13095750,"line_start":571,"line_end":571,"column_start":17,"column_end":25},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5808},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13096700,"byte_end":13096708,"line_start":595,"line_end":595,"column_start":18,"column_end":26},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5808},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13096789,"byte_end":13096797,"line_start":601,"line_end":601,"column_start":15,"column_end":23},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5808},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13097646,"byte_end":13097654,"line_start":628,"line_end":628,"column_start":28,"column_end":36},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13098539,"byte_end":13098545,"line_start":659,"line_end":659,"column_start":6,"column_end":12},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/local.rs","byte_start":13099402,"byte_end":13099405,"line_start":686,"line_end":686,"column_start":25,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":1958}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13102465,"byte_end":13102473,"line_start":101,"line_end":101,"column_start":18,"column_end":26},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105043,"byte_end":13105051,"line_start":197,"line_end":197,"column_start":25,"column_end":33},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13105259,"byte_end":13105267,"line_start":205,"line_end":205,"column_start":33,"column_end":41},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5712},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13106242,"byte_end":13106257,"line_start":246,"line_end":246,"column_start":21,"column_end":36},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13106534,"byte_end":13106539,"line_start":254,"line_end":254,"column_start":26,"column_end":31},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5743},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107071,"byte_end":13107086,"line_start":276,"line_end":276,"column_start":40,"column_end":55},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107433,"byte_end":13107444,"line_start":290,"line_end":290,"column_start":21,"column_end":32},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107588,"byte_end":13107599,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/task_local.rs","byte_start":13107746,"byte_end":13107757,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5822},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/task/unconstrained.rs","byte_start":13108159,"byte_end":13108172,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/clock.rs","byte_start":13112608,"byte_end":13112613,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141239,"byte_end":13141248,"line_start":101,"line_end":101,"column_start":18,"column_end":27},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5894},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141332,"byte_end":13141341,"line_start":107,"line_end":107,"column_start":26,"column_end":35},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5894},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13141487,"byte_end":13141496,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13148498,"byte_end":13148508,"line_start":304,"line_end":304,"column_start":22,"column_end":32},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13148533,"byte_end":13148543,"line_start":305,"line_end":305,"column_start":22,"column_end":32},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13150033,"byte_end":13150044,"line_start":342,"line_end":342,"column_start":6,"column_end":17},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13153602,"byte_end":13153619,"line_start":441,"line_end":441,"column_start":26,"column_end":43},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5928},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13153920,"byte_end":13153937,"line_start":450,"line_end":450,"column_start":6,"column_end":23},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154156,"byte_end":13154167,"line_start":460,"line_end":460,"column_start":22,"column_end":33},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6484},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154192,"byte_end":13154203,"line_start":461,"line_end":461,"column_start":22,"column_end":33},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6484},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154242,"byte_end":13154253,"line_start":463,"line_end":463,"column_start":35,"column_end":46},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6484},"to":{"krate":0,"index":1005}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13154705,"byte_end":13154715,"line_start":485,"line_end":485,"column_start":6,"column_end":16},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13157716,"byte_end":13157727,"line_start":564,"line_end":564,"column_start":6,"column_end":17},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/entry.rs","byte_start":13160110,"byte_end":13160120,"line_start":624,"line_end":624,"column_start":15,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13160609,"byte_end":13160615,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13161288,"byte_end":13161294,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/handle.rs","byte_start":13163639,"byte_end":13163645,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6500},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/level.rs","byte_start":13176242,"byte_end":13176247,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/level.rs","byte_start":13182373,"byte_end":13182378,"line_start":234,"line_end":234,"column_start":21,"column_end":26},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6022},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/wheel/mod.rs","byte_start":13165267,"byte_end":13165272,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13191232,"byte_end":13191237,"line_start":251,"line_end":251,"column_start":6,"column_end":11},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/sleep.rs","byte_start":13196751,"byte_end":13196756,"line_start":414,"line_end":414,"column_start":17,"column_end":22},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6775},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13123871,"byte_end":13123880,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13125498,"byte_end":13125504,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13129123,"byte_end":13129129,"line_start":283,"line_end":283,"column_start":6,"column_end":12},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13134295,"byte_end":13134301,"line_start":424,"line_end":424,"column_start":18,"column_end":24},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":873}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135023,"byte_end":13135029,"line_start":458,"line_end":458,"column_start":18,"column_end":24},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6524},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135289,"byte_end":13135300,"line_start":474,"line_end":474,"column_start":25,"column_end":36},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135564,"byte_end":13135575,"line_start":485,"line_end":485,"column_start":36,"column_end":47},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6221},"to":{"krate":0,"index":880}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13135766,"byte_end":13135771,"line_start":496,"line_end":496,"column_start":6,"column_end":11},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/driver/mod.rs","byte_start":13136484,"byte_end":13136489,"line_start":521,"line_end":521,"column_start":21,"column_end":26},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199266,"byte_end":13199271,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13199513,"byte_end":13199518,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200419,"byte_end":13200424,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6540},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200451,"byte_end":13200456,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6540},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13200918,"byte_end":13200925,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201013,"byte_end":13201020,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6569},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201164,"byte_end":13201171,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6569},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/error.rs","byte_start":13201208,"byte_end":13201213,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":466}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13202755,"byte_end":13202762,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206712,"byte_end":13206719,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206848,"byte_end":13206855,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":469}},"from":{"krate":1,"index":11760},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13206970,"byte_end":13206977,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207142,"byte_end":13207149,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3087}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207254,"byte_end":13207261,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207427,"byte_end":13207434,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207595,"byte_end":13207602,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/instant.rs","byte_start":13207709,"byte_end":13207716,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13220486,"byte_end":13220504,"line_start":336,"line_end":336,"column_start":6,"column_end":24},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13221754,"byte_end":13221772,"line_start":363,"line_end":363,"column_start":18,"column_end":36},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/interval.rs","byte_start":13223204,"byte_end":13223212,"line_start":403,"line_end":403,"column_start":6,"column_end":14},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13231490,"byte_end":13231497,"line_start":143,"line_end":143,"column_start":9,"column_end":16},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/time/timeout.rs","byte_start":13232035,"byte_end":13232042,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6735},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142087,"byte_end":142097,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142134,"byte_end":142144,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142160,"byte_end":142170,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/atomic_cell.rs","byte_start":142924,"byte_end":142934,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake_list.rs","byte_start":143247,"byte_end":143255,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake_list.rs","byte_start":144275,"byte_end":144283,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":957},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145338,"byte_end":145348,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":145418,"byte_end":145428,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148332,"byte_end":148340,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148377,"byte_end":148385,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148436,"byte_end":148446,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":148681,"byte_end":148691,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":151697,"byte_end":151707,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":152084,"byte_end":152094,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":152281,"byte_end":152291,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":153673,"byte_end":153681,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/linked_list.rs","byte_start":155286,"byte_end":155294,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake.rs","byte_start":13233513,"byte_end":13233517,"line_start":9,"line_end":9,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":6649}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake.rs","byte_start":13233520,"byte_end":13233524,"line_start":9,"line_end":9,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":6649}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake.rs","byte_start":13233527,"byte_end":13233532,"line_start":9,"line_end":9,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":6649}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/wake.rs","byte_start":13233859,"byte_end":13233867,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6725},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13235858,"byte_end":13235869,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6680},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13236029,"byte_end":13236040,"line_start":16,"line_end":16,"column_start":25,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6680},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/sync_wrapper.rs","byte_start":13236056,"byte_end":13236067,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/vec_deque_cell.rs","byte_start":13236643,"byte_end":13236655,"line_start":14,"line_end":14,"column_start":31,"column_end":43},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6704},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/dumbelldor/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/util/vec_deque_cell.rs","byte_start":13236671,"byte_end":13236683,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6704},"to":{"krate":4294967295,"index":4294967295}}]}